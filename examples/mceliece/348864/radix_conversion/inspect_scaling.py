from scalars import GFBITS, scalars

scalings = []

for idx, poly in enumerate(scalars):
    coeffs = [0 for i in range(64)]
    for i in range(GFBITS):
        for j in range(64):
            if poly[i] & (1 << j):
                coeffs[j] += (1 << i)
    scalings.append(coeffs)

if __name__ == '__main__':
  for idx, coeffs in enumerate(scalings):
    print(idx, '---')
    for i in range(8):
        for j in range(8):
            print(f'{coeffs[i*8+j]:4d}, ', end='')
        print()

'''
0 ---
   1,    1,    6,    6,   20,   20,  120,  120,
 272,  272, 1632, 1632, 1353, 1353, 4031, 4031,
 400,  400, 1376, 1376, 3913, 3913,  932,  932,
2520, 2520, 1227, 1227, 2739, 2739, 4017, 4017,
 436,  436, 1464, 1464, 3481, 3481, 3396, 3396,
3978, 3978,  302,  302, 1764, 1764, 1617, 1617,
1519, 1519, 3179, 3179, 2408, 2408, 1899, 1899,
 883,  883, 2858, 2858, 2791, 2791, 3657, 3657,
1 ---
   1,    1,    1,    1,   18,   18,   18,   18,
 260,  260,  260,  260,  577,  577,  577,  577,
 128,  128,  128,  128, 2304, 2304, 2304, 2304,
 584,  584,  584,  584,    2,    2,    2,    2,
  36,   36,   36,   36,  520,  520,  520,  520,
1154, 1154, 1154, 1154,  256,  256,  256,  256,
 521,  521,  521,  521, 1168, 1168, 1168, 1168,
   4,    4,    4,    4,   72,   72,   72,   72,
2 ---
   1,    1,    1,    1,    1,    1,    1,    1,
 258,  258,  258,  258,  258,  258,  258,  258,
 148,  148,  148,  148,  148,  148,  148,  148,
1385, 1385, 1385, 1385, 1385, 1385, 1385, 1385,
 308,  308,  308,  308,  308,  308,  308,  308,
1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544,
1420, 1420, 1420, 1420, 1420, 1420, 1420, 1420,
3 ---
   1,    1,    1,    1,    1,    1,    1,    1,
   1,    1,    1,    1,    1,    1,    1,    1,
 146,  146,  146,  146,  146,  146,  146,  146,
 146,  146,  146,  146,  146,  146,  146,  146,
 288,  288,  288,  288,  288,  288,  288,  288,
 288,  288,  288,  288,  288,  288,  288,  288,
   8,    8,    8,    8,    8,    8,    8,    8,
   8,    8,    8,    8,    8,    8,    8,    8,
4 ---
   1,    1,    1,    1,    1,    1,    1,    1,
   1,    1,    1,    1,    1,    1,    1,    1,
   1,    1,    1,    1,    1,    1,    1,    1,
   1,    1,    1,    1,    1,    1,    1,    1,
 294,  294,  294,  294,  294,  294,  294,  294,
 294,  294,  294,  294,  294,  294,  294,  294,
 294,  294,  294,  294,  294,  294,  294,  294,
 294,  294,  294,  294,  294,  294,  294,  294,

multiplier each layer is (modulo z^12+z^3+1)
0: z^2+z
1: z^4+z
2: z^8+z
3: z^16+z = z^7+z^4+z
4: z^32+z = z^8+z^5+z^2+z

See the result of compute_scaling.sage for details.
'''
