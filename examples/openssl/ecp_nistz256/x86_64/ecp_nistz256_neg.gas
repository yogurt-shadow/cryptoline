#! $1c(%rdi) = %%EA
#! (%rdi) = %%EA
#! $1c(%rsi) = %%EA
#! (%rsi) = %%EA
#! $1c(%rdx) = %%EA
#! (%rdx) = %%EA
#! $1c(%rbx) = %%EA
#! (%rbx) = %%EA
#! -$1c(%rip) = %%EA
#! %r$1c = %%r$1c
#! %rax = %%rax
#! %rbx = %%rbx
#! %rcx = %%rcx
#! %rdx = %%rdx
#! %rbp = %%rbp
#! %rsi = %%rsi
#! %eax = %%eax

#! add $1v, $2v -> adds carry $2v $2v $1v
#! adc $1v, $2v -> adcs carry $2v $2v $1v carry
#! adc $1c, $2v -> adc $2v $2v $1c@uint64 carry
#! adcx $1v, $2v -> adcs carry $2v $2v $1v carry
#! adox $1v, $2v -> adcs overflow $2v $2v $1v overflow
#! cmovb $1v, $2v -> cmov $2v carry $1v $2v
#! mov $1c, $2v -> mov $2v $1c@uint64
#! mov $1c, $2ea -> mov $2ea $1c@uint64
#! mov $1v, $2v -> mov $2v $1v
#! mov $1ea, $2v -> mov $2v $1ea
#! mov $1v, $2ea -> mov $2ea $1v
#! mulx $1v, $2v, $3v -> mull $3v $2v rdx $1v
#! sbb $1v, $2v -> sbbs carry $2v $2v $1v carry
#! sbb $1c, $2v -> sbbs carry $2v $2v $1c@uint64 carry
#! shlx $1v, $2v, $3v -> assert $1v=32 && true;\nsplit ddc $3v $2v 32;\nshl $3v $3v 32
#! shrx $1v, $2v, $3v -> assert $1v=32 && true;\nsplit $3v dc $2v 32
#! xor $1v, $1v -> mov $1v 0@uint64;\nclear carry;\nclear overflow
#! sub $1ea, $2v -> subb carry $2v $2v $1ea
#! sub $1c, $2v -> subb carry $2v $2v $1c@uint64
#! test $1v, $1v -> subb zero dontcare $1v 1@uint64
#! lea $1ea, $2v -> mov $2v $1ea

#! test \$0x1, $1v -> and tmp@uint64 0x1@uint64 $1v;\nsubb zero dontcare tmp 0x1@uint64
#! or $1v, $2v -> or $2v@uint64 $1v $2v;\nclear carry;\nclear overflow
#! shl \$0x3f, $1v -> split ddc $1v $1v 1;\nshl $1v $1v 63
#! shr $1v -> split $1v dontcare $1v 1
#! cmove $1v, $2v -> cmov $2v zero $1v $2v


ecp_nistz256_neg:
# %rdi = 0x7fffffffdca0
# %rsi = 0x7fffffffdc60
# %rdx = 0x7fffffffdc60
# %rcx = 0x8700000042
# %r8  = 0x8700000042
# %r9  = 0x78ffffffc9
	#! -> SP = 0x7fffffffdc48
	push   %r12                                     #! EA = L0x7fffffffdc40; PC = 0x55555557c420
	push   %r13                                     #! EA = L0x7fffffffdc38; PC = 0x55555557c422
	xor    %r8,%r8                                  #! PC = 0x55555557c424
	xor    %r9,%r9                                  #! PC = 0x55555557c427
	xor    %r10,%r10                                #! PC = 0x55555557c42a
	xor    %r11,%r11                                #! PC = 0x55555557c42d
	xor    %r13,%r13                                #! PC = 0x55555557c430
	sub    (%rsi),%r8                               #! EA = L0x7fffffffdc60; Value = 0x0000000000000000; PC = 0x55555557c433
	sbb    0x8(%rsi),%r9                            #! EA = L0x7fffffffdc68; Value = 0x0000005000000019; PC = 0x55555557c436
	sbb    0x10(%rsi),%r10                          #! EA = L0x7fffffffdc70; Value = 0x0000001000000000; PC = 0x55555557c43a
	mov    %r8,%rax                                 #! PC = 0x55555557c43e
	sbb    0x18(%rsi),%r11                          #! EA = L0x7fffffffdc78; Value = 0x0000000000000000; PC = 0x55555557c441
	lea    -0x44c(%rip),%rsi        # 0x55555557c000#! PC = 0x55555557c445
	mov    %r9,%rdx                                 #! PC = 0x55555557c44c
	sbb    $0x0,%r13                                #! PC = 0x55555557c44f
	add    (%rsi),%r8                               #! EA = L0x55555557c000; Value = 0xffffffffffffffff; PC = 0x55555557c453
	mov    %r10,%rcx                                #! PC = 0x55555557c456
	adc    0x8(%rsi),%r9                            #! EA = L0x55555557c008; Value = 0x00000000ffffffff; PC = 0x55555557c459
	adc    0x10(%rsi),%r10                          #! EA = L0x55555557c010; Value = 0x0000000000000000; PC = 0x55555557c45d
	mov    %r11,%r12                                #! PC = 0x55555557c461
	adc    0x18(%rsi),%r11                          #! EA = L0x55555557c018; Value = 0xffffffff00000001; PC = 0x55555557c464
	test   %r13,%r13                                #! PC = 0x55555557c468
	cmove  %rax,%r8                                 #! PC = 0x55555557c46b
	cmove  %rdx,%r9                                 #! PC = 0x55555557c46f
	mov    %r8,(%rdi)                               #! EA = L0x7fffffffdca0; PC = 0x55555557c473
	cmove  %rcx,%r10                                #! PC = 0x55555557c476
	mov    %r9,0x8(%rdi)                            #! EA = L0x7fffffffdca8; PC = 0x55555557c47a
	cmove  %r12,%r11                                #! PC = 0x55555557c47e
	mov    %r10,0x10(%rdi)                          #! EA = L0x7fffffffdcb0; PC = 0x55555557c482
	mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffdcb8; PC = 0x55555557c486
	mov    (%rsp),%r13                              #! EA = L0x7fffffffdc38; Value = 0x00007fffffffddf8; PC = 0x55555557c48a
	mov    0x8(%rsp),%r12                           #! EA = L0x7fffffffdc40; Value = 0x0000000000000000; PC = 0x55555557c48e
	lea    0x10(%rsp),%rsp                          #! PC = 0x55555557c493
	#! <- SP = 0x7fffffffdc48
	#repz ret                                       #! PC = 0x55555557c498
