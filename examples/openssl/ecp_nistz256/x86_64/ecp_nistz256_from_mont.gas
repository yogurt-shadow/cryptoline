#! $1c(%rdi) = %%EA
#! (%rdi) = %%EA
#! $1c(%rsi) = %%EA
#! (%rsi) = %%EA
#! $1c(%rdx) = %%EA
#! (%rdx) = %%EA
#! $1c(%rbx) = %%EA
#! (%rbx) = %%EA
#! -$1c(%rip) = %%EA
#! %r$1c = %%r$1c
#! %rax = %%rax
#! %rbx = %%rbx
#! %rcx = %%rcx
#! %rdx = %%rdx
#! %rbp = %%rbp
#! %rsi = %%rsi
#! %eax = %%eax

#! add $1v, $2v -> adds carry $2v $2v $1v
#! adc $1v, $2v -> adcs carry $2v $2v $1v carry
#! adc $1c, $2v -> adc $2v $2v $1c@uint64 carry
#! adcx $1v, $2v -> adcs carry $2v $2v $1v carry
#! adox $1v, $2v -> adcs overflow $2v $2v $1v overflow
#! cmovb $1v, $2v -> cmov $2v carry $1v $2v
#! mov $1c, $2v -> mov $2v $1c@uint64
#! mov $1c, $2ea -> mov $2ea $1c@uint64
#! mov $1v, $2v -> mov $2v $1v
#! mov $1ea, $2v -> mov $2v $1ea
#! mov $1v, $2ea -> mov $2ea $1v
#! mulx $1v, $2v, $3v -> mull $3v $2v rdx $1v

#! sbb $1v, $1v -> sbbs carry $1v $1v $1v carry;\nmov overflow carry;\nnot zero@bit carry
#! sbb $1v, $2v -> sbbs carry $2v $2v $1v carry
#! sbb $1c, $2v -> sbbs carry $2v $2v $1c@uint64 carry
#! shlx $1v, $2v, $3v -> assert $1v=32 && true;\nsplit ddc $3v $2v 32;\nshl $3v $3v 32
#! shrx $1v, $2v, $3v -> assert $1v=32 && true;\nsplit $3v dc $2v 32
#! xor $1v, $1v -> mov $1v 0@uint64;\nclear carry;\nclear overflow
#! sub $1ea, $2v -> subb carry $2v $2v $1ea
#! sub $1c, $2v -> subb carry $2v $2v $1c@uint64
#! test $1v, $1v -> subb zero dontcare $1v 1@uint64
#! lea $1ea, $2v -> mov $2v $1ea
#! test \$0x1, $1v -> and tmp@uint64 0x1@uint64 $1v;\nsubb zero dontcare tmp 0x1@uint64
#! or $1v, $2v -> or $2v@uint64 $1v $2v;\nclear carry;\nclear overflow
#! shl \$0x3f, $1v -> split ddc $1v $1v 1;\nshl $1v $1v 63
#! shr $1v -> split $1v dontcare $1v 1
#! cmove $1v, $2v -> cmov $2v zero $1v $2v
#! shl \$0x20, $1v -> split ddc $1v $1v 32;\nshl $1v $1v 32
#! shr \$0x20, $1v -> split $1v ddc $1v 32
#! cmovne $1v, $2v -> cmov $2v zero $2v $1v
#! mul $1v -> mull rdx rax rax $1v;\nsubb tmp dontcare rdx 1@uint64;\nnot carry@bit tmp;\nnot overflow@bit tmp


ecp_nistz256_from_mont:
# %rdi = 0x7fffffffdc90
# %rsi = 0x7fffffffdc50
# %rdx = 0x7fffffffdc50
# %rcx = 0x0
# %r8  = 0x-8000000000000000
# %r9  = 0x280000000c
	#! -> SP = 0x7fffffffdc38
	push   %r12                                     #! EA = L0x7fffffffdc30; PC = 0x55555557db20
	push   %r13                                     #! EA = L0x7fffffffdc28; PC = 0x55555557db22
	mov    (%rsi),%rax                              #! EA = L0x7fffffffdc50; Value = 0x0000000000000000; PC = 0x55555557db24
	mov    -0x1b16(%rip),%r13        # 0x55555557c018#! EA = L0x55555557c018; Value = 0xffffffff00000001; PC = 0x55555557db27
	mov    0x8(%rsi),%r9                            #! EA = L0x7fffffffdc58; Value = 0x0000005000000019; PC = 0x55555557db2e
	mov    0x10(%rsi),%r10                          #! EA = L0x7fffffffdc60; Value = 0x0000001000000000; PC = 0x55555557db32
	mov    0x18(%rsi),%r11                          #! EA = L0x7fffffffdc68; Value = 0x0000000000000000; PC = 0x55555557db36
	mov    %rax,%r8                                 #! PC = 0x55555557db3a
	mov    -0x1b3c(%rip),%r12        # 0x55555557c008#! EA = L0x55555557c008; Value = 0x00000000ffffffff; PC = 0x55555557db3d
	mov    %rax,%rcx                                #! PC = 0x55555557db44
	shl    $0x20,%r8                                #! PC = 0x55555557db47
	mul    %r13                                     #! PC = 0x55555557db4b
	shr    $0x20,%rcx                               #! PC = 0x55555557db4e
	add    %r8,%r9                                  #! PC = 0x55555557db52
	adc    %rcx,%r10                                #! PC = 0x55555557db55
	adc    %rax,%r11                                #! PC = 0x55555557db58
	mov    %r9,%rax                                 #! PC = 0x55555557db5b
	adc    $0x0,%rdx                                #! PC = 0x55555557db5e
	mov    %r9,%rcx                                 #! PC = 0x55555557db62
	shl    $0x20,%r9                                #! PC = 0x55555557db65
	mov    %rdx,%r8                                 #! PC = 0x55555557db69
	mul    %r13                                     #! PC = 0x55555557db6c
	shr    $0x20,%rcx                               #! PC = 0x55555557db6f
	add    %r9,%r10                                 #! PC = 0x55555557db73
	adc    %rcx,%r11                                #! PC = 0x55555557db76
	adc    %rax,%r8                                 #! PC = 0x55555557db79
	mov    %r10,%rax                                #! PC = 0x55555557db7c
	adc    $0x0,%rdx                                #! PC = 0x55555557db7f
	mov    %r10,%rcx                                #! PC = 0x55555557db83
	shl    $0x20,%r10                               #! PC = 0x55555557db86
	mov    %rdx,%r9                                 #! PC = 0x55555557db8a
	mul    %r13                                     #! PC = 0x55555557db8d
	shr    $0x20,%rcx                               #! PC = 0x55555557db90
	add    %r10,%r11                                #! PC = 0x55555557db94
	adc    %rcx,%r8                                 #! PC = 0x55555557db97
	adc    %rax,%r9                                 #! PC = 0x55555557db9a
	mov    %r11,%rax                                #! PC = 0x55555557db9d
	adc    $0x0,%rdx                                #! PC = 0x55555557dba0
	mov    %r11,%rcx                                #! PC = 0x55555557dba4
	shl    $0x20,%r11                               #! PC = 0x55555557dba7
	mov    %rdx,%r10                                #! PC = 0x55555557dbab
	mul    %r13                                     #! PC = 0x55555557dbae
	shr    $0x20,%rcx                               #! PC = 0x55555557dbb1
	add    %r11,%r8                                 #! PC = 0x55555557dbb5
	adc    %rcx,%r9                                 #! PC = 0x55555557dbb8
	mov    %r8,%rcx                                 #! PC = 0x55555557dbbb
	adc    %rax,%r10                                #! PC = 0x55555557dbbe
	mov    %r9,%rsi                                 #! PC = 0x55555557dbc1
	adc    $0x0,%rdx                                #! PC = 0x55555557dbc4
	sub    $0xffffffffffffffff,%r8                  #! PC = 0x55555557dbc8
	mov    %r10,%rax                                #! PC = 0x55555557dbcc
	sbb    %r12,%r9                                 #! PC = 0x55555557dbcf
	sbb    $0x0,%r10                                #! PC = 0x55555557dbd2
	mov    %rdx,%r11                                #! PC = 0x55555557dbd6
	sbb    %r13,%rdx                                #! PC = 0x55555557dbd9
	sbb    %r13,%r13                                #! PC = 0x55555557dbdc
	cmovne %rcx,%r8                                 #! PC = 0x55555557dbdf
	cmovne %rsi,%r9                                 #! PC = 0x55555557dbe3
	mov    %r8,(%rdi)                               #! EA = L0x7fffffffdc90; PC = 0x55555557dbe7
	cmovne %rax,%r10                                #! PC = 0x55555557dbea
	mov    %r9,0x8(%rdi)                            #! EA = L0x7fffffffdc98; PC = 0x55555557dbee
	cmove  %rdx,%r11                                #! PC = 0x55555557dbf2
	mov    %r10,0x10(%rdi)                          #! EA = L0x7fffffffdca0; PC = 0x55555557dbf6
	mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffdca8; PC = 0x55555557dbfa
	mov    (%rsp),%r13                              #! EA = L0x7fffffffdc28; Value = 0x00007fffffffdde8; PC = 0x55555557dbfe
	mov    0x8(%rsp),%r12                           #! EA = L0x7fffffffdc30; Value = 0x0000000000000000; PC = 0x55555557dc02
	lea    0x10(%rsp),%rsp                          #! PC = 0x55555557dc07
	#! <- SP = 0x7fffffffdc38
	#repz ret                                       #! PC = 0x55555557dc0c
