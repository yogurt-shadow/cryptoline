proc main (   uint32 a0, uint32 a1, uint32 a2, uint32 a3, uint32 a4, uint32 a5, uint32 a6, uint32 a7, uint32 a8, uint32 a9,uint32 a10,uint32 a11,uint32 a12,uint32 a13,uint32 a14,uint32 a15,
  uint32 a16,uint32 a17,uint32 a18,uint32 a19,uint32 a20,uint32 a21,uint32 a22,uint32 a23,uint32 a24,uint32 a25,uint32 a26,uint32 a27,uint32 a28,uint32 a29,uint32 a30,uint32 a31,
  uint32 a32,uint32 a33,uint32 a34,uint32 a35,uint32 a36,uint32 a37,uint32 a38,uint32 a39,uint32 a40,uint32 a41,uint32 a42,uint32 a43,uint32 a44,uint32 a45,uint32 a46,uint32 a47,
  uint32 a48,uint32 a49,uint32 a50,uint32 a51,uint32 a52,uint32 a53,uint32 a54,uint32 a55,uint32 a56,uint32 a57,uint32 a58,uint32 a59,uint32 a60,uint32 a61,uint32 a62,uint32 a63,
   uint32 b0, uint32 b1, uint32 b2, uint32 b3, uint32 b4, uint32 b5, uint32 b6, uint32 b7, uint32 b8, uint32 b9,uint32 b10,uint32 b11,uint32 b12,uint32 b13,uint32 b14,uint32 b15,
  uint32 b16,uint32 b17,uint32 b18,uint32 b19,uint32 b20,uint32 b21,uint32 b22,uint32 b23,uint32 b24,uint32 b25,uint32 b26,uint32 b27,uint32 b28,uint32 b29,uint32 b30,uint32 b31,
  uint32 b32,uint32 b33,uint32 b34,uint32 b35,uint32 b36,uint32 b37,uint32 b38,uint32 b39,uint32 b40,uint32 b41,uint32 b42,uint32 b43,uint32 b44,uint32 b45,uint32 b46,uint32 b47,
  uint32 b48,uint32 b49,uint32 b50,uint32 b51,uint32 b52,uint32 b53,uint32 b54,uint32 b55,uint32 b56,uint32 b57,uint32 b58,uint32 b59,uint32 b60,uint32 b61,uint32 b62,uint32 b63,
   uint32 m0, uint32 m1, uint32 m2, uint32 m3, uint32 m4, uint32 m5, uint32 m6, uint32 m7, uint32 m8, uint32 m9,uint32 m10,uint32 m11,uint32 m12,uint32 m13,uint32 m14,uint32 m15,
  uint32 m16,uint32 m17,uint32 m18,uint32 m19,uint32 m20,uint32 m21,uint32 m22,uint32 m23,uint32 m24,uint32 m25,uint32 m26,uint32 m27,uint32 m28,uint32 m29,uint32 m30,uint32 m31,
  uint32 m32,uint32 m33,uint32 m34,uint32 m35,uint32 m36,uint32 m37,uint32 m38,uint32 m39,uint32 m40,uint32 m41,uint32 m42,uint32 m43,uint32 m44,uint32 m45,uint32 m46,uint32 m47,
  uint32 m48,uint32 m49,uint32 m50,uint32 m51,uint32 m52,uint32 m53,uint32 m54,uint32 m55,uint32 m56,uint32 m57,uint32 m58,uint32 m59,uint32 m60,uint32 m61,uint32 m62,uint32 m63,
  uint32 alpha0) =
{
    and
      [
        eqmod m0 1 2,

        eqmod
          (
            (
              alpha0
              *
              (limbs 32 [m0, m1, m2, m3,
                         m4, m5, m6, m7,
                         m8, m9, m10, m11,
                         m12, m13, m14, m15,
                         m16, m17, m18, m19,
                         m20, m21, m22, m23,
                         m24, m25, m26, m27,
                         m28, m29, m30, m31,
                         m32, m33, m34, m35,
                         m36, m37, m38, m39,
                         m40, m41, m42, m43,
                         m44, m45, m46, m47,
                         m48, m49, m50, m51,
                         m52, m53, m54, m55,
                         m56, m57, m58, m59,
                         m60, m61, m62, m63])
            )
            +
            1
          )

          0

          (limbs 32 [0, 1 ])
      ]
&&
  and
    [
      (limbs 32 [a0, a1, a2, a3,
                 a4, a5, a6, a7,
                 a8, a9, a10, a11,
                 a12, a13, a14, a15,
                 a16, a17, a18, a19,
                 a20, a21, a22, a23,
                 a24, a25, a26, a27,
                 a28, a29, a30, a31,
                 a32, a33, a34, a35,
                 a36, a37, a38, a39,
                 a40, a41, a42, a43,
                 a44, a45, a46, a47,
                 a48, a49, a50, a51,
                 a52, a53, a54, a55,
                 a56, a57, a58, a59,
                 a60, a61, a62, a63]) <
      (limbs 32 [m0, m1, m2, m3,
                 m4, m5, m6, m7,
                 m8, m9, m10, m11,
                 m12, m13, m14, m15,
                 m16, m17, m18, m19,
                 m20, m21, m22, m23,
                 m24, m25, m26, m27,
                 m28, m29, m30, m31,
                 m32, m33, m34, m35,
                 m36, m37, m38, m39,
                 m40, m41, m42, m43,
                 m44, m45, m46, m47,
                 m48, m49, m50, m51,
                 m52, m53, m54, m55,
                 m56, m57, m58, m59,
                 m60, m61, m62, m63]),
      (limbs 32 [b0, b1, b2, b3,
                 b4, b5, b6, b7,
                 b8, b9, b10, b11,
                 b12, b13, b14, b15,
                 b16, b17, b18, b19,
                 b20, b21, b22, b23,
                 b24, b25, b26, b27,
                 b28, b29, b30, b31,
                 b32, b33, b34, b35,
                 b36, b37, b38, b39,
                 b40, b41, b42, b43,
                 b44, b45, b46, b47,
                 b48, b49, b50, b51,
                 b52, b53, b54, b55,
                 b56, b57, b58, b59,
                 b60, b61, b62, b63]) <
      (limbs 32 [m0, m1, m2, m3,
                 m4, m5, m6, m7,
                 m8, m9, m10, m11,
                 m12, m13, m14, m15,
                 m16, m17, m18, m19,
                 m20, m21, m22, m23,
                 m24, m25, m26, m27,
                 m28, m29, m30, m31,
                 m32, m33, m34, m35,
                 m36, m37, m38, m39,
                 m40, m41, m42, m43,
                 m44, m45, m46, m47,
                 m48, m49, m50, m51,
                 m52, m53, m54, m55,
                 m56, m57, m58, m59,
                 m60, m61, m62, m63])
    ]
}

(* mult 	a0,	b0 *)
mov accHH 0@uint32;
mull accHL accL a0 b0;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b1 *)
mull H L a0 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b2 *)
mull H L a0 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b3 *)
mull H L a0 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b4 *)
mull H L a0 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b5 *)
mull H L a0 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b6 *)
mull H L a0 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b7 *)
mull H L a0 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b8 *)
mull H L a0 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b9 *)
mull H L a0 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b10 *)
mull H L a0 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b11 *)
mull H L a0 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b12 *)
mull H L a0 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b13 *)
mull H L a0 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b14 *)
mull H L a0 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b15 *)
mull H L a0 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b16 *)
mull H L a0 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b17 *)
mull H L a0 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b18 *)
mull H L a0 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b19 *)
mull H L a0 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b20 *)
mull H L a0 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b21 *)
mull H L a0 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b22 *)
mull H L a0 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b23 *)
mull H L a0 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b24 *)
mull H L a0 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b25 *)
mull H L a0 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b26 *)
mull H L a0 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b27 *)
mull H L a0 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b28 *)
mull H L a0 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b29 *)
mull H L a0 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b30 *)
mull H L a0 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b31 *)
mull H L a0 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b32 *)
mull H L a0 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b33 *)
mull H L a0 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b34 *)
mull H L a0 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b35 *)
mull H L a0 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b36 *)
mull H L a0 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b37 *)
mull H L a0 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b38 *)
mull H L a0 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b39 *)
mull H L a0 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b40 *)
mull H L a0 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b41 *)
mull H L a0 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b42 *)
mull H L a0 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b43 *)
mull H L a0 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b44 *)
mull H L a0 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b45 *)
mull H L a0 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b46 *)
mull H L a0 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b47 *)
mull H L a0 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b48 *)
mull H L a0 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b49 *)
mull H L a0 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b50 *)
mull H L a0 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b51 *)
mull H L a0 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b52 *)
mull H L a0 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b53 *)
mull H L a0 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b54 *)
mull H L a0 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b55 *)
mull H L a0 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b56 *)
mull H L a0 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b57 *)
mull H L a0 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b58 *)
mull H L a0 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b59 *)
mull H L a0 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b60 *)
mull H L a0 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b61 *)
mull H L a0 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b62 *)
mull H L a0 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa0,	b63 *)
mull H L a0 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a1,	b0 *)
mov accHH 0@uint32;
mull accHL accL a1 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b1 *)
mull H L a1 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b2 *)
mull H L a1 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b3 *)
mull H L a1 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b4 *)
mull H L a1 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b5 *)
mull H L a1 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b6 *)
mull H L a1 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b7 *)
mull H L a1 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b8 *)
mull H L a1 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b9 *)
mull H L a1 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b10 *)
mull H L a1 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b11 *)
mull H L a1 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b12 *)
mull H L a1 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b13 *)
mull H L a1 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b14 *)
mull H L a1 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b15 *)
mull H L a1 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b16 *)
mull H L a1 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b17 *)
mull H L a1 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b18 *)
mull H L a1 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b19 *)
mull H L a1 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b20 *)
mull H L a1 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b21 *)
mull H L a1 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b22 *)
mull H L a1 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b23 *)
mull H L a1 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b24 *)
mull H L a1 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b25 *)
mull H L a1 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b26 *)
mull H L a1 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b27 *)
mull H L a1 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b28 *)
mull H L a1 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b29 *)
mull H L a1 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b30 *)
mull H L a1 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b31 *)
mull H L a1 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b32 *)
mull H L a1 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b33 *)
mull H L a1 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b34 *)
mull H L a1 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b35 *)
mull H L a1 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b36 *)
mull H L a1 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b37 *)
mull H L a1 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b38 *)
mull H L a1 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b39 *)
mull H L a1 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b40 *)
mull H L a1 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b41 *)
mull H L a1 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b42 *)
mull H L a1 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b43 *)
mull H L a1 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b44 *)
mull H L a1 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b45 *)
mull H L a1 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b46 *)
mull H L a1 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b47 *)
mull H L a1 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b48 *)
mull H L a1 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b49 *)
mull H L a1 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b50 *)
mull H L a1 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b51 *)
mull H L a1 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b52 *)
mull H L a1 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b53 *)
mull H L a1 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b54 *)
mull H L a1 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b55 *)
mull H L a1 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b56 *)
mull H L a1 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b57 *)
mull H L a1 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b58 *)
mull H L a1 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b59 *)
mull H L a1 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b60 *)
mull H L a1 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b61 *)
mull H L a1 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b62 *)
mull H L a1 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa1,	b63 *)
mull H L a1 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a2,	b0 *)
mov accHH 0@uint32;
mull accHL accL a2 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b1 *)
mull H L a2 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b2 *)
mull H L a2 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b3 *)
mull H L a2 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b4 *)
mull H L a2 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b5 *)
mull H L a2 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b6 *)
mull H L a2 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b7 *)
mull H L a2 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b8 *)
mull H L a2 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b9 *)
mull H L a2 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b10 *)
mull H L a2 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b11 *)
mull H L a2 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b12 *)
mull H L a2 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b13 *)
mull H L a2 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b14 *)
mull H L a2 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b15 *)
mull H L a2 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b16 *)
mull H L a2 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b17 *)
mull H L a2 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b18 *)
mull H L a2 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b19 *)
mull H L a2 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b20 *)
mull H L a2 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b21 *)
mull H L a2 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b22 *)
mull H L a2 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b23 *)
mull H L a2 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b24 *)
mull H L a2 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b25 *)
mull H L a2 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b26 *)
mull H L a2 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b27 *)
mull H L a2 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b28 *)
mull H L a2 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b29 *)
mull H L a2 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b30 *)
mull H L a2 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b31 *)
mull H L a2 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b32 *)
mull H L a2 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b33 *)
mull H L a2 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b34 *)
mull H L a2 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b35 *)
mull H L a2 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b36 *)
mull H L a2 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b37 *)
mull H L a2 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b38 *)
mull H L a2 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b39 *)
mull H L a2 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b40 *)
mull H L a2 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b41 *)
mull H L a2 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b42 *)
mull H L a2 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b43 *)
mull H L a2 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b44 *)
mull H L a2 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b45 *)
mull H L a2 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b46 *)
mull H L a2 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b47 *)
mull H L a2 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b48 *)
mull H L a2 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b49 *)
mull H L a2 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b50 *)
mull H L a2 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b51 *)
mull H L a2 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b52 *)
mull H L a2 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b53 *)
mull H L a2 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b54 *)
mull H L a2 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b55 *)
mull H L a2 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b56 *)
mull H L a2 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b57 *)
mull H L a2 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b58 *)
mull H L a2 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b59 *)
mull H L a2 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b60 *)
mull H L a2 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b61 *)
mull H L a2 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b62 *)
mull H L a2 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa2,	b63 *)
mull H L a2 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a3,	b0 *)
mov accHH 0@uint32;
mull accHL accL a3 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b1 *)
mull H L a3 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b2 *)
mull H L a3 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b3 *)
mull H L a3 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b4 *)
mull H L a3 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b5 *)
mull H L a3 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b6 *)
mull H L a3 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b7 *)
mull H L a3 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b8 *)
mull H L a3 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b9 *)
mull H L a3 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b10 *)
mull H L a3 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b11 *)
mull H L a3 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b12 *)
mull H L a3 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b13 *)
mull H L a3 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b14 *)
mull H L a3 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b15 *)
mull H L a3 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b16 *)
mull H L a3 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b17 *)
mull H L a3 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b18 *)
mull H L a3 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b19 *)
mull H L a3 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b20 *)
mull H L a3 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b21 *)
mull H L a3 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b22 *)
mull H L a3 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b23 *)
mull H L a3 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b24 *)
mull H L a3 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b25 *)
mull H L a3 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b26 *)
mull H L a3 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b27 *)
mull H L a3 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b28 *)
mull H L a3 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b29 *)
mull H L a3 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b30 *)
mull H L a3 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b31 *)
mull H L a3 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b32 *)
mull H L a3 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b33 *)
mull H L a3 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b34 *)
mull H L a3 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b35 *)
mull H L a3 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b36 *)
mull H L a3 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b37 *)
mull H L a3 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b38 *)
mull H L a3 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b39 *)
mull H L a3 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b40 *)
mull H L a3 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b41 *)
mull H L a3 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b42 *)
mull H L a3 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b43 *)
mull H L a3 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b44 *)
mull H L a3 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b45 *)
mull H L a3 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b46 *)
mull H L a3 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b47 *)
mull H L a3 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b48 *)
mull H L a3 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b49 *)
mull H L a3 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b50 *)
mull H L a3 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b51 *)
mull H L a3 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b52 *)
mull H L a3 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b53 *)
mull H L a3 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b54 *)
mull H L a3 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b55 *)
mull H L a3 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b56 *)
mull H L a3 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b57 *)
mull H L a3 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b58 *)
mull H L a3 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b59 *)
mull H L a3 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b60 *)
mull H L a3 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b61 *)
mull H L a3 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b62 *)
mull H L a3 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa3,	b63 *)
mull H L a3 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a4,	b0 *)
mov accHH 0@uint32;
mull accHL accL a4 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b1 *)
mull H L a4 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b2 *)
mull H L a4 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b3 *)
mull H L a4 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b4 *)
mull H L a4 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b5 *)
mull H L a4 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b6 *)
mull H L a4 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b7 *)
mull H L a4 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b8 *)
mull H L a4 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b9 *)
mull H L a4 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b10 *)
mull H L a4 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b11 *)
mull H L a4 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b12 *)
mull H L a4 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b13 *)
mull H L a4 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b14 *)
mull H L a4 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b15 *)
mull H L a4 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b16 *)
mull H L a4 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b17 *)
mull H L a4 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b18 *)
mull H L a4 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b19 *)
mull H L a4 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b20 *)
mull H L a4 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b21 *)
mull H L a4 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b22 *)
mull H L a4 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b23 *)
mull H L a4 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b24 *)
mull H L a4 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b25 *)
mull H L a4 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b26 *)
mull H L a4 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b27 *)
mull H L a4 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b28 *)
mull H L a4 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b29 *)
mull H L a4 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b30 *)
mull H L a4 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b31 *)
mull H L a4 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b32 *)
mull H L a4 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b33 *)
mull H L a4 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b34 *)
mull H L a4 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b35 *)
mull H L a4 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b36 *)
mull H L a4 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b37 *)
mull H L a4 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b38 *)
mull H L a4 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b39 *)
mull H L a4 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b40 *)
mull H L a4 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b41 *)
mull H L a4 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b42 *)
mull H L a4 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b43 *)
mull H L a4 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b44 *)
mull H L a4 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b45 *)
mull H L a4 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b46 *)
mull H L a4 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b47 *)
mull H L a4 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b48 *)
mull H L a4 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b49 *)
mull H L a4 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b50 *)
mull H L a4 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b51 *)
mull H L a4 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b52 *)
mull H L a4 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b53 *)
mull H L a4 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b54 *)
mull H L a4 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b55 *)
mull H L a4 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b56 *)
mull H L a4 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b57 *)
mull H L a4 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b58 *)
mull H L a4 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b59 *)
mull H L a4 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b60 *)
mull H L a4 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b61 *)
mull H L a4 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b62 *)
mull H L a4 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa4,	b63 *)
mull H L a4 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a5,	b0 *)
mov accHH 0@uint32;
mull accHL accL a5 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b1 *)
mull H L a5 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b2 *)
mull H L a5 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b3 *)
mull H L a5 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b4 *)
mull H L a5 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b5 *)
mull H L a5 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b6 *)
mull H L a5 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b7 *)
mull H L a5 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b8 *)
mull H L a5 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b9 *)
mull H L a5 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b10 *)
mull H L a5 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b11 *)
mull H L a5 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b12 *)
mull H L a5 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b13 *)
mull H L a5 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b14 *)
mull H L a5 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b15 *)
mull H L a5 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b16 *)
mull H L a5 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b17 *)
mull H L a5 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b18 *)
mull H L a5 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b19 *)
mull H L a5 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b20 *)
mull H L a5 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b21 *)
mull H L a5 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b22 *)
mull H L a5 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b23 *)
mull H L a5 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b24 *)
mull H L a5 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b25 *)
mull H L a5 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b26 *)
mull H L a5 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b27 *)
mull H L a5 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b28 *)
mull H L a5 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b29 *)
mull H L a5 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b30 *)
mull H L a5 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b31 *)
mull H L a5 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b32 *)
mull H L a5 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b33 *)
mull H L a5 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b34 *)
mull H L a5 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b35 *)
mull H L a5 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b36 *)
mull H L a5 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b37 *)
mull H L a5 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b38 *)
mull H L a5 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b39 *)
mull H L a5 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b40 *)
mull H L a5 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b41 *)
mull H L a5 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b42 *)
mull H L a5 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b43 *)
mull H L a5 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b44 *)
mull H L a5 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b45 *)
mull H L a5 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b46 *)
mull H L a5 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b47 *)
mull H L a5 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b48 *)
mull H L a5 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b49 *)
mull H L a5 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b50 *)
mull H L a5 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b51 *)
mull H L a5 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b52 *)
mull H L a5 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b53 *)
mull H L a5 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b54 *)
mull H L a5 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b55 *)
mull H L a5 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b56 *)
mull H L a5 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b57 *)
mull H L a5 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b58 *)
mull H L a5 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b59 *)
mull H L a5 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b60 *)
mull H L a5 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b61 *)
mull H L a5 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b62 *)
mull H L a5 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa5,	b63 *)
mull H L a5 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a6,	b0 *)
mov accHH 0@uint32;
mull accHL accL a6 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b1 *)
mull H L a6 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b2 *)
mull H L a6 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b3 *)
mull H L a6 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b4 *)
mull H L a6 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b5 *)
mull H L a6 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b6 *)
mull H L a6 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b7 *)
mull H L a6 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b8 *)
mull H L a6 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b9 *)
mull H L a6 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b10 *)
mull H L a6 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b11 *)
mull H L a6 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b12 *)
mull H L a6 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b13 *)
mull H L a6 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b14 *)
mull H L a6 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b15 *)
mull H L a6 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b16 *)
mull H L a6 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b17 *)
mull H L a6 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b18 *)
mull H L a6 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b19 *)
mull H L a6 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b20 *)
mull H L a6 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b21 *)
mull H L a6 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b22 *)
mull H L a6 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b23 *)
mull H L a6 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b24 *)
mull H L a6 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b25 *)
mull H L a6 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b26 *)
mull H L a6 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b27 *)
mull H L a6 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b28 *)
mull H L a6 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b29 *)
mull H L a6 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b30 *)
mull H L a6 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b31 *)
mull H L a6 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b32 *)
mull H L a6 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b33 *)
mull H L a6 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b34 *)
mull H L a6 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b35 *)
mull H L a6 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b36 *)
mull H L a6 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b37 *)
mull H L a6 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b38 *)
mull H L a6 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b39 *)
mull H L a6 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b40 *)
mull H L a6 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b41 *)
mull H L a6 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b42 *)
mull H L a6 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b43 *)
mull H L a6 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b44 *)
mull H L a6 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b45 *)
mull H L a6 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b46 *)
mull H L a6 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b47 *)
mull H L a6 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b48 *)
mull H L a6 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b49 *)
mull H L a6 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b50 *)
mull H L a6 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b51 *)
mull H L a6 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b52 *)
mull H L a6 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b53 *)
mull H L a6 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b54 *)
mull H L a6 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b55 *)
mull H L a6 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b56 *)
mull H L a6 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b57 *)
mull H L a6 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b58 *)
mull H L a6 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b59 *)
mull H L a6 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b60 *)
mull H L a6 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b61 *)
mull H L a6 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b62 *)
mull H L a6 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa6,	b63 *)
mull H L a6 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a7,	b0 *)
mov accHH 0@uint32;
mull accHL accL a7 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b1 *)
mull H L a7 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b2 *)
mull H L a7 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b3 *)
mull H L a7 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b4 *)
mull H L a7 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b5 *)
mull H L a7 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b6 *)
mull H L a7 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b7 *)
mull H L a7 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b8 *)
mull H L a7 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b9 *)
mull H L a7 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b10 *)
mull H L a7 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b11 *)
mull H L a7 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b12 *)
mull H L a7 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b13 *)
mull H L a7 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b14 *)
mull H L a7 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b15 *)
mull H L a7 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b16 *)
mull H L a7 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b17 *)
mull H L a7 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b18 *)
mull H L a7 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b19 *)
mull H L a7 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b20 *)
mull H L a7 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b21 *)
mull H L a7 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b22 *)
mull H L a7 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b23 *)
mull H L a7 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b24 *)
mull H L a7 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b25 *)
mull H L a7 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b26 *)
mull H L a7 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b27 *)
mull H L a7 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b28 *)
mull H L a7 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b29 *)
mull H L a7 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b30 *)
mull H L a7 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b31 *)
mull H L a7 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b32 *)
mull H L a7 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b33 *)
mull H L a7 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b34 *)
mull H L a7 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b35 *)
mull H L a7 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b36 *)
mull H L a7 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b37 *)
mull H L a7 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b38 *)
mull H L a7 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b39 *)
mull H L a7 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b40 *)
mull H L a7 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b41 *)
mull H L a7 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b42 *)
mull H L a7 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b43 *)
mull H L a7 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b44 *)
mull H L a7 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b45 *)
mull H L a7 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b46 *)
mull H L a7 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b47 *)
mull H L a7 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b48 *)
mull H L a7 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b49 *)
mull H L a7 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b50 *)
mull H L a7 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b51 *)
mull H L a7 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b52 *)
mull H L a7 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b53 *)
mull H L a7 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b54 *)
mull H L a7 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b55 *)
mull H L a7 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b56 *)
mull H L a7 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b57 *)
mull H L a7 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b58 *)
mull H L a7 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b59 *)
mull H L a7 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b60 *)
mull H L a7 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b61 *)
mull H L a7 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b62 *)
mull H L a7 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa7,	b63 *)
mull H L a7 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a8,	b0 *)
mov accHH 0@uint32;
mull accHL accL a8 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b1 *)
mull H L a8 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b2 *)
mull H L a8 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b3 *)
mull H L a8 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b4 *)
mull H L a8 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b5 *)
mull H L a8 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b6 *)
mull H L a8 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b7 *)
mull H L a8 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b8 *)
mull H L a8 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b9 *)
mull H L a8 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b10 *)
mull H L a8 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b11 *)
mull H L a8 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b12 *)
mull H L a8 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b13 *)
mull H L a8 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b14 *)
mull H L a8 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b15 *)
mull H L a8 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b16 *)
mull H L a8 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b17 *)
mull H L a8 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b18 *)
mull H L a8 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b19 *)
mull H L a8 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b20 *)
mull H L a8 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b21 *)
mull H L a8 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b22 *)
mull H L a8 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b23 *)
mull H L a8 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b24 *)
mull H L a8 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b25 *)
mull H L a8 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b26 *)
mull H L a8 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b27 *)
mull H L a8 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b28 *)
mull H L a8 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b29 *)
mull H L a8 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b30 *)
mull H L a8 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b31 *)
mull H L a8 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b32 *)
mull H L a8 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b33 *)
mull H L a8 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b34 *)
mull H L a8 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b35 *)
mull H L a8 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b36 *)
mull H L a8 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b37 *)
mull H L a8 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b38 *)
mull H L a8 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b39 *)
mull H L a8 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b40 *)
mull H L a8 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b41 *)
mull H L a8 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b42 *)
mull H L a8 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b43 *)
mull H L a8 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b44 *)
mull H L a8 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b45 *)
mull H L a8 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b46 *)
mull H L a8 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b47 *)
mull H L a8 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b48 *)
mull H L a8 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b49 *)
mull H L a8 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b50 *)
mull H L a8 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b51 *)
mull H L a8 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b52 *)
mull H L a8 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b53 *)
mull H L a8 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b54 *)
mull H L a8 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b55 *)
mull H L a8 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b56 *)
mull H L a8 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b57 *)
mull H L a8 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b58 *)
mull H L a8 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b59 *)
mull H L a8 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b60 *)
mull H L a8 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b61 *)
mull H L a8 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b62 *)
mull H L a8 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa8,	b63 *)
mull H L a8 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a9,	b0 *)
mov accHH 0@uint32;
mull accHL accL a9 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b1 *)
mull H L a9 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b2 *)
mull H L a9 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b3 *)
mull H L a9 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b4 *)
mull H L a9 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b5 *)
mull H L a9 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b6 *)
mull H L a9 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b7 *)
mull H L a9 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b8 *)
mull H L a9 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b9 *)
mull H L a9 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b10 *)
mull H L a9 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b11 *)
mull H L a9 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b12 *)
mull H L a9 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b13 *)
mull H L a9 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b14 *)
mull H L a9 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b15 *)
mull H L a9 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b16 *)
mull H L a9 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b17 *)
mull H L a9 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b18 *)
mull H L a9 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b19 *)
mull H L a9 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b20 *)
mull H L a9 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b21 *)
mull H L a9 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b22 *)
mull H L a9 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b23 *)
mull H L a9 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b24 *)
mull H L a9 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b25 *)
mull H L a9 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b26 *)
mull H L a9 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b27 *)
mull H L a9 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b28 *)
mull H L a9 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b29 *)
mull H L a9 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b30 *)
mull H L a9 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b31 *)
mull H L a9 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b32 *)
mull H L a9 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b33 *)
mull H L a9 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b34 *)
mull H L a9 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b35 *)
mull H L a9 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b36 *)
mull H L a9 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b37 *)
mull H L a9 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b38 *)
mull H L a9 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b39 *)
mull H L a9 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b40 *)
mull H L a9 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b41 *)
mull H L a9 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b42 *)
mull H L a9 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b43 *)
mull H L a9 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b44 *)
mull H L a9 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b45 *)
mull H L a9 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b46 *)
mull H L a9 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b47 *)
mull H L a9 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b48 *)
mull H L a9 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b49 *)
mull H L a9 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b50 *)
mull H L a9 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b51 *)
mull H L a9 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b52 *)
mull H L a9 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b53 *)
mull H L a9 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b54 *)
mull H L a9 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b55 *)
mull H L a9 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b56 *)
mull H L a9 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b57 *)
mull H L a9 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b58 *)
mull H L a9 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b59 *)
mull H L a9 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b60 *)
mull H L a9 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b61 *)
mull H L a9 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b62 *)
mull H L a9 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa9,	b63 *)
mull H L a9 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a10,	b0 *)
mov accHH 0@uint32;
mull accHL accL a10 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b1 *)
mull H L a10 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b2 *)
mull H L a10 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b3 *)
mull H L a10 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b4 *)
mull H L a10 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b5 *)
mull H L a10 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b6 *)
mull H L a10 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b7 *)
mull H L a10 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b8 *)
mull H L a10 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b9 *)
mull H L a10 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b10 *)
mull H L a10 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b11 *)
mull H L a10 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b12 *)
mull H L a10 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b13 *)
mull H L a10 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b14 *)
mull H L a10 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b15 *)
mull H L a10 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b16 *)
mull H L a10 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b17 *)
mull H L a10 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b18 *)
mull H L a10 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b19 *)
mull H L a10 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b20 *)
mull H L a10 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b21 *)
mull H L a10 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b22 *)
mull H L a10 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b23 *)
mull H L a10 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b24 *)
mull H L a10 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b25 *)
mull H L a10 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b26 *)
mull H L a10 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b27 *)
mull H L a10 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b28 *)
mull H L a10 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b29 *)
mull H L a10 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b30 *)
mull H L a10 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b31 *)
mull H L a10 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b32 *)
mull H L a10 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b33 *)
mull H L a10 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b34 *)
mull H L a10 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b35 *)
mull H L a10 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b36 *)
mull H L a10 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b37 *)
mull H L a10 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b38 *)
mull H L a10 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b39 *)
mull H L a10 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b40 *)
mull H L a10 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b41 *)
mull H L a10 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b42 *)
mull H L a10 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b43 *)
mull H L a10 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b44 *)
mull H L a10 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b45 *)
mull H L a10 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b46 *)
mull H L a10 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b47 *)
mull H L a10 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b48 *)
mull H L a10 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b49 *)
mull H L a10 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b50 *)
mull H L a10 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b51 *)
mull H L a10 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b52 *)
mull H L a10 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b53 *)
mull H L a10 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b54 *)
mull H L a10 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b55 *)
mull H L a10 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b56 *)
mull H L a10 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b57 *)
mull H L a10 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b58 *)
mull H L a10 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b59 *)
mull H L a10 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b60 *)
mull H L a10 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b61 *)
mull H L a10 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b62 *)
mull H L a10 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa10,	b63 *)
mull H L a10 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a11,	b0 *)
mov accHH 0@uint32;
mull accHL accL a11 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b1 *)
mull H L a11 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b2 *)
mull H L a11 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b3 *)
mull H L a11 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b4 *)
mull H L a11 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b5 *)
mull H L a11 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b6 *)
mull H L a11 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b7 *)
mull H L a11 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b8 *)
mull H L a11 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b9 *)
mull H L a11 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b10 *)
mull H L a11 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b11 *)
mull H L a11 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b12 *)
mull H L a11 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b13 *)
mull H L a11 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b14 *)
mull H L a11 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b15 *)
mull H L a11 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b16 *)
mull H L a11 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b17 *)
mull H L a11 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b18 *)
mull H L a11 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b19 *)
mull H L a11 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b20 *)
mull H L a11 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b21 *)
mull H L a11 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b22 *)
mull H L a11 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b23 *)
mull H L a11 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b24 *)
mull H L a11 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b25 *)
mull H L a11 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b26 *)
mull H L a11 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b27 *)
mull H L a11 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b28 *)
mull H L a11 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b29 *)
mull H L a11 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b30 *)
mull H L a11 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b31 *)
mull H L a11 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b32 *)
mull H L a11 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b33 *)
mull H L a11 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b34 *)
mull H L a11 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b35 *)
mull H L a11 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b36 *)
mull H L a11 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b37 *)
mull H L a11 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b38 *)
mull H L a11 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b39 *)
mull H L a11 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b40 *)
mull H L a11 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b41 *)
mull H L a11 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b42 *)
mull H L a11 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b43 *)
mull H L a11 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b44 *)
mull H L a11 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b45 *)
mull H L a11 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b46 *)
mull H L a11 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b47 *)
mull H L a11 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b48 *)
mull H L a11 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b49 *)
mull H L a11 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b50 *)
mull H L a11 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b51 *)
mull H L a11 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b52 *)
mull H L a11 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b53 *)
mull H L a11 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b54 *)
mull H L a11 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b55 *)
mull H L a11 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b56 *)
mull H L a11 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b57 *)
mull H L a11 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b58 *)
mull H L a11 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b59 *)
mull H L a11 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b60 *)
mull H L a11 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b61 *)
mull H L a11 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b62 *)
mull H L a11 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa11,	b63 *)
mull H L a11 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a12,	b0 *)
mov accHH 0@uint32;
mull accHL accL a12 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b1 *)
mull H L a12 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b2 *)
mull H L a12 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b3 *)
mull H L a12 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b4 *)
mull H L a12 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b5 *)
mull H L a12 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b6 *)
mull H L a12 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b7 *)
mull H L a12 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b8 *)
mull H L a12 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b9 *)
mull H L a12 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b10 *)
mull H L a12 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b11 *)
mull H L a12 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b12 *)
mull H L a12 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b13 *)
mull H L a12 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b14 *)
mull H L a12 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b15 *)
mull H L a12 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b16 *)
mull H L a12 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b17 *)
mull H L a12 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b18 *)
mull H L a12 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b19 *)
mull H L a12 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b20 *)
mull H L a12 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b21 *)
mull H L a12 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b22 *)
mull H L a12 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b23 *)
mull H L a12 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b24 *)
mull H L a12 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b25 *)
mull H L a12 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b26 *)
mull H L a12 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b27 *)
mull H L a12 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b28 *)
mull H L a12 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b29 *)
mull H L a12 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b30 *)
mull H L a12 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b31 *)
mull H L a12 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b32 *)
mull H L a12 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b33 *)
mull H L a12 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b34 *)
mull H L a12 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b35 *)
mull H L a12 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b36 *)
mull H L a12 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b37 *)
mull H L a12 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b38 *)
mull H L a12 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b39 *)
mull H L a12 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b40 *)
mull H L a12 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b41 *)
mull H L a12 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b42 *)
mull H L a12 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b43 *)
mull H L a12 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b44 *)
mull H L a12 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b45 *)
mull H L a12 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b46 *)
mull H L a12 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b47 *)
mull H L a12 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b48 *)
mull H L a12 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b49 *)
mull H L a12 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b50 *)
mull H L a12 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b51 *)
mull H L a12 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b52 *)
mull H L a12 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b53 *)
mull H L a12 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b54 *)
mull H L a12 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b55 *)
mull H L a12 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b56 *)
mull H L a12 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b57 *)
mull H L a12 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b58 *)
mull H L a12 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b59 *)
mull H L a12 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b60 *)
mull H L a12 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b61 *)
mull H L a12 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b62 *)
mull H L a12 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa12,	b63 *)
mull H L a12 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a13,	b0 *)
mov accHH 0@uint32;
mull accHL accL a13 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b1 *)
mull H L a13 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b2 *)
mull H L a13 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b3 *)
mull H L a13 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b4 *)
mull H L a13 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b5 *)
mull H L a13 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b6 *)
mull H L a13 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b7 *)
mull H L a13 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b8 *)
mull H L a13 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b9 *)
mull H L a13 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b10 *)
mull H L a13 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b11 *)
mull H L a13 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b12 *)
mull H L a13 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b13 *)
mull H L a13 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b14 *)
mull H L a13 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b15 *)
mull H L a13 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b16 *)
mull H L a13 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b17 *)
mull H L a13 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b18 *)
mull H L a13 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b19 *)
mull H L a13 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b20 *)
mull H L a13 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b21 *)
mull H L a13 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b22 *)
mull H L a13 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b23 *)
mull H L a13 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b24 *)
mull H L a13 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b25 *)
mull H L a13 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b26 *)
mull H L a13 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b27 *)
mull H L a13 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b28 *)
mull H L a13 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b29 *)
mull H L a13 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b30 *)
mull H L a13 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b31 *)
mull H L a13 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b32 *)
mull H L a13 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b33 *)
mull H L a13 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b34 *)
mull H L a13 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b35 *)
mull H L a13 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b36 *)
mull H L a13 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b37 *)
mull H L a13 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b38 *)
mull H L a13 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b39 *)
mull H L a13 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b40 *)
mull H L a13 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b41 *)
mull H L a13 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b42 *)
mull H L a13 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b43 *)
mull H L a13 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b44 *)
mull H L a13 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b45 *)
mull H L a13 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b46 *)
mull H L a13 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b47 *)
mull H L a13 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b48 *)
mull H L a13 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b49 *)
mull H L a13 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b50 *)
mull H L a13 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b51 *)
mull H L a13 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b52 *)
mull H L a13 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b53 *)
mull H L a13 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b54 *)
mull H L a13 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b55 *)
mull H L a13 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b56 *)
mull H L a13 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b57 *)
mull H L a13 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b58 *)
mull H L a13 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b59 *)
mull H L a13 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b60 *)
mull H L a13 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b61 *)
mull H L a13 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b62 *)
mull H L a13 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa13,	b63 *)
mull H L a13 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a14,	b0 *)
mov accHH 0@uint32;
mull accHL accL a14 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b1 *)
mull H L a14 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b2 *)
mull H L a14 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b3 *)
mull H L a14 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b4 *)
mull H L a14 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b5 *)
mull H L a14 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b6 *)
mull H L a14 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b7 *)
mull H L a14 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b8 *)
mull H L a14 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b9 *)
mull H L a14 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b10 *)
mull H L a14 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b11 *)
mull H L a14 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b12 *)
mull H L a14 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b13 *)
mull H L a14 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b14 *)
mull H L a14 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b15 *)
mull H L a14 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b16 *)
mull H L a14 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b17 *)
mull H L a14 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b18 *)
mull H L a14 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b19 *)
mull H L a14 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b20 *)
mull H L a14 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b21 *)
mull H L a14 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b22 *)
mull H L a14 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b23 *)
mull H L a14 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b24 *)
mull H L a14 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b25 *)
mull H L a14 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b26 *)
mull H L a14 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b27 *)
mull H L a14 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b28 *)
mull H L a14 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b29 *)
mull H L a14 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b30 *)
mull H L a14 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b31 *)
mull H L a14 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b32 *)
mull H L a14 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b33 *)
mull H L a14 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b34 *)
mull H L a14 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b35 *)
mull H L a14 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b36 *)
mull H L a14 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b37 *)
mull H L a14 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b38 *)
mull H L a14 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b39 *)
mull H L a14 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b40 *)
mull H L a14 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b41 *)
mull H L a14 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b42 *)
mull H L a14 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b43 *)
mull H L a14 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b44 *)
mull H L a14 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b45 *)
mull H L a14 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b46 *)
mull H L a14 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b47 *)
mull H L a14 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b48 *)
mull H L a14 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b49 *)
mull H L a14 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b50 *)
mull H L a14 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b51 *)
mull H L a14 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b52 *)
mull H L a14 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b53 *)
mull H L a14 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b54 *)
mull H L a14 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b55 *)
mull H L a14 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b56 *)
mull H L a14 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b57 *)
mull H L a14 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b58 *)
mull H L a14 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b59 *)
mull H L a14 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b60 *)
mull H L a14 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b61 *)
mull H L a14 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b62 *)
mull H L a14 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa14,	b63 *)
mull H L a14 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a15,	b0 *)
mov accHH 0@uint32;
mull accHL accL a15 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b1 *)
mull H L a15 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b2 *)
mull H L a15 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b3 *)
mull H L a15 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b4 *)
mull H L a15 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b5 *)
mull H L a15 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b6 *)
mull H L a15 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b7 *)
mull H L a15 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b8 *)
mull H L a15 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b9 *)
mull H L a15 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b10 *)
mull H L a15 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b11 *)
mull H L a15 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b12 *)
mull H L a15 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b13 *)
mull H L a15 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b14 *)
mull H L a15 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b15 *)
mull H L a15 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b16 *)
mull H L a15 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b17 *)
mull H L a15 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b18 *)
mull H L a15 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b19 *)
mull H L a15 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b20 *)
mull H L a15 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b21 *)
mull H L a15 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b22 *)
mull H L a15 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b23 *)
mull H L a15 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b24 *)
mull H L a15 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b25 *)
mull H L a15 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b26 *)
mull H L a15 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b27 *)
mull H L a15 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b28 *)
mull H L a15 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b29 *)
mull H L a15 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b30 *)
mull H L a15 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b31 *)
mull H L a15 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b32 *)
mull H L a15 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b33 *)
mull H L a15 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b34 *)
mull H L a15 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b35 *)
mull H L a15 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b36 *)
mull H L a15 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b37 *)
mull H L a15 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b38 *)
mull H L a15 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b39 *)
mull H L a15 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b40 *)
mull H L a15 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b41 *)
mull H L a15 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b42 *)
mull H L a15 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b43 *)
mull H L a15 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b44 *)
mull H L a15 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b45 *)
mull H L a15 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b46 *)
mull H L a15 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b47 *)
mull H L a15 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b48 *)
mull H L a15 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b49 *)
mull H L a15 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b50 *)
mull H L a15 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b51 *)
mull H L a15 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b52 *)
mull H L a15 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b53 *)
mull H L a15 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b54 *)
mull H L a15 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b55 *)
mull H L a15 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b56 *)
mull H L a15 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b57 *)
mull H L a15 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b58 *)
mull H L a15 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b59 *)
mull H L a15 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b60 *)
mull H L a15 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b61 *)
mull H L a15 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b62 *)
mull H L a15 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa15,	b63 *)
mull H L a15 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a16,	b0 *)
mov accHH 0@uint32;
mull accHL accL a16 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b1 *)
mull H L a16 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b2 *)
mull H L a16 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b3 *)
mull H L a16 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b4 *)
mull H L a16 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b5 *)
mull H L a16 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b6 *)
mull H L a16 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b7 *)
mull H L a16 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b8 *)
mull H L a16 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b9 *)
mull H L a16 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b10 *)
mull H L a16 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b11 *)
mull H L a16 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b12 *)
mull H L a16 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b13 *)
mull H L a16 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b14 *)
mull H L a16 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b15 *)
mull H L a16 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b16 *)
mull H L a16 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b17 *)
mull H L a16 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b18 *)
mull H L a16 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b19 *)
mull H L a16 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b20 *)
mull H L a16 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b21 *)
mull H L a16 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b22 *)
mull H L a16 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b23 *)
mull H L a16 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b24 *)
mull H L a16 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b25 *)
mull H L a16 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b26 *)
mull H L a16 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b27 *)
mull H L a16 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b28 *)
mull H L a16 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b29 *)
mull H L a16 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b30 *)
mull H L a16 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b31 *)
mull H L a16 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b32 *)
mull H L a16 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b33 *)
mull H L a16 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b34 *)
mull H L a16 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b35 *)
mull H L a16 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b36 *)
mull H L a16 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b37 *)
mull H L a16 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b38 *)
mull H L a16 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b39 *)
mull H L a16 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b40 *)
mull H L a16 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b41 *)
mull H L a16 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b42 *)
mull H L a16 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b43 *)
mull H L a16 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b44 *)
mull H L a16 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b45 *)
mull H L a16 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b46 *)
mull H L a16 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b47 *)
mull H L a16 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b48 *)
mull H L a16 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b49 *)
mull H L a16 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b50 *)
mull H L a16 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b51 *)
mull H L a16 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b52 *)
mull H L a16 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b53 *)
mull H L a16 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b54 *)
mull H L a16 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b55 *)
mull H L a16 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b56 *)
mull H L a16 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b57 *)
mull H L a16 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b58 *)
mull H L a16 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b59 *)
mull H L a16 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b60 *)
mull H L a16 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b61 *)
mull H L a16 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b62 *)
mull H L a16 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa16,	b63 *)
mull H L a16 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a17,	b0 *)
mov accHH 0@uint32;
mull accHL accL a17 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b1 *)
mull H L a17 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b2 *)
mull H L a17 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b3 *)
mull H L a17 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b4 *)
mull H L a17 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b5 *)
mull H L a17 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b6 *)
mull H L a17 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b7 *)
mull H L a17 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b8 *)
mull H L a17 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b9 *)
mull H L a17 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b10 *)
mull H L a17 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b11 *)
mull H L a17 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b12 *)
mull H L a17 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b13 *)
mull H L a17 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b14 *)
mull H L a17 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b15 *)
mull H L a17 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b16 *)
mull H L a17 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b17 *)
mull H L a17 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b18 *)
mull H L a17 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b19 *)
mull H L a17 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b20 *)
mull H L a17 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b21 *)
mull H L a17 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b22 *)
mull H L a17 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b23 *)
mull H L a17 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b24 *)
mull H L a17 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b25 *)
mull H L a17 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b26 *)
mull H L a17 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b27 *)
mull H L a17 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b28 *)
mull H L a17 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b29 *)
mull H L a17 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b30 *)
mull H L a17 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b31 *)
mull H L a17 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b32 *)
mull H L a17 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b33 *)
mull H L a17 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b34 *)
mull H L a17 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b35 *)
mull H L a17 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b36 *)
mull H L a17 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b37 *)
mull H L a17 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b38 *)
mull H L a17 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b39 *)
mull H L a17 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b40 *)
mull H L a17 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b41 *)
mull H L a17 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b42 *)
mull H L a17 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b43 *)
mull H L a17 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b44 *)
mull H L a17 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b45 *)
mull H L a17 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b46 *)
mull H L a17 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b47 *)
mull H L a17 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b48 *)
mull H L a17 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b49 *)
mull H L a17 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b50 *)
mull H L a17 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b51 *)
mull H L a17 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b52 *)
mull H L a17 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b53 *)
mull H L a17 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b54 *)
mull H L a17 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b55 *)
mull H L a17 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b56 *)
mull H L a17 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b57 *)
mull H L a17 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b58 *)
mull H L a17 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b59 *)
mull H L a17 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b60 *)
mull H L a17 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b61 *)
mull H L a17 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b62 *)
mull H L a17 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa17,	b63 *)
mull H L a17 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a18,	b0 *)
mov accHH 0@uint32;
mull accHL accL a18 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b1 *)
mull H L a18 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b2 *)
mull H L a18 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b3 *)
mull H L a18 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b4 *)
mull H L a18 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b5 *)
mull H L a18 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b6 *)
mull H L a18 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b7 *)
mull H L a18 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b8 *)
mull H L a18 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b9 *)
mull H L a18 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b10 *)
mull H L a18 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b11 *)
mull H L a18 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b12 *)
mull H L a18 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b13 *)
mull H L a18 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b14 *)
mull H L a18 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b15 *)
mull H L a18 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b16 *)
mull H L a18 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b17 *)
mull H L a18 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b18 *)
mull H L a18 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b19 *)
mull H L a18 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b20 *)
mull H L a18 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b21 *)
mull H L a18 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b22 *)
mull H L a18 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b23 *)
mull H L a18 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b24 *)
mull H L a18 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b25 *)
mull H L a18 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b26 *)
mull H L a18 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b27 *)
mull H L a18 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b28 *)
mull H L a18 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b29 *)
mull H L a18 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b30 *)
mull H L a18 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b31 *)
mull H L a18 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b32 *)
mull H L a18 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b33 *)
mull H L a18 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b34 *)
mull H L a18 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b35 *)
mull H L a18 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b36 *)
mull H L a18 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b37 *)
mull H L a18 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b38 *)
mull H L a18 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b39 *)
mull H L a18 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b40 *)
mull H L a18 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b41 *)
mull H L a18 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b42 *)
mull H L a18 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b43 *)
mull H L a18 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b44 *)
mull H L a18 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b45 *)
mull H L a18 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b46 *)
mull H L a18 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b47 *)
mull H L a18 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b48 *)
mull H L a18 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b49 *)
mull H L a18 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b50 *)
mull H L a18 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b51 *)
mull H L a18 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b52 *)
mull H L a18 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b53 *)
mull H L a18 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b54 *)
mull H L a18 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b55 *)
mull H L a18 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b56 *)
mull H L a18 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b57 *)
mull H L a18 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b58 *)
mull H L a18 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b59 *)
mull H L a18 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b60 *)
mull H L a18 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b61 *)
mull H L a18 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b62 *)
mull H L a18 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa18,	b63 *)
mull H L a18 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a19,	b0 *)
mov accHH 0@uint32;
mull accHL accL a19 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b1 *)
mull H L a19 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b2 *)
mull H L a19 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b3 *)
mull H L a19 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b4 *)
mull H L a19 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b5 *)
mull H L a19 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b6 *)
mull H L a19 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b7 *)
mull H L a19 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b8 *)
mull H L a19 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b9 *)
mull H L a19 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b10 *)
mull H L a19 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b11 *)
mull H L a19 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b12 *)
mull H L a19 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b13 *)
mull H L a19 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b14 *)
mull H L a19 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b15 *)
mull H L a19 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b16 *)
mull H L a19 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b17 *)
mull H L a19 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b18 *)
mull H L a19 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b19 *)
mull H L a19 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b20 *)
mull H L a19 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b21 *)
mull H L a19 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b22 *)
mull H L a19 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b23 *)
mull H L a19 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b24 *)
mull H L a19 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b25 *)
mull H L a19 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b26 *)
mull H L a19 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b27 *)
mull H L a19 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b28 *)
mull H L a19 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b29 *)
mull H L a19 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b30 *)
mull H L a19 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b31 *)
mull H L a19 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b32 *)
mull H L a19 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b33 *)
mull H L a19 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b34 *)
mull H L a19 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b35 *)
mull H L a19 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b36 *)
mull H L a19 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b37 *)
mull H L a19 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b38 *)
mull H L a19 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b39 *)
mull H L a19 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b40 *)
mull H L a19 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b41 *)
mull H L a19 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b42 *)
mull H L a19 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b43 *)
mull H L a19 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b44 *)
mull H L a19 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b45 *)
mull H L a19 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b46 *)
mull H L a19 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b47 *)
mull H L a19 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b48 *)
mull H L a19 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b49 *)
mull H L a19 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b50 *)
mull H L a19 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b51 *)
mull H L a19 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b52 *)
mull H L a19 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b53 *)
mull H L a19 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b54 *)
mull H L a19 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b55 *)
mull H L a19 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b56 *)
mull H L a19 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b57 *)
mull H L a19 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b58 *)
mull H L a19 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b59 *)
mull H L a19 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b60 *)
mull H L a19 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b61 *)
mull H L a19 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b62 *)
mull H L a19 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa19,	b63 *)
mull H L a19 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a20,	b0 *)
mov accHH 0@uint32;
mull accHL accL a20 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b1 *)
mull H L a20 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b2 *)
mull H L a20 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b3 *)
mull H L a20 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b4 *)
mull H L a20 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b5 *)
mull H L a20 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b6 *)
mull H L a20 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b7 *)
mull H L a20 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b8 *)
mull H L a20 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b9 *)
mull H L a20 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b10 *)
mull H L a20 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b11 *)
mull H L a20 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b12 *)
mull H L a20 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b13 *)
mull H L a20 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b14 *)
mull H L a20 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b15 *)
mull H L a20 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b16 *)
mull H L a20 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b17 *)
mull H L a20 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b18 *)
mull H L a20 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b19 *)
mull H L a20 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b20 *)
mull H L a20 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b21 *)
mull H L a20 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b22 *)
mull H L a20 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b23 *)
mull H L a20 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b24 *)
mull H L a20 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b25 *)
mull H L a20 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b26 *)
mull H L a20 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b27 *)
mull H L a20 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b28 *)
mull H L a20 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b29 *)
mull H L a20 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b30 *)
mull H L a20 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b31 *)
mull H L a20 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b32 *)
mull H L a20 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b33 *)
mull H L a20 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b34 *)
mull H L a20 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b35 *)
mull H L a20 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b36 *)
mull H L a20 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b37 *)
mull H L a20 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b38 *)
mull H L a20 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b39 *)
mull H L a20 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b40 *)
mull H L a20 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b41 *)
mull H L a20 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b42 *)
mull H L a20 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b43 *)
mull H L a20 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b44 *)
mull H L a20 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b45 *)
mull H L a20 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b46 *)
mull H L a20 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b47 *)
mull H L a20 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b48 *)
mull H L a20 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b49 *)
mull H L a20 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b50 *)
mull H L a20 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b51 *)
mull H L a20 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b52 *)
mull H L a20 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b53 *)
mull H L a20 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b54 *)
mull H L a20 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b55 *)
mull H L a20 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b56 *)
mull H L a20 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b57 *)
mull H L a20 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b58 *)
mull H L a20 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b59 *)
mull H L a20 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b60 *)
mull H L a20 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b61 *)
mull H L a20 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b62 *)
mull H L a20 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa20,	b63 *)
mull H L a20 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a21,	b0 *)
mov accHH 0@uint32;
mull accHL accL a21 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b1 *)
mull H L a21 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b2 *)
mull H L a21 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b3 *)
mull H L a21 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b4 *)
mull H L a21 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b5 *)
mull H L a21 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b6 *)
mull H L a21 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b7 *)
mull H L a21 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b8 *)
mull H L a21 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b9 *)
mull H L a21 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b10 *)
mull H L a21 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b11 *)
mull H L a21 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b12 *)
mull H L a21 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b13 *)
mull H L a21 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b14 *)
mull H L a21 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b15 *)
mull H L a21 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b16 *)
mull H L a21 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b17 *)
mull H L a21 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b18 *)
mull H L a21 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b19 *)
mull H L a21 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b20 *)
mull H L a21 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b21 *)
mull H L a21 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b22 *)
mull H L a21 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b23 *)
mull H L a21 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b24 *)
mull H L a21 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b25 *)
mull H L a21 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b26 *)
mull H L a21 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b27 *)
mull H L a21 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b28 *)
mull H L a21 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b29 *)
mull H L a21 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b30 *)
mull H L a21 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b31 *)
mull H L a21 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b32 *)
mull H L a21 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b33 *)
mull H L a21 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b34 *)
mull H L a21 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b35 *)
mull H L a21 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b36 *)
mull H L a21 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b37 *)
mull H L a21 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b38 *)
mull H L a21 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b39 *)
mull H L a21 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b40 *)
mull H L a21 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b41 *)
mull H L a21 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b42 *)
mull H L a21 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b43 *)
mull H L a21 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b44 *)
mull H L a21 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b45 *)
mull H L a21 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b46 *)
mull H L a21 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b47 *)
mull H L a21 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b48 *)
mull H L a21 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b49 *)
mull H L a21 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b50 *)
mull H L a21 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b51 *)
mull H L a21 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b52 *)
mull H L a21 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b53 *)
mull H L a21 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b54 *)
mull H L a21 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b55 *)
mull H L a21 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b56 *)
mull H L a21 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b57 *)
mull H L a21 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b58 *)
mull H L a21 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b59 *)
mull H L a21 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b60 *)
mull H L a21 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b61 *)
mull H L a21 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b62 *)
mull H L a21 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa21,	b63 *)
mull H L a21 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a22,	b0 *)
mov accHH 0@uint32;
mull accHL accL a22 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b1 *)
mull H L a22 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b2 *)
mull H L a22 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b3 *)
mull H L a22 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b4 *)
mull H L a22 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b5 *)
mull H L a22 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b6 *)
mull H L a22 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b7 *)
mull H L a22 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b8 *)
mull H L a22 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b9 *)
mull H L a22 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b10 *)
mull H L a22 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b11 *)
mull H L a22 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b12 *)
mull H L a22 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b13 *)
mull H L a22 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b14 *)
mull H L a22 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b15 *)
mull H L a22 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b16 *)
mull H L a22 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b17 *)
mull H L a22 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b18 *)
mull H L a22 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b19 *)
mull H L a22 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b20 *)
mull H L a22 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b21 *)
mull H L a22 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b22 *)
mull H L a22 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b23 *)
mull H L a22 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b24 *)
mull H L a22 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b25 *)
mull H L a22 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b26 *)
mull H L a22 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b27 *)
mull H L a22 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b28 *)
mull H L a22 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b29 *)
mull H L a22 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b30 *)
mull H L a22 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b31 *)
mull H L a22 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b32 *)
mull H L a22 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b33 *)
mull H L a22 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b34 *)
mull H L a22 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b35 *)
mull H L a22 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b36 *)
mull H L a22 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b37 *)
mull H L a22 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b38 *)
mull H L a22 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b39 *)
mull H L a22 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b40 *)
mull H L a22 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b41 *)
mull H L a22 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b42 *)
mull H L a22 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b43 *)
mull H L a22 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b44 *)
mull H L a22 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b45 *)
mull H L a22 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b46 *)
mull H L a22 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b47 *)
mull H L a22 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b48 *)
mull H L a22 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b49 *)
mull H L a22 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b50 *)
mull H L a22 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b51 *)
mull H L a22 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b52 *)
mull H L a22 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b53 *)
mull H L a22 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b54 *)
mull H L a22 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b55 *)
mull H L a22 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b56 *)
mull H L a22 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b57 *)
mull H L a22 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b58 *)
mull H L a22 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b59 *)
mull H L a22 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b60 *)
mull H L a22 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b61 *)
mull H L a22 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b62 *)
mull H L a22 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa22,	b63 *)
mull H L a22 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a23,	b0 *)
mov accHH 0@uint32;
mull accHL accL a23 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b1 *)
mull H L a23 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b2 *)
mull H L a23 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b3 *)
mull H L a23 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b4 *)
mull H L a23 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b5 *)
mull H L a23 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b6 *)
mull H L a23 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b7 *)
mull H L a23 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b8 *)
mull H L a23 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b9 *)
mull H L a23 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b10 *)
mull H L a23 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b11 *)
mull H L a23 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b12 *)
mull H L a23 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b13 *)
mull H L a23 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b14 *)
mull H L a23 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b15 *)
mull H L a23 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b16 *)
mull H L a23 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b17 *)
mull H L a23 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b18 *)
mull H L a23 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b19 *)
mull H L a23 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b20 *)
mull H L a23 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b21 *)
mull H L a23 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b22 *)
mull H L a23 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b23 *)
mull H L a23 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b24 *)
mull H L a23 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b25 *)
mull H L a23 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b26 *)
mull H L a23 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b27 *)
mull H L a23 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b28 *)
mull H L a23 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b29 *)
mull H L a23 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b30 *)
mull H L a23 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b31 *)
mull H L a23 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b32 *)
mull H L a23 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b33 *)
mull H L a23 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b34 *)
mull H L a23 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b35 *)
mull H L a23 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b36 *)
mull H L a23 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b37 *)
mull H L a23 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b38 *)
mull H L a23 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b39 *)
mull H L a23 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b40 *)
mull H L a23 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b41 *)
mull H L a23 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b42 *)
mull H L a23 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b43 *)
mull H L a23 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b44 *)
mull H L a23 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b45 *)
mull H L a23 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b46 *)
mull H L a23 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b47 *)
mull H L a23 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b48 *)
mull H L a23 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b49 *)
mull H L a23 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b50 *)
mull H L a23 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b51 *)
mull H L a23 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b52 *)
mull H L a23 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b53 *)
mull H L a23 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b54 *)
mull H L a23 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b55 *)
mull H L a23 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b56 *)
mull H L a23 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b57 *)
mull H L a23 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b58 *)
mull H L a23 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b59 *)
mull H L a23 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b60 *)
mull H L a23 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b61 *)
mull H L a23 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b62 *)
mull H L a23 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa23,	b63 *)
mull H L a23 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a24,	b0 *)
mov accHH 0@uint32;
mull accHL accL a24 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b1 *)
mull H L a24 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b2 *)
mull H L a24 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b3 *)
mull H L a24 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b4 *)
mull H L a24 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b5 *)
mull H L a24 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b6 *)
mull H L a24 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b7 *)
mull H L a24 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b8 *)
mull H L a24 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b9 *)
mull H L a24 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b10 *)
mull H L a24 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b11 *)
mull H L a24 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b12 *)
mull H L a24 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b13 *)
mull H L a24 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b14 *)
mull H L a24 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b15 *)
mull H L a24 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b16 *)
mull H L a24 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b17 *)
mull H L a24 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b18 *)
mull H L a24 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b19 *)
mull H L a24 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b20 *)
mull H L a24 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b21 *)
mull H L a24 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b22 *)
mull H L a24 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b23 *)
mull H L a24 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b24 *)
mull H L a24 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b25 *)
mull H L a24 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b26 *)
mull H L a24 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b27 *)
mull H L a24 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b28 *)
mull H L a24 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b29 *)
mull H L a24 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b30 *)
mull H L a24 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b31 *)
mull H L a24 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b32 *)
mull H L a24 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b33 *)
mull H L a24 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b34 *)
mull H L a24 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b35 *)
mull H L a24 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b36 *)
mull H L a24 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b37 *)
mull H L a24 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b38 *)
mull H L a24 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b39 *)
mull H L a24 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b40 *)
mull H L a24 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b41 *)
mull H L a24 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b42 *)
mull H L a24 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b43 *)
mull H L a24 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b44 *)
mull H L a24 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b45 *)
mull H L a24 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b46 *)
mull H L a24 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b47 *)
mull H L a24 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b48 *)
mull H L a24 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b49 *)
mull H L a24 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b50 *)
mull H L a24 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b51 *)
mull H L a24 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b52 *)
mull H L a24 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b53 *)
mull H L a24 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b54 *)
mull H L a24 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b55 *)
mull H L a24 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b56 *)
mull H L a24 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b57 *)
mull H L a24 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b58 *)
mull H L a24 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b59 *)
mull H L a24 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b60 *)
mull H L a24 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b61 *)
mull H L a24 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b62 *)
mull H L a24 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa24,	b63 *)
mull H L a24 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a25,	b0 *)
mov accHH 0@uint32;
mull accHL accL a25 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b1 *)
mull H L a25 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b2 *)
mull H L a25 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b3 *)
mull H L a25 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b4 *)
mull H L a25 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b5 *)
mull H L a25 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b6 *)
mull H L a25 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b7 *)
mull H L a25 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b8 *)
mull H L a25 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b9 *)
mull H L a25 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b10 *)
mull H L a25 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b11 *)
mull H L a25 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b12 *)
mull H L a25 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b13 *)
mull H L a25 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b14 *)
mull H L a25 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b15 *)
mull H L a25 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b16 *)
mull H L a25 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b17 *)
mull H L a25 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b18 *)
mull H L a25 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b19 *)
mull H L a25 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b20 *)
mull H L a25 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b21 *)
mull H L a25 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b22 *)
mull H L a25 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b23 *)
mull H L a25 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b24 *)
mull H L a25 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b25 *)
mull H L a25 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b26 *)
mull H L a25 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b27 *)
mull H L a25 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b28 *)
mull H L a25 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b29 *)
mull H L a25 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b30 *)
mull H L a25 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b31 *)
mull H L a25 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b32 *)
mull H L a25 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b33 *)
mull H L a25 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b34 *)
mull H L a25 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b35 *)
mull H L a25 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b36 *)
mull H L a25 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b37 *)
mull H L a25 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b38 *)
mull H L a25 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b39 *)
mull H L a25 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b40 *)
mull H L a25 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b41 *)
mull H L a25 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b42 *)
mull H L a25 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b43 *)
mull H L a25 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b44 *)
mull H L a25 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b45 *)
mull H L a25 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b46 *)
mull H L a25 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b47 *)
mull H L a25 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b48 *)
mull H L a25 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b49 *)
mull H L a25 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b50 *)
mull H L a25 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b51 *)
mull H L a25 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b52 *)
mull H L a25 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b53 *)
mull H L a25 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b54 *)
mull H L a25 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b55 *)
mull H L a25 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b56 *)
mull H L a25 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b57 *)
mull H L a25 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b58 *)
mull H L a25 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b59 *)
mull H L a25 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b60 *)
mull H L a25 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b61 *)
mull H L a25 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b62 *)
mull H L a25 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa25,	b63 *)
mull H L a25 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a26,	b0 *)
mov accHH 0@uint32;
mull accHL accL a26 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b1 *)
mull H L a26 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b2 *)
mull H L a26 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b3 *)
mull H L a26 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b4 *)
mull H L a26 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b5 *)
mull H L a26 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b6 *)
mull H L a26 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b7 *)
mull H L a26 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b8 *)
mull H L a26 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b9 *)
mull H L a26 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b10 *)
mull H L a26 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b11 *)
mull H L a26 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b12 *)
mull H L a26 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b13 *)
mull H L a26 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b14 *)
mull H L a26 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b15 *)
mull H L a26 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b16 *)
mull H L a26 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b17 *)
mull H L a26 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b18 *)
mull H L a26 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b19 *)
mull H L a26 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b20 *)
mull H L a26 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b21 *)
mull H L a26 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b22 *)
mull H L a26 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b23 *)
mull H L a26 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b24 *)
mull H L a26 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b25 *)
mull H L a26 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b26 *)
mull H L a26 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b27 *)
mull H L a26 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b28 *)
mull H L a26 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b29 *)
mull H L a26 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b30 *)
mull H L a26 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b31 *)
mull H L a26 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b32 *)
mull H L a26 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b33 *)
mull H L a26 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b34 *)
mull H L a26 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b35 *)
mull H L a26 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b36 *)
mull H L a26 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b37 *)
mull H L a26 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b38 *)
mull H L a26 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b39 *)
mull H L a26 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b40 *)
mull H L a26 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b41 *)
mull H L a26 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b42 *)
mull H L a26 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b43 *)
mull H L a26 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b44 *)
mull H L a26 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b45 *)
mull H L a26 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b46 *)
mull H L a26 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b47 *)
mull H L a26 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b48 *)
mull H L a26 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b49 *)
mull H L a26 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b50 *)
mull H L a26 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b51 *)
mull H L a26 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b52 *)
mull H L a26 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b53 *)
mull H L a26 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b54 *)
mull H L a26 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b55 *)
mull H L a26 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b56 *)
mull H L a26 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b57 *)
mull H L a26 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b58 *)
mull H L a26 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b59 *)
mull H L a26 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b60 *)
mull H L a26 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b61 *)
mull H L a26 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b62 *)
mull H L a26 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa26,	b63 *)
mull H L a26 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a27,	b0 *)
mov accHH 0@uint32;
mull accHL accL a27 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b1 *)
mull H L a27 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b2 *)
mull H L a27 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b3 *)
mull H L a27 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b4 *)
mull H L a27 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b5 *)
mull H L a27 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b6 *)
mull H L a27 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b7 *)
mull H L a27 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b8 *)
mull H L a27 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b9 *)
mull H L a27 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b10 *)
mull H L a27 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b11 *)
mull H L a27 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b12 *)
mull H L a27 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b13 *)
mull H L a27 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b14 *)
mull H L a27 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b15 *)
mull H L a27 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b16 *)
mull H L a27 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b17 *)
mull H L a27 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b18 *)
mull H L a27 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b19 *)
mull H L a27 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b20 *)
mull H L a27 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b21 *)
mull H L a27 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b22 *)
mull H L a27 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b23 *)
mull H L a27 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b24 *)
mull H L a27 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b25 *)
mull H L a27 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b26 *)
mull H L a27 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b27 *)
mull H L a27 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b28 *)
mull H L a27 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b29 *)
mull H L a27 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b30 *)
mull H L a27 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b31 *)
mull H L a27 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b32 *)
mull H L a27 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b33 *)
mull H L a27 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b34 *)
mull H L a27 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b35 *)
mull H L a27 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b36 *)
mull H L a27 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b37 *)
mull H L a27 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b38 *)
mull H L a27 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b39 *)
mull H L a27 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b40 *)
mull H L a27 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b41 *)
mull H L a27 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b42 *)
mull H L a27 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b43 *)
mull H L a27 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b44 *)
mull H L a27 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b45 *)
mull H L a27 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b46 *)
mull H L a27 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b47 *)
mull H L a27 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b48 *)
mull H L a27 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b49 *)
mull H L a27 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b50 *)
mull H L a27 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b51 *)
mull H L a27 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b52 *)
mull H L a27 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b53 *)
mull H L a27 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b54 *)
mull H L a27 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b55 *)
mull H L a27 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b56 *)
mull H L a27 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b57 *)
mull H L a27 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b58 *)
mull H L a27 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b59 *)
mull H L a27 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b60 *)
mull H L a27 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b61 *)
mull H L a27 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b62 *)
mull H L a27 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa27,	b63 *)
mull H L a27 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a28,	b0 *)
mov accHH 0@uint32;
mull accHL accL a28 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b1 *)
mull H L a28 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b2 *)
mull H L a28 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b3 *)
mull H L a28 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b4 *)
mull H L a28 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b5 *)
mull H L a28 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b6 *)
mull H L a28 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b7 *)
mull H L a28 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b8 *)
mull H L a28 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b9 *)
mull H L a28 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b10 *)
mull H L a28 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b11 *)
mull H L a28 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b12 *)
mull H L a28 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b13 *)
mull H L a28 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b14 *)
mull H L a28 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b15 *)
mull H L a28 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b16 *)
mull H L a28 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b17 *)
mull H L a28 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b18 *)
mull H L a28 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b19 *)
mull H L a28 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b20 *)
mull H L a28 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b21 *)
mull H L a28 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b22 *)
mull H L a28 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b23 *)
mull H L a28 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b24 *)
mull H L a28 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b25 *)
mull H L a28 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b26 *)
mull H L a28 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b27 *)
mull H L a28 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b28 *)
mull H L a28 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b29 *)
mull H L a28 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b30 *)
mull H L a28 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b31 *)
mull H L a28 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b32 *)
mull H L a28 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b33 *)
mull H L a28 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b34 *)
mull H L a28 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b35 *)
mull H L a28 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b36 *)
mull H L a28 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b37 *)
mull H L a28 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b38 *)
mull H L a28 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b39 *)
mull H L a28 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b40 *)
mull H L a28 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b41 *)
mull H L a28 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b42 *)
mull H L a28 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b43 *)
mull H L a28 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b44 *)
mull H L a28 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b45 *)
mull H L a28 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b46 *)
mull H L a28 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b47 *)
mull H L a28 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b48 *)
mull H L a28 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b49 *)
mull H L a28 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b50 *)
mull H L a28 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b51 *)
mull H L a28 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b52 *)
mull H L a28 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b53 *)
mull H L a28 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b54 *)
mull H L a28 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b55 *)
mull H L a28 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b56 *)
mull H L a28 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b57 *)
mull H L a28 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b58 *)
mull H L a28 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b59 *)
mull H L a28 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b60 *)
mull H L a28 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b61 *)
mull H L a28 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b62 *)
mull H L a28 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa28,	b63 *)
mull H L a28 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a29,	b0 *)
mov accHH 0@uint32;
mull accHL accL a29 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b1 *)
mull H L a29 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b2 *)
mull H L a29 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b3 *)
mull H L a29 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b4 *)
mull H L a29 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b5 *)
mull H L a29 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b6 *)
mull H L a29 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b7 *)
mull H L a29 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b8 *)
mull H L a29 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b9 *)
mull H L a29 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b10 *)
mull H L a29 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b11 *)
mull H L a29 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b12 *)
mull H L a29 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b13 *)
mull H L a29 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b14 *)
mull H L a29 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b15 *)
mull H L a29 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b16 *)
mull H L a29 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b17 *)
mull H L a29 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b18 *)
mull H L a29 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b19 *)
mull H L a29 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b20 *)
mull H L a29 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b21 *)
mull H L a29 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b22 *)
mull H L a29 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b23 *)
mull H L a29 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b24 *)
mull H L a29 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b25 *)
mull H L a29 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b26 *)
mull H L a29 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b27 *)
mull H L a29 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b28 *)
mull H L a29 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b29 *)
mull H L a29 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b30 *)
mull H L a29 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b31 *)
mull H L a29 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b32 *)
mull H L a29 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b33 *)
mull H L a29 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b34 *)
mull H L a29 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b35 *)
mull H L a29 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b36 *)
mull H L a29 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b37 *)
mull H L a29 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b38 *)
mull H L a29 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b39 *)
mull H L a29 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b40 *)
mull H L a29 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b41 *)
mull H L a29 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b42 *)
mull H L a29 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b43 *)
mull H L a29 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b44 *)
mull H L a29 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b45 *)
mull H L a29 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b46 *)
mull H L a29 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b47 *)
mull H L a29 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b48 *)
mull H L a29 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b49 *)
mull H L a29 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b50 *)
mull H L a29 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b51 *)
mull H L a29 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b52 *)
mull H L a29 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b53 *)
mull H L a29 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b54 *)
mull H L a29 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b55 *)
mull H L a29 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b56 *)
mull H L a29 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b57 *)
mull H L a29 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b58 *)
mull H L a29 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b59 *)
mull H L a29 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b60 *)
mull H L a29 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b61 *)
mull H L a29 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b62 *)
mull H L a29 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa29,	b63 *)
mull H L a29 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a30,	b0 *)
mov accHH 0@uint32;
mull accHL accL a30 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b1 *)
mull H L a30 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b2 *)
mull H L a30 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b3 *)
mull H L a30 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b4 *)
mull H L a30 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b5 *)
mull H L a30 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b6 *)
mull H L a30 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b7 *)
mull H L a30 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b8 *)
mull H L a30 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b9 *)
mull H L a30 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b10 *)
mull H L a30 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b11 *)
mull H L a30 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b12 *)
mull H L a30 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b13 *)
mull H L a30 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b14 *)
mull H L a30 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b15 *)
mull H L a30 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b16 *)
mull H L a30 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b17 *)
mull H L a30 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b18 *)
mull H L a30 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b19 *)
mull H L a30 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b20 *)
mull H L a30 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b21 *)
mull H L a30 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b22 *)
mull H L a30 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b23 *)
mull H L a30 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b24 *)
mull H L a30 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b25 *)
mull H L a30 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b26 *)
mull H L a30 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b27 *)
mull H L a30 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b28 *)
mull H L a30 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b29 *)
mull H L a30 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b30 *)
mull H L a30 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b31 *)
mull H L a30 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b32 *)
mull H L a30 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b33 *)
mull H L a30 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b34 *)
mull H L a30 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b35 *)
mull H L a30 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b36 *)
mull H L a30 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b37 *)
mull H L a30 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b38 *)
mull H L a30 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b39 *)
mull H L a30 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b40 *)
mull H L a30 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b41 *)
mull H L a30 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b42 *)
mull H L a30 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b43 *)
mull H L a30 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b44 *)
mull H L a30 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b45 *)
mull H L a30 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b46 *)
mull H L a30 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b47 *)
mull H L a30 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b48 *)
mull H L a30 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b49 *)
mull H L a30 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b50 *)
mull H L a30 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b51 *)
mull H L a30 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b52 *)
mull H L a30 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b53 *)
mull H L a30 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b54 *)
mull H L a30 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b55 *)
mull H L a30 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b56 *)
mull H L a30 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b57 *)
mull H L a30 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b58 *)
mull H L a30 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b59 *)
mull H L a30 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b60 *)
mull H L a30 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b61 *)
mull H L a30 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b62 *)
mull H L a30 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa30,	b63 *)
mull H L a30 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a31,	b0 *)
mov accHH 0@uint32;
mull accHL accL a31 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b1 *)
mull H L a31 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b2 *)
mull H L a31 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b3 *)
mull H L a31 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b4 *)
mull H L a31 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b5 *)
mull H L a31 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b6 *)
mull H L a31 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b7 *)
mull H L a31 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b8 *)
mull H L a31 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b9 *)
mull H L a31 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b10 *)
mull H L a31 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b11 *)
mull H L a31 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b12 *)
mull H L a31 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b13 *)
mull H L a31 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b14 *)
mull H L a31 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b15 *)
mull H L a31 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b16 *)
mull H L a31 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b17 *)
mull H L a31 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b18 *)
mull H L a31 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b19 *)
mull H L a31 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b20 *)
mull H L a31 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b21 *)
mull H L a31 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b22 *)
mull H L a31 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b23 *)
mull H L a31 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b24 *)
mull H L a31 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b25 *)
mull H L a31 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b26 *)
mull H L a31 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b27 *)
mull H L a31 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b28 *)
mull H L a31 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b29 *)
mull H L a31 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b30 *)
mull H L a31 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b31 *)
mull H L a31 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b32 *)
mull H L a31 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b33 *)
mull H L a31 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b34 *)
mull H L a31 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b35 *)
mull H L a31 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b36 *)
mull H L a31 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b37 *)
mull H L a31 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b38 *)
mull H L a31 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b39 *)
mull H L a31 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b40 *)
mull H L a31 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b41 *)
mull H L a31 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b42 *)
mull H L a31 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b43 *)
mull H L a31 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b44 *)
mull H L a31 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b45 *)
mull H L a31 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b46 *)
mull H L a31 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b47 *)
mull H L a31 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b48 *)
mull H L a31 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b49 *)
mull H L a31 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b50 *)
mull H L a31 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b51 *)
mull H L a31 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b52 *)
mull H L a31 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b53 *)
mull H L a31 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b54 *)
mull H L a31 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b55 *)
mull H L a31 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b56 *)
mull H L a31 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b57 *)
mull H L a31 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b58 *)
mull H L a31 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b59 *)
mull H L a31 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b60 *)
mull H L a31 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b61 *)
mull H L a31 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b62 *)
mull H L a31 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa31,	b63 *)
mull H L a31 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a32,	b0 *)
mov accHH 0@uint32;
mull accHL accL a32 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b1 *)
mull H L a32 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b2 *)
mull H L a32 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b3 *)
mull H L a32 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b4 *)
mull H L a32 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b5 *)
mull H L a32 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b6 *)
mull H L a32 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b7 *)
mull H L a32 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b8 *)
mull H L a32 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b9 *)
mull H L a32 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b10 *)
mull H L a32 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b11 *)
mull H L a32 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b12 *)
mull H L a32 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b13 *)
mull H L a32 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b14 *)
mull H L a32 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b15 *)
mull H L a32 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b16 *)
mull H L a32 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b17 *)
mull H L a32 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b18 *)
mull H L a32 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b19 *)
mull H L a32 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b20 *)
mull H L a32 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b21 *)
mull H L a32 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b22 *)
mull H L a32 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b23 *)
mull H L a32 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b24 *)
mull H L a32 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b25 *)
mull H L a32 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b26 *)
mull H L a32 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b27 *)
mull H L a32 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b28 *)
mull H L a32 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b29 *)
mull H L a32 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b30 *)
mull H L a32 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b31 *)
mull H L a32 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b32 *)
mull H L a32 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b33 *)
mull H L a32 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b34 *)
mull H L a32 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b35 *)
mull H L a32 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b36 *)
mull H L a32 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b37 *)
mull H L a32 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b38 *)
mull H L a32 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b39 *)
mull H L a32 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b40 *)
mull H L a32 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b41 *)
mull H L a32 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b42 *)
mull H L a32 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b43 *)
mull H L a32 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b44 *)
mull H L a32 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b45 *)
mull H L a32 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b46 *)
mull H L a32 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b47 *)
mull H L a32 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b48 *)
mull H L a32 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b49 *)
mull H L a32 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b50 *)
mull H L a32 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b51 *)
mull H L a32 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b52 *)
mull H L a32 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b53 *)
mull H L a32 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b54 *)
mull H L a32 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b55 *)
mull H L a32 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b56 *)
mull H L a32 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b57 *)
mull H L a32 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b58 *)
mull H L a32 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b59 *)
mull H L a32 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b60 *)
mull H L a32 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b61 *)
mull H L a32 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b62 *)
mull H L a32 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa32,	b63 *)
mull H L a32 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a33,	b0 *)
mov accHH 0@uint32;
mull accHL accL a33 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b1 *)
mull H L a33 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b2 *)
mull H L a33 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b3 *)
mull H L a33 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b4 *)
mull H L a33 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b5 *)
mull H L a33 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b6 *)
mull H L a33 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b7 *)
mull H L a33 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b8 *)
mull H L a33 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b9 *)
mull H L a33 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b10 *)
mull H L a33 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b11 *)
mull H L a33 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b12 *)
mull H L a33 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b13 *)
mull H L a33 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b14 *)
mull H L a33 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b15 *)
mull H L a33 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b16 *)
mull H L a33 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b17 *)
mull H L a33 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b18 *)
mull H L a33 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b19 *)
mull H L a33 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b20 *)
mull H L a33 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b21 *)
mull H L a33 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b22 *)
mull H L a33 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b23 *)
mull H L a33 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b24 *)
mull H L a33 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b25 *)
mull H L a33 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b26 *)
mull H L a33 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b27 *)
mull H L a33 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b28 *)
mull H L a33 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b29 *)
mull H L a33 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b30 *)
mull H L a33 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b31 *)
mull H L a33 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b32 *)
mull H L a33 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b33 *)
mull H L a33 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b34 *)
mull H L a33 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b35 *)
mull H L a33 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b36 *)
mull H L a33 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b37 *)
mull H L a33 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b38 *)
mull H L a33 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b39 *)
mull H L a33 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b40 *)
mull H L a33 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b41 *)
mull H L a33 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b42 *)
mull H L a33 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b43 *)
mull H L a33 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b44 *)
mull H L a33 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b45 *)
mull H L a33 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b46 *)
mull H L a33 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b47 *)
mull H L a33 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b48 *)
mull H L a33 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b49 *)
mull H L a33 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b50 *)
mull H L a33 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b51 *)
mull H L a33 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b52 *)
mull H L a33 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b53 *)
mull H L a33 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b54 *)
mull H L a33 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b55 *)
mull H L a33 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b56 *)
mull H L a33 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b57 *)
mull H L a33 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b58 *)
mull H L a33 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b59 *)
mull H L a33 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b60 *)
mull H L a33 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b61 *)
mull H L a33 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b62 *)
mull H L a33 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa33,	b63 *)
mull H L a33 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a34,	b0 *)
mov accHH 0@uint32;
mull accHL accL a34 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b1 *)
mull H L a34 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b2 *)
mull H L a34 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b3 *)
mull H L a34 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b4 *)
mull H L a34 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b5 *)
mull H L a34 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b6 *)
mull H L a34 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b7 *)
mull H L a34 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b8 *)
mull H L a34 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b9 *)
mull H L a34 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b10 *)
mull H L a34 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b11 *)
mull H L a34 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b12 *)
mull H L a34 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b13 *)
mull H L a34 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b14 *)
mull H L a34 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b15 *)
mull H L a34 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b16 *)
mull H L a34 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b17 *)
mull H L a34 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b18 *)
mull H L a34 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b19 *)
mull H L a34 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b20 *)
mull H L a34 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b21 *)
mull H L a34 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b22 *)
mull H L a34 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b23 *)
mull H L a34 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b24 *)
mull H L a34 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b25 *)
mull H L a34 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b26 *)
mull H L a34 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b27 *)
mull H L a34 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b28 *)
mull H L a34 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b29 *)
mull H L a34 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b30 *)
mull H L a34 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b31 *)
mull H L a34 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b32 *)
mull H L a34 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b33 *)
mull H L a34 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b34 *)
mull H L a34 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b35 *)
mull H L a34 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b36 *)
mull H L a34 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b37 *)
mull H L a34 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b38 *)
mull H L a34 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b39 *)
mull H L a34 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b40 *)
mull H L a34 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b41 *)
mull H L a34 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b42 *)
mull H L a34 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b43 *)
mull H L a34 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b44 *)
mull H L a34 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b45 *)
mull H L a34 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b46 *)
mull H L a34 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b47 *)
mull H L a34 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b48 *)
mull H L a34 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b49 *)
mull H L a34 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b50 *)
mull H L a34 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b51 *)
mull H L a34 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b52 *)
mull H L a34 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b53 *)
mull H L a34 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b54 *)
mull H L a34 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b55 *)
mull H L a34 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b56 *)
mull H L a34 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b57 *)
mull H L a34 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b58 *)
mull H L a34 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b59 *)
mull H L a34 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b60 *)
mull H L a34 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b61 *)
mull H L a34 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b62 *)
mull H L a34 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa34,	b63 *)
mull H L a34 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a35,	b0 *)
mov accHH 0@uint32;
mull accHL accL a35 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b1 *)
mull H L a35 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b2 *)
mull H L a35 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b3 *)
mull H L a35 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b4 *)
mull H L a35 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b5 *)
mull H L a35 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b6 *)
mull H L a35 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b7 *)
mull H L a35 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b8 *)
mull H L a35 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b9 *)
mull H L a35 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b10 *)
mull H L a35 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b11 *)
mull H L a35 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b12 *)
mull H L a35 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b13 *)
mull H L a35 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b14 *)
mull H L a35 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b15 *)
mull H L a35 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b16 *)
mull H L a35 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b17 *)
mull H L a35 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b18 *)
mull H L a35 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b19 *)
mull H L a35 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b20 *)
mull H L a35 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b21 *)
mull H L a35 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b22 *)
mull H L a35 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b23 *)
mull H L a35 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b24 *)
mull H L a35 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b25 *)
mull H L a35 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b26 *)
mull H L a35 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b27 *)
mull H L a35 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b28 *)
mull H L a35 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b29 *)
mull H L a35 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b30 *)
mull H L a35 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b31 *)
mull H L a35 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b32 *)
mull H L a35 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b33 *)
mull H L a35 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b34 *)
mull H L a35 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b35 *)
mull H L a35 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b36 *)
mull H L a35 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b37 *)
mull H L a35 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b38 *)
mull H L a35 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b39 *)
mull H L a35 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b40 *)
mull H L a35 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b41 *)
mull H L a35 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b42 *)
mull H L a35 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b43 *)
mull H L a35 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b44 *)
mull H L a35 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b45 *)
mull H L a35 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b46 *)
mull H L a35 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b47 *)
mull H L a35 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b48 *)
mull H L a35 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b49 *)
mull H L a35 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b50 *)
mull H L a35 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b51 *)
mull H L a35 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b52 *)
mull H L a35 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b53 *)
mull H L a35 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b54 *)
mull H L a35 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b55 *)
mull H L a35 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b56 *)
mull H L a35 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b57 *)
mull H L a35 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b58 *)
mull H L a35 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b59 *)
mull H L a35 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b60 *)
mull H L a35 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b61 *)
mull H L a35 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b62 *)
mull H L a35 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa35,	b63 *)
mull H L a35 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a36,	b0 *)
mov accHH 0@uint32;
mull accHL accL a36 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b1 *)
mull H L a36 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b2 *)
mull H L a36 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b3 *)
mull H L a36 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b4 *)
mull H L a36 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b5 *)
mull H L a36 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b6 *)
mull H L a36 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b7 *)
mull H L a36 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b8 *)
mull H L a36 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b9 *)
mull H L a36 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b10 *)
mull H L a36 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b11 *)
mull H L a36 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b12 *)
mull H L a36 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b13 *)
mull H L a36 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b14 *)
mull H L a36 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b15 *)
mull H L a36 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b16 *)
mull H L a36 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b17 *)
mull H L a36 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b18 *)
mull H L a36 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b19 *)
mull H L a36 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b20 *)
mull H L a36 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b21 *)
mull H L a36 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b22 *)
mull H L a36 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b23 *)
mull H L a36 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b24 *)
mull H L a36 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b25 *)
mull H L a36 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b26 *)
mull H L a36 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b27 *)
mull H L a36 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b28 *)
mull H L a36 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b29 *)
mull H L a36 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b30 *)
mull H L a36 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b31 *)
mull H L a36 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b32 *)
mull H L a36 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b33 *)
mull H L a36 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b34 *)
mull H L a36 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b35 *)
mull H L a36 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b36 *)
mull H L a36 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b37 *)
mull H L a36 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b38 *)
mull H L a36 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b39 *)
mull H L a36 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b40 *)
mull H L a36 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b41 *)
mull H L a36 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b42 *)
mull H L a36 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b43 *)
mull H L a36 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b44 *)
mull H L a36 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b45 *)
mull H L a36 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b46 *)
mull H L a36 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b47 *)
mull H L a36 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b48 *)
mull H L a36 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b49 *)
mull H L a36 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b50 *)
mull H L a36 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b51 *)
mull H L a36 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b52 *)
mull H L a36 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b53 *)
mull H L a36 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b54 *)
mull H L a36 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b55 *)
mull H L a36 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b56 *)
mull H L a36 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b57 *)
mull H L a36 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b58 *)
mull H L a36 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b59 *)
mull H L a36 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b60 *)
mull H L a36 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b61 *)
mull H L a36 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b62 *)
mull H L a36 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa36,	b63 *)
mull H L a36 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a37,	b0 *)
mov accHH 0@uint32;
mull accHL accL a37 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b1 *)
mull H L a37 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b2 *)
mull H L a37 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b3 *)
mull H L a37 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b4 *)
mull H L a37 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b5 *)
mull H L a37 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b6 *)
mull H L a37 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b7 *)
mull H L a37 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b8 *)
mull H L a37 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b9 *)
mull H L a37 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b10 *)
mull H L a37 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b11 *)
mull H L a37 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b12 *)
mull H L a37 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b13 *)
mull H L a37 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b14 *)
mull H L a37 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b15 *)
mull H L a37 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b16 *)
mull H L a37 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b17 *)
mull H L a37 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b18 *)
mull H L a37 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b19 *)
mull H L a37 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b20 *)
mull H L a37 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b21 *)
mull H L a37 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b22 *)
mull H L a37 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b23 *)
mull H L a37 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b24 *)
mull H L a37 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b25 *)
mull H L a37 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b26 *)
mull H L a37 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b27 *)
mull H L a37 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b28 *)
mull H L a37 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b29 *)
mull H L a37 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b30 *)
mull H L a37 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b31 *)
mull H L a37 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b32 *)
mull H L a37 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b33 *)
mull H L a37 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b34 *)
mull H L a37 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b35 *)
mull H L a37 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b36 *)
mull H L a37 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b37 *)
mull H L a37 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b38 *)
mull H L a37 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b39 *)
mull H L a37 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b40 *)
mull H L a37 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b41 *)
mull H L a37 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b42 *)
mull H L a37 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b43 *)
mull H L a37 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b44 *)
mull H L a37 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b45 *)
mull H L a37 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b46 *)
mull H L a37 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b47 *)
mull H L a37 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b48 *)
mull H L a37 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b49 *)
mull H L a37 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b50 *)
mull H L a37 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b51 *)
mull H L a37 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b52 *)
mull H L a37 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b53 *)
mull H L a37 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b54 *)
mull H L a37 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b55 *)
mull H L a37 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b56 *)
mull H L a37 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b57 *)
mull H L a37 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b58 *)
mull H L a37 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b59 *)
mull H L a37 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b60 *)
mull H L a37 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b61 *)
mull H L a37 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b62 *)
mull H L a37 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa37,	b63 *)
mull H L a37 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a38,	b0 *)
mov accHH 0@uint32;
mull accHL accL a38 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b1 *)
mull H L a38 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b2 *)
mull H L a38 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b3 *)
mull H L a38 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b4 *)
mull H L a38 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b5 *)
mull H L a38 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b6 *)
mull H L a38 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b7 *)
mull H L a38 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b8 *)
mull H L a38 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b9 *)
mull H L a38 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b10 *)
mull H L a38 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b11 *)
mull H L a38 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b12 *)
mull H L a38 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b13 *)
mull H L a38 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b14 *)
mull H L a38 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b15 *)
mull H L a38 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b16 *)
mull H L a38 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b17 *)
mull H L a38 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b18 *)
mull H L a38 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b19 *)
mull H L a38 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b20 *)
mull H L a38 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b21 *)
mull H L a38 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b22 *)
mull H L a38 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b23 *)
mull H L a38 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b24 *)
mull H L a38 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b25 *)
mull H L a38 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b26 *)
mull H L a38 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b27 *)
mull H L a38 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b28 *)
mull H L a38 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b29 *)
mull H L a38 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b30 *)
mull H L a38 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b31 *)
mull H L a38 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b32 *)
mull H L a38 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b33 *)
mull H L a38 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b34 *)
mull H L a38 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b35 *)
mull H L a38 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b36 *)
mull H L a38 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b37 *)
mull H L a38 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b38 *)
mull H L a38 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b39 *)
mull H L a38 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b40 *)
mull H L a38 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b41 *)
mull H L a38 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b42 *)
mull H L a38 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b43 *)
mull H L a38 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b44 *)
mull H L a38 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b45 *)
mull H L a38 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b46 *)
mull H L a38 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b47 *)
mull H L a38 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b48 *)
mull H L a38 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b49 *)
mull H L a38 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b50 *)
mull H L a38 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b51 *)
mull H L a38 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b52 *)
mull H L a38 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b53 *)
mull H L a38 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b54 *)
mull H L a38 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b55 *)
mull H L a38 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b56 *)
mull H L a38 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b57 *)
mull H L a38 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b58 *)
mull H L a38 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b59 *)
mull H L a38 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b60 *)
mull H L a38 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b61 *)
mull H L a38 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b62 *)
mull H L a38 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa38,	b63 *)
mull H L a38 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a39,	b0 *)
mov accHH 0@uint32;
mull accHL accL a39 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b1 *)
mull H L a39 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b2 *)
mull H L a39 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b3 *)
mull H L a39 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b4 *)
mull H L a39 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b5 *)
mull H L a39 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b6 *)
mull H L a39 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b7 *)
mull H L a39 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b8 *)
mull H L a39 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b9 *)
mull H L a39 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b10 *)
mull H L a39 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b11 *)
mull H L a39 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b12 *)
mull H L a39 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b13 *)
mull H L a39 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b14 *)
mull H L a39 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b15 *)
mull H L a39 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b16 *)
mull H L a39 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b17 *)
mull H L a39 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b18 *)
mull H L a39 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b19 *)
mull H L a39 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b20 *)
mull H L a39 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b21 *)
mull H L a39 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b22 *)
mull H L a39 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b23 *)
mull H L a39 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b24 *)
mull H L a39 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b25 *)
mull H L a39 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b26 *)
mull H L a39 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b27 *)
mull H L a39 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b28 *)
mull H L a39 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b29 *)
mull H L a39 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b30 *)
mull H L a39 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b31 *)
mull H L a39 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b32 *)
mull H L a39 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b33 *)
mull H L a39 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b34 *)
mull H L a39 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b35 *)
mull H L a39 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b36 *)
mull H L a39 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b37 *)
mull H L a39 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b38 *)
mull H L a39 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b39 *)
mull H L a39 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b40 *)
mull H L a39 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b41 *)
mull H L a39 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b42 *)
mull H L a39 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b43 *)
mull H L a39 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b44 *)
mull H L a39 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b45 *)
mull H L a39 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b46 *)
mull H L a39 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b47 *)
mull H L a39 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b48 *)
mull H L a39 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b49 *)
mull H L a39 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b50 *)
mull H L a39 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b51 *)
mull H L a39 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b52 *)
mull H L a39 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b53 *)
mull H L a39 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b54 *)
mull H L a39 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b55 *)
mull H L a39 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b56 *)
mull H L a39 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b57 *)
mull H L a39 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b58 *)
mull H L a39 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b59 *)
mull H L a39 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b60 *)
mull H L a39 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b61 *)
mull H L a39 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b62 *)
mull H L a39 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa39,	b63 *)
mull H L a39 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a40,	b0 *)
mov accHH 0@uint32;
mull accHL accL a40 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b1 *)
mull H L a40 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b2 *)
mull H L a40 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b3 *)
mull H L a40 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b4 *)
mull H L a40 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b5 *)
mull H L a40 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b6 *)
mull H L a40 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b7 *)
mull H L a40 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b8 *)
mull H L a40 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b9 *)
mull H L a40 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b10 *)
mull H L a40 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b11 *)
mull H L a40 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b12 *)
mull H L a40 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b13 *)
mull H L a40 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b14 *)
mull H L a40 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b15 *)
mull H L a40 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b16 *)
mull H L a40 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b17 *)
mull H L a40 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b18 *)
mull H L a40 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b19 *)
mull H L a40 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b20 *)
mull H L a40 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b21 *)
mull H L a40 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b22 *)
mull H L a40 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b23 *)
mull H L a40 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b24 *)
mull H L a40 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b25 *)
mull H L a40 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b26 *)
mull H L a40 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b27 *)
mull H L a40 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b28 *)
mull H L a40 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b29 *)
mull H L a40 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b30 *)
mull H L a40 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b31 *)
mull H L a40 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b32 *)
mull H L a40 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b33 *)
mull H L a40 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b34 *)
mull H L a40 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b35 *)
mull H L a40 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b36 *)
mull H L a40 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b37 *)
mull H L a40 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b38 *)
mull H L a40 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b39 *)
mull H L a40 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b40 *)
mull H L a40 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b41 *)
mull H L a40 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b42 *)
mull H L a40 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b43 *)
mull H L a40 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b44 *)
mull H L a40 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b45 *)
mull H L a40 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b46 *)
mull H L a40 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b47 *)
mull H L a40 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b48 *)
mull H L a40 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b49 *)
mull H L a40 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b50 *)
mull H L a40 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b51 *)
mull H L a40 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b52 *)
mull H L a40 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b53 *)
mull H L a40 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b54 *)
mull H L a40 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b55 *)
mull H L a40 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b56 *)
mull H L a40 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b57 *)
mull H L a40 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b58 *)
mull H L a40 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b59 *)
mull H L a40 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b60 *)
mull H L a40 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b61 *)
mull H L a40 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b62 *)
mull H L a40 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa40,	b63 *)
mull H L a40 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a41,	b0 *)
mov accHH 0@uint32;
mull accHL accL a41 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b1 *)
mull H L a41 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b2 *)
mull H L a41 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b3 *)
mull H L a41 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b4 *)
mull H L a41 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b5 *)
mull H L a41 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b6 *)
mull H L a41 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b7 *)
mull H L a41 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b8 *)
mull H L a41 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b9 *)
mull H L a41 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b10 *)
mull H L a41 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b11 *)
mull H L a41 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b12 *)
mull H L a41 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b13 *)
mull H L a41 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b14 *)
mull H L a41 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b15 *)
mull H L a41 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b16 *)
mull H L a41 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b17 *)
mull H L a41 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b18 *)
mull H L a41 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b19 *)
mull H L a41 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b20 *)
mull H L a41 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b21 *)
mull H L a41 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b22 *)
mull H L a41 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b23 *)
mull H L a41 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b24 *)
mull H L a41 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b25 *)
mull H L a41 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b26 *)
mull H L a41 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b27 *)
mull H L a41 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b28 *)
mull H L a41 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b29 *)
mull H L a41 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b30 *)
mull H L a41 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b31 *)
mull H L a41 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b32 *)
mull H L a41 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b33 *)
mull H L a41 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b34 *)
mull H L a41 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b35 *)
mull H L a41 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b36 *)
mull H L a41 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b37 *)
mull H L a41 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b38 *)
mull H L a41 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b39 *)
mull H L a41 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b40 *)
mull H L a41 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b41 *)
mull H L a41 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b42 *)
mull H L a41 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b43 *)
mull H L a41 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b44 *)
mull H L a41 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b45 *)
mull H L a41 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b46 *)
mull H L a41 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b47 *)
mull H L a41 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b48 *)
mull H L a41 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b49 *)
mull H L a41 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b50 *)
mull H L a41 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b51 *)
mull H L a41 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b52 *)
mull H L a41 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b53 *)
mull H L a41 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b54 *)
mull H L a41 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b55 *)
mull H L a41 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b56 *)
mull H L a41 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b57 *)
mull H L a41 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b58 *)
mull H L a41 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b59 *)
mull H L a41 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b60 *)
mull H L a41 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b61 *)
mull H L a41 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b62 *)
mull H L a41 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa41,	b63 *)
mull H L a41 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a42,	b0 *)
mov accHH 0@uint32;
mull accHL accL a42 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b1 *)
mull H L a42 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b2 *)
mull H L a42 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b3 *)
mull H L a42 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b4 *)
mull H L a42 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b5 *)
mull H L a42 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b6 *)
mull H L a42 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b7 *)
mull H L a42 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b8 *)
mull H L a42 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b9 *)
mull H L a42 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b10 *)
mull H L a42 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b11 *)
mull H L a42 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b12 *)
mull H L a42 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b13 *)
mull H L a42 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b14 *)
mull H L a42 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b15 *)
mull H L a42 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b16 *)
mull H L a42 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b17 *)
mull H L a42 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b18 *)
mull H L a42 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b19 *)
mull H L a42 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b20 *)
mull H L a42 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b21 *)
mull H L a42 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b22 *)
mull H L a42 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b23 *)
mull H L a42 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b24 *)
mull H L a42 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b25 *)
mull H L a42 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b26 *)
mull H L a42 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b27 *)
mull H L a42 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b28 *)
mull H L a42 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b29 *)
mull H L a42 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b30 *)
mull H L a42 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b31 *)
mull H L a42 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b32 *)
mull H L a42 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b33 *)
mull H L a42 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b34 *)
mull H L a42 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b35 *)
mull H L a42 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b36 *)
mull H L a42 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b37 *)
mull H L a42 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b38 *)
mull H L a42 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b39 *)
mull H L a42 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b40 *)
mull H L a42 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b41 *)
mull H L a42 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b42 *)
mull H L a42 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b43 *)
mull H L a42 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b44 *)
mull H L a42 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b45 *)
mull H L a42 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b46 *)
mull H L a42 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b47 *)
mull H L a42 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b48 *)
mull H L a42 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b49 *)
mull H L a42 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b50 *)
mull H L a42 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b51 *)
mull H L a42 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b52 *)
mull H L a42 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b53 *)
mull H L a42 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b54 *)
mull H L a42 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b55 *)
mull H L a42 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b56 *)
mull H L a42 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b57 *)
mull H L a42 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b58 *)
mull H L a42 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b59 *)
mull H L a42 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b60 *)
mull H L a42 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b61 *)
mull H L a42 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b62 *)
mull H L a42 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa42,	b63 *)
mull H L a42 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a43,	b0 *)
mov accHH 0@uint32;
mull accHL accL a43 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b1 *)
mull H L a43 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b2 *)
mull H L a43 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b3 *)
mull H L a43 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b4 *)
mull H L a43 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b5 *)
mull H L a43 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b6 *)
mull H L a43 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b7 *)
mull H L a43 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b8 *)
mull H L a43 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b9 *)
mull H L a43 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b10 *)
mull H L a43 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b11 *)
mull H L a43 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b12 *)
mull H L a43 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b13 *)
mull H L a43 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b14 *)
mull H L a43 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b15 *)
mull H L a43 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b16 *)
mull H L a43 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b17 *)
mull H L a43 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b18 *)
mull H L a43 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b19 *)
mull H L a43 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b20 *)
mull H L a43 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b21 *)
mull H L a43 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b22 *)
mull H L a43 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b23 *)
mull H L a43 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b24 *)
mull H L a43 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b25 *)
mull H L a43 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b26 *)
mull H L a43 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b27 *)
mull H L a43 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b28 *)
mull H L a43 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b29 *)
mull H L a43 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b30 *)
mull H L a43 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b31 *)
mull H L a43 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b32 *)
mull H L a43 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b33 *)
mull H L a43 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b34 *)
mull H L a43 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b35 *)
mull H L a43 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b36 *)
mull H L a43 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b37 *)
mull H L a43 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b38 *)
mull H L a43 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b39 *)
mull H L a43 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b40 *)
mull H L a43 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b41 *)
mull H L a43 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b42 *)
mull H L a43 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b43 *)
mull H L a43 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b44 *)
mull H L a43 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b45 *)
mull H L a43 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b46 *)
mull H L a43 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b47 *)
mull H L a43 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b48 *)
mull H L a43 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b49 *)
mull H L a43 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b50 *)
mull H L a43 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b51 *)
mull H L a43 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b52 *)
mull H L a43 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b53 *)
mull H L a43 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b54 *)
mull H L a43 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b55 *)
mull H L a43 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b56 *)
mull H L a43 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b57 *)
mull H L a43 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b58 *)
mull H L a43 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b59 *)
mull H L a43 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b60 *)
mull H L a43 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b61 *)
mull H L a43 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b62 *)
mull H L a43 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa43,	b63 *)
mull H L a43 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a44,	b0 *)
mov accHH 0@uint32;
mull accHL accL a44 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b1 *)
mull H L a44 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b2 *)
mull H L a44 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b3 *)
mull H L a44 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b4 *)
mull H L a44 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b5 *)
mull H L a44 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b6 *)
mull H L a44 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b7 *)
mull H L a44 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b8 *)
mull H L a44 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b9 *)
mull H L a44 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b10 *)
mull H L a44 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b11 *)
mull H L a44 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b12 *)
mull H L a44 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b13 *)
mull H L a44 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b14 *)
mull H L a44 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b15 *)
mull H L a44 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b16 *)
mull H L a44 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b17 *)
mull H L a44 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b18 *)
mull H L a44 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b19 *)
mull H L a44 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b20 *)
mull H L a44 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b21 *)
mull H L a44 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b22 *)
mull H L a44 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b23 *)
mull H L a44 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b24 *)
mull H L a44 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b25 *)
mull H L a44 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b26 *)
mull H L a44 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b27 *)
mull H L a44 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b28 *)
mull H L a44 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b29 *)
mull H L a44 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b30 *)
mull H L a44 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b31 *)
mull H L a44 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b32 *)
mull H L a44 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b33 *)
mull H L a44 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b34 *)
mull H L a44 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b35 *)
mull H L a44 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b36 *)
mull H L a44 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b37 *)
mull H L a44 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b38 *)
mull H L a44 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b39 *)
mull H L a44 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b40 *)
mull H L a44 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b41 *)
mull H L a44 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b42 *)
mull H L a44 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b43 *)
mull H L a44 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b44 *)
mull H L a44 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b45 *)
mull H L a44 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b46 *)
mull H L a44 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b47 *)
mull H L a44 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b48 *)
mull H L a44 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b49 *)
mull H L a44 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b50 *)
mull H L a44 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b51 *)
mull H L a44 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b52 *)
mull H L a44 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b53 *)
mull H L a44 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b54 *)
mull H L a44 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b55 *)
mull H L a44 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b56 *)
mull H L a44 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b57 *)
mull H L a44 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b58 *)
mull H L a44 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b59 *)
mull H L a44 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b60 *)
mull H L a44 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b61 *)
mull H L a44 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b62 *)
mull H L a44 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa44,	b63 *)
mull H L a44 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a45,	b0 *)
mov accHH 0@uint32;
mull accHL accL a45 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b1 *)
mull H L a45 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b2 *)
mull H L a45 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b3 *)
mull H L a45 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b4 *)
mull H L a45 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b5 *)
mull H L a45 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b6 *)
mull H L a45 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b7 *)
mull H L a45 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b8 *)
mull H L a45 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b9 *)
mull H L a45 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b10 *)
mull H L a45 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b11 *)
mull H L a45 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b12 *)
mull H L a45 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b13 *)
mull H L a45 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b14 *)
mull H L a45 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b15 *)
mull H L a45 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b16 *)
mull H L a45 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b17 *)
mull H L a45 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b18 *)
mull H L a45 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b19 *)
mull H L a45 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b20 *)
mull H L a45 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b21 *)
mull H L a45 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b22 *)
mull H L a45 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b23 *)
mull H L a45 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b24 *)
mull H L a45 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b25 *)
mull H L a45 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b26 *)
mull H L a45 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b27 *)
mull H L a45 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b28 *)
mull H L a45 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b29 *)
mull H L a45 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b30 *)
mull H L a45 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b31 *)
mull H L a45 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b32 *)
mull H L a45 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b33 *)
mull H L a45 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b34 *)
mull H L a45 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b35 *)
mull H L a45 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b36 *)
mull H L a45 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b37 *)
mull H L a45 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b38 *)
mull H L a45 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b39 *)
mull H L a45 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b40 *)
mull H L a45 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b41 *)
mull H L a45 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b42 *)
mull H L a45 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b43 *)
mull H L a45 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b44 *)
mull H L a45 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b45 *)
mull H L a45 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b46 *)
mull H L a45 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b47 *)
mull H L a45 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b48 *)
mull H L a45 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b49 *)
mull H L a45 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b50 *)
mull H L a45 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b51 *)
mull H L a45 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b52 *)
mull H L a45 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b53 *)
mull H L a45 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b54 *)
mull H L a45 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b55 *)
mull H L a45 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b56 *)
mull H L a45 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b57 *)
mull H L a45 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b58 *)
mull H L a45 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b59 *)
mull H L a45 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b60 *)
mull H L a45 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b61 *)
mull H L a45 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b62 *)
mull H L a45 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa45,	b63 *)
mull H L a45 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a46,	b0 *)
mov accHH 0@uint32;
mull accHL accL a46 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b1 *)
mull H L a46 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b2 *)
mull H L a46 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b3 *)
mull H L a46 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b4 *)
mull H L a46 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b5 *)
mull H L a46 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b6 *)
mull H L a46 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b7 *)
mull H L a46 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b8 *)
mull H L a46 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b9 *)
mull H L a46 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b10 *)
mull H L a46 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b11 *)
mull H L a46 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b12 *)
mull H L a46 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b13 *)
mull H L a46 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b14 *)
mull H L a46 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b15 *)
mull H L a46 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b16 *)
mull H L a46 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b17 *)
mull H L a46 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b18 *)
mull H L a46 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b19 *)
mull H L a46 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b20 *)
mull H L a46 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b21 *)
mull H L a46 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b22 *)
mull H L a46 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b23 *)
mull H L a46 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b24 *)
mull H L a46 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b25 *)
mull H L a46 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b26 *)
mull H L a46 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b27 *)
mull H L a46 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b28 *)
mull H L a46 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b29 *)
mull H L a46 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b30 *)
mull H L a46 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b31 *)
mull H L a46 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b32 *)
mull H L a46 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b33 *)
mull H L a46 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b34 *)
mull H L a46 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b35 *)
mull H L a46 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b36 *)
mull H L a46 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b37 *)
mull H L a46 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b38 *)
mull H L a46 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b39 *)
mull H L a46 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b40 *)
mull H L a46 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b41 *)
mull H L a46 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b42 *)
mull H L a46 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b43 *)
mull H L a46 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b44 *)
mull H L a46 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b45 *)
mull H L a46 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b46 *)
mull H L a46 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b47 *)
mull H L a46 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b48 *)
mull H L a46 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b49 *)
mull H L a46 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b50 *)
mull H L a46 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b51 *)
mull H L a46 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b52 *)
mull H L a46 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b53 *)
mull H L a46 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b54 *)
mull H L a46 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b55 *)
mull H L a46 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b56 *)
mull H L a46 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b57 *)
mull H L a46 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b58 *)
mull H L a46 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b59 *)
mull H L a46 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b60 *)
mull H L a46 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b61 *)
mull H L a46 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b62 *)
mull H L a46 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa46,	b63 *)
mull H L a46 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a47,	b0 *)
mov accHH 0@uint32;
mull accHL accL a47 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b1 *)
mull H L a47 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b2 *)
mull H L a47 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b3 *)
mull H L a47 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b4 *)
mull H L a47 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b5 *)
mull H L a47 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b6 *)
mull H L a47 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b7 *)
mull H L a47 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b8 *)
mull H L a47 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b9 *)
mull H L a47 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b10 *)
mull H L a47 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b11 *)
mull H L a47 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b12 *)
mull H L a47 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b13 *)
mull H L a47 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b14 *)
mull H L a47 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b15 *)
mull H L a47 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b16 *)
mull H L a47 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b17 *)
mull H L a47 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b18 *)
mull H L a47 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b19 *)
mull H L a47 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b20 *)
mull H L a47 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b21 *)
mull H L a47 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b22 *)
mull H L a47 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b23 *)
mull H L a47 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b24 *)
mull H L a47 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b25 *)
mull H L a47 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b26 *)
mull H L a47 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b27 *)
mull H L a47 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b28 *)
mull H L a47 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b29 *)
mull H L a47 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b30 *)
mull H L a47 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b31 *)
mull H L a47 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b32 *)
mull H L a47 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b33 *)
mull H L a47 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b34 *)
mull H L a47 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b35 *)
mull H L a47 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b36 *)
mull H L a47 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b37 *)
mull H L a47 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b38 *)
mull H L a47 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b39 *)
mull H L a47 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b40 *)
mull H L a47 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b41 *)
mull H L a47 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b42 *)
mull H L a47 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b43 *)
mull H L a47 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b44 *)
mull H L a47 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b45 *)
mull H L a47 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b46 *)
mull H L a47 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b47 *)
mull H L a47 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b48 *)
mull H L a47 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b49 *)
mull H L a47 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b50 *)
mull H L a47 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b51 *)
mull H L a47 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b52 *)
mull H L a47 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b53 *)
mull H L a47 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b54 *)
mull H L a47 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b55 *)
mull H L a47 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b56 *)
mull H L a47 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b57 *)
mull H L a47 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b58 *)
mull H L a47 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b59 *)
mull H L a47 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b60 *)
mull H L a47 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b61 *)
mull H L a47 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b62 *)
mull H L a47 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa47,	b63 *)
mull H L a47 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a48,	b0 *)
mov accHH 0@uint32;
mull accHL accL a48 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b1 *)
mull H L a48 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b2 *)
mull H L a48 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b3 *)
mull H L a48 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b4 *)
mull H L a48 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b5 *)
mull H L a48 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b6 *)
mull H L a48 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b7 *)
mull H L a48 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b8 *)
mull H L a48 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b9 *)
mull H L a48 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b10 *)
mull H L a48 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b11 *)
mull H L a48 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b12 *)
mull H L a48 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b13 *)
mull H L a48 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b14 *)
mull H L a48 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b15 *)
mull H L a48 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b16 *)
mull H L a48 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b17 *)
mull H L a48 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b18 *)
mull H L a48 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b19 *)
mull H L a48 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b20 *)
mull H L a48 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b21 *)
mull H L a48 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b22 *)
mull H L a48 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b23 *)
mull H L a48 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b24 *)
mull H L a48 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b25 *)
mull H L a48 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b26 *)
mull H L a48 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b27 *)
mull H L a48 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b28 *)
mull H L a48 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b29 *)
mull H L a48 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b30 *)
mull H L a48 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b31 *)
mull H L a48 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b32 *)
mull H L a48 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b33 *)
mull H L a48 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b34 *)
mull H L a48 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b35 *)
mull H L a48 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b36 *)
mull H L a48 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b37 *)
mull H L a48 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b38 *)
mull H L a48 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b39 *)
mull H L a48 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b40 *)
mull H L a48 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b41 *)
mull H L a48 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b42 *)
mull H L a48 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b43 *)
mull H L a48 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b44 *)
mull H L a48 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b45 *)
mull H L a48 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b46 *)
mull H L a48 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b47 *)
mull H L a48 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b48 *)
mull H L a48 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b49 *)
mull H L a48 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b50 *)
mull H L a48 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b51 *)
mull H L a48 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b52 *)
mull H L a48 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b53 *)
mull H L a48 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b54 *)
mull H L a48 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b55 *)
mull H L a48 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b56 *)
mull H L a48 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b57 *)
mull H L a48 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b58 *)
mull H L a48 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b59 *)
mull H L a48 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b60 *)
mull H L a48 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b61 *)
mull H L a48 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b62 *)
mull H L a48 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa48,	b63 *)
mull H L a48 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a49,	b0 *)
mov accHH 0@uint32;
mull accHL accL a49 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b1 *)
mull H L a49 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b2 *)
mull H L a49 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b3 *)
mull H L a49 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b4 *)
mull H L a49 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b5 *)
mull H L a49 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b6 *)
mull H L a49 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b7 *)
mull H L a49 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b8 *)
mull H L a49 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b9 *)
mull H L a49 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b10 *)
mull H L a49 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b11 *)
mull H L a49 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b12 *)
mull H L a49 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b13 *)
mull H L a49 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b14 *)
mull H L a49 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b15 *)
mull H L a49 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b16 *)
mull H L a49 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b17 *)
mull H L a49 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b18 *)
mull H L a49 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b19 *)
mull H L a49 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b20 *)
mull H L a49 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b21 *)
mull H L a49 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b22 *)
mull H L a49 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b23 *)
mull H L a49 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b24 *)
mull H L a49 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b25 *)
mull H L a49 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b26 *)
mull H L a49 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b27 *)
mull H L a49 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b28 *)
mull H L a49 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b29 *)
mull H L a49 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b30 *)
mull H L a49 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b31 *)
mull H L a49 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b32 *)
mull H L a49 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b33 *)
mull H L a49 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b34 *)
mull H L a49 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b35 *)
mull H L a49 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b36 *)
mull H L a49 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b37 *)
mull H L a49 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b38 *)
mull H L a49 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b39 *)
mull H L a49 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b40 *)
mull H L a49 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b41 *)
mull H L a49 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b42 *)
mull H L a49 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b43 *)
mull H L a49 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b44 *)
mull H L a49 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b45 *)
mull H L a49 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b46 *)
mull H L a49 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b47 *)
mull H L a49 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b48 *)
mull H L a49 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b49 *)
mull H L a49 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b50 *)
mull H L a49 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b51 *)
mull H L a49 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b52 *)
mull H L a49 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b53 *)
mull H L a49 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b54 *)
mull H L a49 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b55 *)
mull H L a49 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b56 *)
mull H L a49 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b57 *)
mull H L a49 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b58 *)
mull H L a49 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b59 *)
mull H L a49 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b60 *)
mull H L a49 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b61 *)
mull H L a49 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b62 *)
mull H L a49 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa49,	b63 *)
mull H L a49 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a50,	b0 *)
mov accHH 0@uint32;
mull accHL accL a50 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b1 *)
mull H L a50 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b2 *)
mull H L a50 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b3 *)
mull H L a50 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b4 *)
mull H L a50 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b5 *)
mull H L a50 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b6 *)
mull H L a50 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b7 *)
mull H L a50 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b8 *)
mull H L a50 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b9 *)
mull H L a50 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b10 *)
mull H L a50 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b11 *)
mull H L a50 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b12 *)
mull H L a50 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b13 *)
mull H L a50 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b14 *)
mull H L a50 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b15 *)
mull H L a50 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b16 *)
mull H L a50 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b17 *)
mull H L a50 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b18 *)
mull H L a50 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b19 *)
mull H L a50 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b20 *)
mull H L a50 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b21 *)
mull H L a50 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b22 *)
mull H L a50 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b23 *)
mull H L a50 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b24 *)
mull H L a50 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b25 *)
mull H L a50 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b26 *)
mull H L a50 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b27 *)
mull H L a50 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b28 *)
mull H L a50 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b29 *)
mull H L a50 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b30 *)
mull H L a50 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b31 *)
mull H L a50 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b32 *)
mull H L a50 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b33 *)
mull H L a50 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b34 *)
mull H L a50 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b35 *)
mull H L a50 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b36 *)
mull H L a50 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b37 *)
mull H L a50 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b38 *)
mull H L a50 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b39 *)
mull H L a50 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b40 *)
mull H L a50 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b41 *)
mull H L a50 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b42 *)
mull H L a50 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b43 *)
mull H L a50 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b44 *)
mull H L a50 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b45 *)
mull H L a50 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b46 *)
mull H L a50 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b47 *)
mull H L a50 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b48 *)
mull H L a50 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b49 *)
mull H L a50 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b50 *)
mull H L a50 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b51 *)
mull H L a50 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b52 *)
mull H L a50 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b53 *)
mull H L a50 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b54 *)
mull H L a50 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b55 *)
mull H L a50 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b56 *)
mull H L a50 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b57 *)
mull H L a50 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b58 *)
mull H L a50 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b59 *)
mull H L a50 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b60 *)
mull H L a50 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b61 *)
mull H L a50 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b62 *)
mull H L a50 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa50,	b63 *)
mull H L a50 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a51,	b0 *)
mov accHH 0@uint32;
mull accHL accL a51 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b1 *)
mull H L a51 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b2 *)
mull H L a51 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b3 *)
mull H L a51 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b4 *)
mull H L a51 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b5 *)
mull H L a51 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b6 *)
mull H L a51 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b7 *)
mull H L a51 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b8 *)
mull H L a51 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b9 *)
mull H L a51 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b10 *)
mull H L a51 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b11 *)
mull H L a51 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b12 *)
mull H L a51 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b13 *)
mull H L a51 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b14 *)
mull H L a51 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b15 *)
mull H L a51 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b16 *)
mull H L a51 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b17 *)
mull H L a51 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b18 *)
mull H L a51 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b19 *)
mull H L a51 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b20 *)
mull H L a51 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b21 *)
mull H L a51 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b22 *)
mull H L a51 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b23 *)
mull H L a51 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b24 *)
mull H L a51 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b25 *)
mull H L a51 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b26 *)
mull H L a51 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b27 *)
mull H L a51 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b28 *)
mull H L a51 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b29 *)
mull H L a51 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b30 *)
mull H L a51 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b31 *)
mull H L a51 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b32 *)
mull H L a51 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b33 *)
mull H L a51 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b34 *)
mull H L a51 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b35 *)
mull H L a51 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b36 *)
mull H L a51 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b37 *)
mull H L a51 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b38 *)
mull H L a51 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b39 *)
mull H L a51 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b40 *)
mull H L a51 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b41 *)
mull H L a51 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b42 *)
mull H L a51 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b43 *)
mull H L a51 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b44 *)
mull H L a51 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b45 *)
mull H L a51 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b46 *)
mull H L a51 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b47 *)
mull H L a51 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b48 *)
mull H L a51 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b49 *)
mull H L a51 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b50 *)
mull H L a51 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b51 *)
mull H L a51 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b52 *)
mull H L a51 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b53 *)
mull H L a51 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b54 *)
mull H L a51 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b55 *)
mull H L a51 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b56 *)
mull H L a51 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b57 *)
mull H L a51 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b58 *)
mull H L a51 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b59 *)
mull H L a51 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b60 *)
mull H L a51 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b61 *)
mull H L a51 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b62 *)
mull H L a51 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa51,	b63 *)
mull H L a51 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a52,	b0 *)
mov accHH 0@uint32;
mull accHL accL a52 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b1 *)
mull H L a52 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b2 *)
mull H L a52 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b3 *)
mull H L a52 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b4 *)
mull H L a52 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b5 *)
mull H L a52 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b6 *)
mull H L a52 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b7 *)
mull H L a52 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b8 *)
mull H L a52 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b9 *)
mull H L a52 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b10 *)
mull H L a52 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b11 *)
mull H L a52 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b12 *)
mull H L a52 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b13 *)
mull H L a52 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b14 *)
mull H L a52 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b15 *)
mull H L a52 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b16 *)
mull H L a52 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b17 *)
mull H L a52 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b18 *)
mull H L a52 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b19 *)
mull H L a52 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b20 *)
mull H L a52 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b21 *)
mull H L a52 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b22 *)
mull H L a52 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b23 *)
mull H L a52 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b24 *)
mull H L a52 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b25 *)
mull H L a52 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b26 *)
mull H L a52 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b27 *)
mull H L a52 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b28 *)
mull H L a52 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b29 *)
mull H L a52 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b30 *)
mull H L a52 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b31 *)
mull H L a52 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b32 *)
mull H L a52 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b33 *)
mull H L a52 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b34 *)
mull H L a52 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b35 *)
mull H L a52 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b36 *)
mull H L a52 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b37 *)
mull H L a52 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b38 *)
mull H L a52 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b39 *)
mull H L a52 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b40 *)
mull H L a52 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b41 *)
mull H L a52 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b42 *)
mull H L a52 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b43 *)
mull H L a52 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b44 *)
mull H L a52 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b45 *)
mull H L a52 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b46 *)
mull H L a52 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b47 *)
mull H L a52 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b48 *)
mull H L a52 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b49 *)
mull H L a52 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b50 *)
mull H L a52 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b51 *)
mull H L a52 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b52 *)
mull H L a52 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b53 *)
mull H L a52 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b54 *)
mull H L a52 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b55 *)
mull H L a52 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b56 *)
mull H L a52 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b57 *)
mull H L a52 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b58 *)
mull H L a52 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b59 *)
mull H L a52 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b60 *)
mull H L a52 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b61 *)
mull H L a52 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b62 *)
mull H L a52 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa52,	b63 *)
mull H L a52 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a53,	b0 *)
mov accHH 0@uint32;
mull accHL accL a53 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b1 *)
mull H L a53 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b2 *)
mull H L a53 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b3 *)
mull H L a53 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b4 *)
mull H L a53 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b5 *)
mull H L a53 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b6 *)
mull H L a53 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b7 *)
mull H L a53 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b8 *)
mull H L a53 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b9 *)
mull H L a53 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b10 *)
mull H L a53 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b11 *)
mull H L a53 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b12 *)
mull H L a53 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b13 *)
mull H L a53 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b14 *)
mull H L a53 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b15 *)
mull H L a53 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b16 *)
mull H L a53 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b17 *)
mull H L a53 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b18 *)
mull H L a53 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b19 *)
mull H L a53 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b20 *)
mull H L a53 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b21 *)
mull H L a53 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b22 *)
mull H L a53 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b23 *)
mull H L a53 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b24 *)
mull H L a53 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b25 *)
mull H L a53 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b26 *)
mull H L a53 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b27 *)
mull H L a53 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b28 *)
mull H L a53 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b29 *)
mull H L a53 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b30 *)
mull H L a53 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b31 *)
mull H L a53 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b32 *)
mull H L a53 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b33 *)
mull H L a53 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b34 *)
mull H L a53 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b35 *)
mull H L a53 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b36 *)
mull H L a53 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b37 *)
mull H L a53 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b38 *)
mull H L a53 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b39 *)
mull H L a53 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b40 *)
mull H L a53 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b41 *)
mull H L a53 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b42 *)
mull H L a53 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b43 *)
mull H L a53 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b44 *)
mull H L a53 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b45 *)
mull H L a53 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b46 *)
mull H L a53 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b47 *)
mull H L a53 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b48 *)
mull H L a53 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b49 *)
mull H L a53 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b50 *)
mull H L a53 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b51 *)
mull H L a53 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b52 *)
mull H L a53 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b53 *)
mull H L a53 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b54 *)
mull H L a53 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b55 *)
mull H L a53 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b56 *)
mull H L a53 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b57 *)
mull H L a53 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b58 *)
mull H L a53 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b59 *)
mull H L a53 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b60 *)
mull H L a53 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b61 *)
mull H L a53 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b62 *)
mull H L a53 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa53,	b63 *)
mull H L a53 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a54,	b0 *)
mov accHH 0@uint32;
mull accHL accL a54 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b1 *)
mull H L a54 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b2 *)
mull H L a54 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b3 *)
mull H L a54 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b4 *)
mull H L a54 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b5 *)
mull H L a54 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b6 *)
mull H L a54 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b7 *)
mull H L a54 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b8 *)
mull H L a54 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b9 *)
mull H L a54 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b10 *)
mull H L a54 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b11 *)
mull H L a54 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b12 *)
mull H L a54 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b13 *)
mull H L a54 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b14 *)
mull H L a54 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b15 *)
mull H L a54 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b16 *)
mull H L a54 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b17 *)
mull H L a54 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b18 *)
mull H L a54 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b19 *)
mull H L a54 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b20 *)
mull H L a54 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b21 *)
mull H L a54 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b22 *)
mull H L a54 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b23 *)
mull H L a54 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b24 *)
mull H L a54 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b25 *)
mull H L a54 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b26 *)
mull H L a54 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b27 *)
mull H L a54 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b28 *)
mull H L a54 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b29 *)
mull H L a54 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b30 *)
mull H L a54 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b31 *)
mull H L a54 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b32 *)
mull H L a54 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b33 *)
mull H L a54 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b34 *)
mull H L a54 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b35 *)
mull H L a54 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b36 *)
mull H L a54 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b37 *)
mull H L a54 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b38 *)
mull H L a54 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b39 *)
mull H L a54 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b40 *)
mull H L a54 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b41 *)
mull H L a54 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b42 *)
mull H L a54 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b43 *)
mull H L a54 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b44 *)
mull H L a54 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b45 *)
mull H L a54 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b46 *)
mull H L a54 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b47 *)
mull H L a54 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b48 *)
mull H L a54 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b49 *)
mull H L a54 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b50 *)
mull H L a54 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b51 *)
mull H L a54 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b52 *)
mull H L a54 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b53 *)
mull H L a54 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b54 *)
mull H L a54 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b55 *)
mull H L a54 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b56 *)
mull H L a54 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b57 *)
mull H L a54 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b58 *)
mull H L a54 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b59 *)
mull H L a54 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b60 *)
mull H L a54 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b61 *)
mull H L a54 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b62 *)
mull H L a54 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa54,	b63 *)
mull H L a54 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a55,	b0 *)
mov accHH 0@uint32;
mull accHL accL a55 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b1 *)
mull H L a55 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b2 *)
mull H L a55 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b3 *)
mull H L a55 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b4 *)
mull H L a55 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b5 *)
mull H L a55 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b6 *)
mull H L a55 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b7 *)
mull H L a55 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b8 *)
mull H L a55 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b9 *)
mull H L a55 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b10 *)
mull H L a55 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b11 *)
mull H L a55 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b12 *)
mull H L a55 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b13 *)
mull H L a55 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b14 *)
mull H L a55 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b15 *)
mull H L a55 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b16 *)
mull H L a55 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b17 *)
mull H L a55 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b18 *)
mull H L a55 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b19 *)
mull H L a55 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b20 *)
mull H L a55 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b21 *)
mull H L a55 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b22 *)
mull H L a55 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b23 *)
mull H L a55 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b24 *)
mull H L a55 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b25 *)
mull H L a55 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b26 *)
mull H L a55 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b27 *)
mull H L a55 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b28 *)
mull H L a55 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b29 *)
mull H L a55 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b30 *)
mull H L a55 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b31 *)
mull H L a55 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b32 *)
mull H L a55 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b33 *)
mull H L a55 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b34 *)
mull H L a55 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b35 *)
mull H L a55 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b36 *)
mull H L a55 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b37 *)
mull H L a55 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b38 *)
mull H L a55 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b39 *)
mull H L a55 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b40 *)
mull H L a55 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b41 *)
mull H L a55 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b42 *)
mull H L a55 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b43 *)
mull H L a55 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b44 *)
mull H L a55 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b45 *)
mull H L a55 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b46 *)
mull H L a55 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b47 *)
mull H L a55 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b48 *)
mull H L a55 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b49 *)
mull H L a55 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b50 *)
mull H L a55 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b51 *)
mull H L a55 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b52 *)
mull H L a55 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b53 *)
mull H L a55 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b54 *)
mull H L a55 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b55 *)
mull H L a55 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b56 *)
mull H L a55 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b57 *)
mull H L a55 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b58 *)
mull H L a55 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b59 *)
mull H L a55 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b60 *)
mull H L a55 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b61 *)
mull H L a55 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b62 *)
mull H L a55 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa55,	b63 *)
mull H L a55 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a56,	b0 *)
mov accHH 0@uint32;
mull accHL accL a56 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b1 *)
mull H L a56 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b2 *)
mull H L a56 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b3 *)
mull H L a56 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b4 *)
mull H L a56 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b5 *)
mull H L a56 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b6 *)
mull H L a56 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b7 *)
mull H L a56 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b8 *)
mull H L a56 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b9 *)
mull H L a56 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b10 *)
mull H L a56 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b11 *)
mull H L a56 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b12 *)
mull H L a56 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b13 *)
mull H L a56 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b14 *)
mull H L a56 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b15 *)
mull H L a56 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b16 *)
mull H L a56 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b17 *)
mull H L a56 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b18 *)
mull H L a56 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b19 *)
mull H L a56 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b20 *)
mull H L a56 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b21 *)
mull H L a56 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b22 *)
mull H L a56 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b23 *)
mull H L a56 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b24 *)
mull H L a56 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b25 *)
mull H L a56 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b26 *)
mull H L a56 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b27 *)
mull H L a56 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b28 *)
mull H L a56 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b29 *)
mull H L a56 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b30 *)
mull H L a56 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b31 *)
mull H L a56 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b32 *)
mull H L a56 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b33 *)
mull H L a56 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b34 *)
mull H L a56 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b35 *)
mull H L a56 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b36 *)
mull H L a56 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b37 *)
mull H L a56 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b38 *)
mull H L a56 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b39 *)
mull H L a56 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b40 *)
mull H L a56 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b41 *)
mull H L a56 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b42 *)
mull H L a56 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b43 *)
mull H L a56 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b44 *)
mull H L a56 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b45 *)
mull H L a56 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b46 *)
mull H L a56 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b47 *)
mull H L a56 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b48 *)
mull H L a56 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b49 *)
mull H L a56 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b50 *)
mull H L a56 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b51 *)
mull H L a56 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b52 *)
mull H L a56 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b53 *)
mull H L a56 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b54 *)
mull H L a56 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b55 *)
mull H L a56 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b56 *)
mull H L a56 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b57 *)
mull H L a56 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b58 *)
mull H L a56 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b59 *)
mull H L a56 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b60 *)
mull H L a56 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b61 *)
mull H L a56 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b62 *)
mull H L a56 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa56,	b63 *)
mull H L a56 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a57,	b0 *)
mov accHH 0@uint32;
mull accHL accL a57 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b1 *)
mull H L a57 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b2 *)
mull H L a57 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b3 *)
mull H L a57 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b4 *)
mull H L a57 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b5 *)
mull H L a57 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b6 *)
mull H L a57 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b7 *)
mull H L a57 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b8 *)
mull H L a57 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b9 *)
mull H L a57 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b10 *)
mull H L a57 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b11 *)
mull H L a57 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b12 *)
mull H L a57 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b13 *)
mull H L a57 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b14 *)
mull H L a57 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b15 *)
mull H L a57 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b16 *)
mull H L a57 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b17 *)
mull H L a57 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b18 *)
mull H L a57 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b19 *)
mull H L a57 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b20 *)
mull H L a57 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b21 *)
mull H L a57 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b22 *)
mull H L a57 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b23 *)
mull H L a57 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b24 *)
mull H L a57 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b25 *)
mull H L a57 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b26 *)
mull H L a57 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b27 *)
mull H L a57 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b28 *)
mull H L a57 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b29 *)
mull H L a57 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b30 *)
mull H L a57 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b31 *)
mull H L a57 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b32 *)
mull H L a57 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b33 *)
mull H L a57 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b34 *)
mull H L a57 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b35 *)
mull H L a57 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b36 *)
mull H L a57 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b37 *)
mull H L a57 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b38 *)
mull H L a57 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b39 *)
mull H L a57 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b40 *)
mull H L a57 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b41 *)
mull H L a57 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b42 *)
mull H L a57 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b43 *)
mull H L a57 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b44 *)
mull H L a57 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b45 *)
mull H L a57 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b46 *)
mull H L a57 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b47 *)
mull H L a57 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b48 *)
mull H L a57 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b49 *)
mull H L a57 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b50 *)
mull H L a57 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b51 *)
mull H L a57 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b52 *)
mull H L a57 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b53 *)
mull H L a57 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b54 *)
mull H L a57 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b55 *)
mull H L a57 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b56 *)
mull H L a57 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b57 *)
mull H L a57 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b58 *)
mull H L a57 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b59 *)
mull H L a57 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b60 *)
mull H L a57 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b61 *)
mull H L a57 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b62 *)
mull H L a57 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa57,	b63 *)
mull H L a57 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a58,	b0 *)
mov accHH 0@uint32;
mull accHL accL a58 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b1 *)
mull H L a58 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b2 *)
mull H L a58 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b3 *)
mull H L a58 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b4 *)
mull H L a58 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b5 *)
mull H L a58 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b6 *)
mull H L a58 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b7 *)
mull H L a58 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b8 *)
mull H L a58 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b9 *)
mull H L a58 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b10 *)
mull H L a58 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b11 *)
mull H L a58 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b12 *)
mull H L a58 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b13 *)
mull H L a58 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b14 *)
mull H L a58 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b15 *)
mull H L a58 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b16 *)
mull H L a58 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b17 *)
mull H L a58 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b18 *)
mull H L a58 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b19 *)
mull H L a58 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b20 *)
mull H L a58 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b21 *)
mull H L a58 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b22 *)
mull H L a58 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b23 *)
mull H L a58 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b24 *)
mull H L a58 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b25 *)
mull H L a58 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b26 *)
mull H L a58 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b27 *)
mull H L a58 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b28 *)
mull H L a58 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b29 *)
mull H L a58 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b30 *)
mull H L a58 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b31 *)
mull H L a58 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b32 *)
mull H L a58 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b33 *)
mull H L a58 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b34 *)
mull H L a58 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b35 *)
mull H L a58 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b36 *)
mull H L a58 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b37 *)
mull H L a58 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b38 *)
mull H L a58 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b39 *)
mull H L a58 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b40 *)
mull H L a58 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b41 *)
mull H L a58 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b42 *)
mull H L a58 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b43 *)
mull H L a58 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b44 *)
mull H L a58 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b45 *)
mull H L a58 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b46 *)
mull H L a58 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b47 *)
mull H L a58 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b48 *)
mull H L a58 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b49 *)
mull H L a58 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b50 *)
mull H L a58 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b51 *)
mull H L a58 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b52 *)
mull H L a58 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b53 *)
mull H L a58 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b54 *)
mull H L a58 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b55 *)
mull H L a58 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b56 *)
mull H L a58 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b57 *)
mull H L a58 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b58 *)
mull H L a58 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b59 *)
mull H L a58 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b60 *)
mull H L a58 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b61 *)
mull H L a58 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b62 *)
mull H L a58 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa58,	b63 *)
mull H L a58 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a59,	b0 *)
mov accHH 0@uint32;
mull accHL accL a59 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b1 *)
mull H L a59 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b2 *)
mull H L a59 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b3 *)
mull H L a59 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b4 *)
mull H L a59 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b5 *)
mull H L a59 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b6 *)
mull H L a59 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b7 *)
mull H L a59 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b8 *)
mull H L a59 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b9 *)
mull H L a59 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b10 *)
mull H L a59 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b11 *)
mull H L a59 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b12 *)
mull H L a59 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b13 *)
mull H L a59 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b14 *)
mull H L a59 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b15 *)
mull H L a59 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b16 *)
mull H L a59 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b17 *)
mull H L a59 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b18 *)
mull H L a59 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b19 *)
mull H L a59 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b20 *)
mull H L a59 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b21 *)
mull H L a59 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b22 *)
mull H L a59 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b23 *)
mull H L a59 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b24 *)
mull H L a59 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b25 *)
mull H L a59 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b26 *)
mull H L a59 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b27 *)
mull H L a59 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b28 *)
mull H L a59 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b29 *)
mull H L a59 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b30 *)
mull H L a59 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b31 *)
mull H L a59 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b32 *)
mull H L a59 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b33 *)
mull H L a59 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b34 *)
mull H L a59 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b35 *)
mull H L a59 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b36 *)
mull H L a59 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b37 *)
mull H L a59 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b38 *)
mull H L a59 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b39 *)
mull H L a59 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b40 *)
mull H L a59 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b41 *)
mull H L a59 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b42 *)
mull H L a59 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b43 *)
mull H L a59 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b44 *)
mull H L a59 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b45 *)
mull H L a59 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b46 *)
mull H L a59 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b47 *)
mull H L a59 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b48 *)
mull H L a59 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b49 *)
mull H L a59 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b50 *)
mull H L a59 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b51 *)
mull H L a59 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b52 *)
mull H L a59 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b53 *)
mull H L a59 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b54 *)
mull H L a59 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b55 *)
mull H L a59 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b56 *)
mull H L a59 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b57 *)
mull H L a59 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b58 *)
mull H L a59 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b59 *)
mull H L a59 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b60 *)
mull H L a59 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b61 *)
mull H L a59 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b62 *)
mull H L a59 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa59,	b63 *)
mull H L a59 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a60,	b0 *)
mov accHH 0@uint32;
mull accHL accL a60 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b1 *)
mull H L a60 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b2 *)
mull H L a60 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b3 *)
mull H L a60 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b4 *)
mull H L a60 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b5 *)
mull H L a60 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b6 *)
mull H L a60 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b7 *)
mull H L a60 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b8 *)
mull H L a60 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b9 *)
mull H L a60 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b10 *)
mull H L a60 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b11 *)
mull H L a60 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b12 *)
mull H L a60 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b13 *)
mull H L a60 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b14 *)
mull H L a60 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b15 *)
mull H L a60 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b16 *)
mull H L a60 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b17 *)
mull H L a60 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b18 *)
mull H L a60 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b19 *)
mull H L a60 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b20 *)
mull H L a60 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b21 *)
mull H L a60 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b22 *)
mull H L a60 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b23 *)
mull H L a60 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b24 *)
mull H L a60 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b25 *)
mull H L a60 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b26 *)
mull H L a60 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b27 *)
mull H L a60 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b28 *)
mull H L a60 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b29 *)
mull H L a60 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b30 *)
mull H L a60 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b31 *)
mull H L a60 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b32 *)
mull H L a60 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b33 *)
mull H L a60 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b34 *)
mull H L a60 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b35 *)
mull H L a60 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b36 *)
mull H L a60 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b37 *)
mull H L a60 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b38 *)
mull H L a60 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b39 *)
mull H L a60 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b40 *)
mull H L a60 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b41 *)
mull H L a60 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b42 *)
mull H L a60 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b43 *)
mull H L a60 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b44 *)
mull H L a60 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b45 *)
mull H L a60 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b46 *)
mull H L a60 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b47 *)
mull H L a60 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b48 *)
mull H L a60 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b49 *)
mull H L a60 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b50 *)
mull H L a60 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b51 *)
mull H L a60 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b52 *)
mull H L a60 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b53 *)
mull H L a60 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b54 *)
mull H L a60 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b55 *)
mull H L a60 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b56 *)
mull H L a60 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b57 *)
mull H L a60 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b58 *)
mull H L a60 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b59 *)
mull H L a60 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b60 *)
mull H L a60 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b61 *)
mull H L a60 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b62 *)
mull H L a60 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa60,	b63 *)
mull H L a60 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a61,	b0 *)
mov accHH 0@uint32;
mull accHL accL a61 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b1 *)
mull H L a61 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b2 *)
mull H L a61 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b3 *)
mull H L a61 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b4 *)
mull H L a61 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b5 *)
mull H L a61 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b6 *)
mull H L a61 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b7 *)
mull H L a61 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b8 *)
mull H L a61 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b9 *)
mull H L a61 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b10 *)
mull H L a61 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b11 *)
mull H L a61 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b12 *)
mull H L a61 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b13 *)
mull H L a61 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b14 *)
mull H L a61 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b15 *)
mull H L a61 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b16 *)
mull H L a61 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b17 *)
mull H L a61 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b18 *)
mull H L a61 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b19 *)
mull H L a61 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b20 *)
mull H L a61 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b21 *)
mull H L a61 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b22 *)
mull H L a61 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b23 *)
mull H L a61 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b24 *)
mull H L a61 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b25 *)
mull H L a61 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b26 *)
mull H L a61 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b27 *)
mull H L a61 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b28 *)
mull H L a61 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b29 *)
mull H L a61 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b30 *)
mull H L a61 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b31 *)
mull H L a61 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b32 *)
mull H L a61 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b33 *)
mull H L a61 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b34 *)
mull H L a61 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b35 *)
mull H L a61 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b36 *)
mull H L a61 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b37 *)
mull H L a61 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b38 *)
mull H L a61 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b39 *)
mull H L a61 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b40 *)
mull H L a61 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b41 *)
mull H L a61 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b42 *)
mull H L a61 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b43 *)
mull H L a61 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b44 *)
mull H L a61 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b45 *)
mull H L a61 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b46 *)
mull H L a61 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b47 *)
mull H L a61 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b48 *)
mull H L a61 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b49 *)
mull H L a61 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b50 *)
mull H L a61 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b51 *)
mull H L a61 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b52 *)
mull H L a61 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b53 *)
mull H L a61 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b54 *)
mull H L a61 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b55 *)
mull H L a61 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b56 *)
mull H L a61 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b57 *)
mull H L a61 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b58 *)
mull H L a61 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b59 *)
mull H L a61 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b60 *)
mull H L a61 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b61 *)
mull H L a61 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b62 *)
mull H L a61 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa61,	b63 *)
mull H L a61 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a62,	b0 *)
mov accHH 0@uint32;
mull accHL accL a62 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b1 *)
mull H L a62 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b2 *)
mull H L a62 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b3 *)
mull H L a62 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b4 *)
mull H L a62 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b5 *)
mull H L a62 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b6 *)
mull H L a62 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b7 *)
mull H L a62 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b8 *)
mull H L a62 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b9 *)
mull H L a62 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b10 *)
mull H L a62 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b11 *)
mull H L a62 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b12 *)
mull H L a62 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b13 *)
mull H L a62 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b14 *)
mull H L a62 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b15 *)
mull H L a62 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b16 *)
mull H L a62 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b17 *)
mull H L a62 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b18 *)
mull H L a62 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b19 *)
mull H L a62 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b20 *)
mull H L a62 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b21 *)
mull H L a62 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b22 *)
mull H L a62 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b23 *)
mull H L a62 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b24 *)
mull H L a62 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b25 *)
mull H L a62 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b26 *)
mull H L a62 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b27 *)
mull H L a62 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b28 *)
mull H L a62 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b29 *)
mull H L a62 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b30 *)
mull H L a62 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b31 *)
mull H L a62 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b32 *)
mull H L a62 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b33 *)
mull H L a62 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b34 *)
mull H L a62 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b35 *)
mull H L a62 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b36 *)
mull H L a62 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b37 *)
mull H L a62 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b38 *)
mull H L a62 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b39 *)
mull H L a62 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b40 *)
mull H L a62 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b41 *)
mull H L a62 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b42 *)
mull H L a62 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b43 *)
mull H L a62 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b44 *)
mull H L a62 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b45 *)
mull H L a62 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b46 *)
mull H L a62 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b47 *)
mull H L a62 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b48 *)
mull H L a62 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b49 *)
mull H L a62 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b50 *)
mull H L a62 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b51 *)
mull H L a62 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b52 *)
mull H L a62 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b53 *)
mull H L a62 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b54 *)
mull H L a62 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b55 *)
mull H L a62 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b56 *)
mull H L a62 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b57 *)
mull H L a62 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b58 *)
mull H L a62 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b59 *)
mull H L a62 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b60 *)
mull H L a62 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b61 *)
mull H L a62 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b62 *)
mull H L a62 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa62,	b63 *)
mull H L a62 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* mult 	a63,	b0 *)
mov accHH 0@uint32;
mull accHL accL a63 b0;
(* macc 	u0,	1 *)
adds carry accL accL u0;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* lmul 	alpha0,	q0 *)
mull tmp q0 accL alpha0;
(* macc 	q0,	m0 *)
mull H L q0 m0;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	q1 *)
mov q1 accL;
(* NOTE: q1 == 0 *)
assert eqmod q1 0 (2**32) && true;
assume eq q1 0 && true;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b1 *)
mull H L a63 b1;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u1,	1 *)
adds carry accL accL u1;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m1 *)
mull H L q0 m1;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u0 *)
mov u0 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b2 *)
mull H L a63 b2;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u2,	1 *)
adds carry accL accL u2;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m2 *)
mull H L q0 m2;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u1 *)
mov u1 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b3 *)
mull H L a63 b3;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u3,	1 *)
adds carry accL accL u3;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m3 *)
mull H L q0 m3;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u2 *)
mov u2 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b4 *)
mull H L a63 b4;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u4,	1 *)
adds carry accL accL u4;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m4 *)
mull H L q0 m4;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u3 *)
mov u3 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b5 *)
mull H L a63 b5;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u5,	1 *)
adds carry accL accL u5;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m5 *)
mull H L q0 m5;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u4 *)
mov u4 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b6 *)
mull H L a63 b6;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u6,	1 *)
adds carry accL accL u6;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m6 *)
mull H L q0 m6;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u5 *)
mov u5 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b7 *)
mull H L a63 b7;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u7,	1 *)
adds carry accL accL u7;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m7 *)
mull H L q0 m7;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u6 *)
mov u6 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b8 *)
mull H L a63 b8;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u8,	1 *)
adds carry accL accL u8;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m8 *)
mull H L q0 m8;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u7 *)
mov u7 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b9 *)
mull H L a63 b9;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u9,	1 *)
adds carry accL accL u9;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m9 *)
mull H L q0 m9;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u8 *)
mov u8 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b10 *)
mull H L a63 b10;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u10,	1 *)
adds carry accL accL u10;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m10 *)
mull H L q0 m10;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u9 *)
mov u9 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b11 *)
mull H L a63 b11;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u11,	1 *)
adds carry accL accL u11;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m11 *)
mull H L q0 m11;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u10 *)
mov u10 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b12 *)
mull H L a63 b12;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u12,	1 *)
adds carry accL accL u12;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m12 *)
mull H L q0 m12;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u11 *)
mov u11 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b13 *)
mull H L a63 b13;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u13,	1 *)
adds carry accL accL u13;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m13 *)
mull H L q0 m13;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u12 *)
mov u12 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b14 *)
mull H L a63 b14;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u14,	1 *)
adds carry accL accL u14;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m14 *)
mull H L q0 m14;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u13 *)
mov u13 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b15 *)
mull H L a63 b15;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u15,	1 *)
adds carry accL accL u15;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m15 *)
mull H L q0 m15;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u14 *)
mov u14 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b16 *)
mull H L a63 b16;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u16,	1 *)
adds carry accL accL u16;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m16 *)
mull H L q0 m16;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u15 *)
mov u15 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b17 *)
mull H L a63 b17;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u17,	1 *)
adds carry accL accL u17;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m17 *)
mull H L q0 m17;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u16 *)
mov u16 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b18 *)
mull H L a63 b18;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u18,	1 *)
adds carry accL accL u18;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m18 *)
mull H L q0 m18;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u17 *)
mov u17 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b19 *)
mull H L a63 b19;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u19,	1 *)
adds carry accL accL u19;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m19 *)
mull H L q0 m19;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u18 *)
mov u18 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b20 *)
mull H L a63 b20;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u20,	1 *)
adds carry accL accL u20;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m20 *)
mull H L q0 m20;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u19 *)
mov u19 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b21 *)
mull H L a63 b21;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u21,	1 *)
adds carry accL accL u21;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m21 *)
mull H L q0 m21;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u20 *)
mov u20 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b22 *)
mull H L a63 b22;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u22,	1 *)
adds carry accL accL u22;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m22 *)
mull H L q0 m22;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u21 *)
mov u21 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b23 *)
mull H L a63 b23;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u23,	1 *)
adds carry accL accL u23;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m23 *)
mull H L q0 m23;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u22 *)
mov u22 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b24 *)
mull H L a63 b24;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u24,	1 *)
adds carry accL accL u24;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m24 *)
mull H L q0 m24;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u23 *)
mov u23 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b25 *)
mull H L a63 b25;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u25,	1 *)
adds carry accL accL u25;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m25 *)
mull H L q0 m25;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u24 *)
mov u24 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b26 *)
mull H L a63 b26;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u26,	1 *)
adds carry accL accL u26;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m26 *)
mull H L q0 m26;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u25 *)
mov u25 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b27 *)
mull H L a63 b27;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u27,	1 *)
adds carry accL accL u27;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m27 *)
mull H L q0 m27;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u26 *)
mov u26 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b28 *)
mull H L a63 b28;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u28,	1 *)
adds carry accL accL u28;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m28 *)
mull H L q0 m28;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u27 *)
mov u27 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b29 *)
mull H L a63 b29;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u29,	1 *)
adds carry accL accL u29;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m29 *)
mull H L q0 m29;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u28 *)
mov u28 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b30 *)
mull H L a63 b30;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u30,	1 *)
adds carry accL accL u30;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m30 *)
mull H L q0 m30;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u29 *)
mov u29 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b31 *)
mull H L a63 b31;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u31,	1 *)
adds carry accL accL u31;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m31 *)
mull H L q0 m31;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u30 *)
mov u30 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b32 *)
mull H L a63 b32;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u32,	1 *)
adds carry accL accL u32;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m32 *)
mull H L q0 m32;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u31 *)
mov u31 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b33 *)
mull H L a63 b33;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u33,	1 *)
adds carry accL accL u33;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m33 *)
mull H L q0 m33;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u32 *)
mov u32 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b34 *)
mull H L a63 b34;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u34,	1 *)
adds carry accL accL u34;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m34 *)
mull H L q0 m34;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u33 *)
mov u33 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b35 *)
mull H L a63 b35;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u35,	1 *)
adds carry accL accL u35;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m35 *)
mull H L q0 m35;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u34 *)
mov u34 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b36 *)
mull H L a63 b36;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u36,	1 *)
adds carry accL accL u36;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m36 *)
mull H L q0 m36;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u35 *)
mov u35 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b37 *)
mull H L a63 b37;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u37,	1 *)
adds carry accL accL u37;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m37 *)
mull H L q0 m37;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u36 *)
mov u36 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b38 *)
mull H L a63 b38;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u38,	1 *)
adds carry accL accL u38;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m38 *)
mull H L q0 m38;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u37 *)
mov u37 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b39 *)
mull H L a63 b39;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u39,	1 *)
adds carry accL accL u39;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m39 *)
mull H L q0 m39;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u38 *)
mov u38 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b40 *)
mull H L a63 b40;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u40,	1 *)
adds carry accL accL u40;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m40 *)
mull H L q0 m40;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u39 *)
mov u39 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b41 *)
mull H L a63 b41;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u41,	1 *)
adds carry accL accL u41;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m41 *)
mull H L q0 m41;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u40 *)
mov u40 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b42 *)
mull H L a63 b42;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u42,	1 *)
adds carry accL accL u42;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m42 *)
mull H L q0 m42;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u41 *)
mov u41 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b43 *)
mull H L a63 b43;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u43,	1 *)
adds carry accL accL u43;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m43 *)
mull H L q0 m43;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u42 *)
mov u42 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b44 *)
mull H L a63 b44;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u44,	1 *)
adds carry accL accL u44;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m44 *)
mull H L q0 m44;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u43 *)
mov u43 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b45 *)
mull H L a63 b45;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u45,	1 *)
adds carry accL accL u45;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m45 *)
mull H L q0 m45;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u44 *)
mov u44 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b46 *)
mull H L a63 b46;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u46,	1 *)
adds carry accL accL u46;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m46 *)
mull H L q0 m46;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u45 *)
mov u45 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b47 *)
mull H L a63 b47;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u47,	1 *)
adds carry accL accL u47;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m47 *)
mull H L q0 m47;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u46 *)
mov u46 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b48 *)
mull H L a63 b48;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u48,	1 *)
adds carry accL accL u48;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m48 *)
mull H L q0 m48;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u47 *)
mov u47 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b49 *)
mull H L a63 b49;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u49,	1 *)
adds carry accL accL u49;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m49 *)
mull H L q0 m49;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u48 *)
mov u48 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b50 *)
mull H L a63 b50;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u50,	1 *)
adds carry accL accL u50;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m50 *)
mull H L q0 m50;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u49 *)
mov u49 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b51 *)
mull H L a63 b51;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u51,	1 *)
adds carry accL accL u51;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m51 *)
mull H L q0 m51;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u50 *)
mov u50 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b52 *)
mull H L a63 b52;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u52,	1 *)
adds carry accL accL u52;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m52 *)
mull H L q0 m52;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u51 *)
mov u51 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b53 *)
mull H L a63 b53;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u53,	1 *)
adds carry accL accL u53;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m53 *)
mull H L q0 m53;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u52 *)
mov u52 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b54 *)
mull H L a63 b54;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u54,	1 *)
adds carry accL accL u54;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m54 *)
mull H L q0 m54;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u53 *)
mov u53 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b55 *)
mull H L a63 b55;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u55,	1 *)
adds carry accL accL u55;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m55 *)
mull H L q0 m55;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u54 *)
mov u54 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b56 *)
mull H L a63 b56;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u56,	1 *)
adds carry accL accL u56;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m56 *)
mull H L q0 m56;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u55 *)
mov u55 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b57 *)
mull H L a63 b57;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u57,	1 *)
adds carry accL accL u57;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m57 *)
mull H L q0 m57;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u56 *)
mov u56 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b58 *)
mull H L a63 b58;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u58,	1 *)
adds carry accL accL u58;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m58 *)
mull H L q0 m58;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u57 *)
mov u57 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b59 *)
mull H L a63 b59;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u59,	1 *)
adds carry accL accL u59;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m59 *)
mull H L q0 m59;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u58 *)
mov u58 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b60 *)
mull H L a63 b60;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u60,	1 *)
adds carry accL accL u60;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m60 *)
mull H L q0 m60;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u59 *)
mov u59 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b61 *)
mull H L a63 b61;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u61,	1 *)
adds carry accL accL u61;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m61 *)
mull H L q0 m61;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u60 *)
mov u60 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b62 *)
mull H L a63 b62;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u62,	1 *)
adds carry accL accL u62;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m62 *)
mull H L q0 m62;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u61 *)
mov u61 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	aa63,	b63 *)
mull H L a63 b63;
adds carry accL accL L;
(* NOTE: ignore carry because it is zero *)
adc accHL accHL H carry;
clear carry;
adc accHH accHH 0@uint32 carry;
(* macc 	u63,	1 *)
adds carry accL accL u63;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* macc 	q0,	m63 *)
mull H L q0 m63;
adds carry accL accL L;
adcs carry accHL accHL H carry;
adc accHH accHH 0@uint32 carry;
(* shift	u62 *)
mov u62 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* macc 	u64,	1 *)
adds carry accL accL u64;
adcs carry accHL accHL 0@uint32 carry;
adc accHH accHH 0@uint32 carry;
(* shift	u63 *)
mov u63 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;
(* shift	u64 *)
mov u64 accL;
mov accL accHL;
mov accHL accHH;
mov accHH 0@uint32;


{
    eqmod
      (
        (limbs 32 [a0, a1, a2, a3,
                   a4, a5, a6, a7,
                   a8, a9, a10, a11,
                   a12, a13, a14, a15,
                   a16, a17, a18, a19,
                   a20, a21, a22, a23,
                   a24, a25, a26, a27,
                   a28, a29, a30, a31,
                   a32, a33, a34, a35,
                   a36, a37, a38, a39,
                   a40, a41, a42, a43,
                   a44, a45, a46, a47,
                   a48, a49, a50, a51,
                   a52, a53, a54, a55,
                   a56, a57, a58, a59,
                   a60, a61, a62, a63])
        *
        (limbs 32 [b0, b1, b2, b3,
                   b4, b5, b6, b7,
                   b8, b9, b10, b11,
                   b12, b13, b14, b15,
                   b16, b17, b18, b19,
                   b20, b21, b22, b23,
                   b24, b25, b26, b27,
                   b28, b29, b30, b31,
                   b32, b33, b34, b35,
                   b36, b37, b38, b39,
                   b40, b41, b42, b43,
                   b44, b45, b46, b47,
                   b48, b49, b50, b51,
                   b52, b53, b54, b55,
                   b56, b57, b58, b59,
                   b60, b61, b62, b63])
      )

      (
        (limbs 32 [0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   0, 0, 0, 0,
                   u0, u1, u2, u3,
                   u4, u5, u6, u7,
                   u8, u9, u10, u11,
                   u12, u13, u14, u15,
                   u16, u17, u18, u19,
                   u20, u21, u22, u23,
                   u24, u25, u26, u27,
                   u28, u29, u30, u31,
                   u32, u33, u34, u35,
                   u36, u37, u38, u39,
                   u40, u41, u42, u43,
                   u44, u45, u46, u47,
                   u48, u49, u50, u51,
                   u52, u53, u54, u55,
                   u56, u57, u58, u59,
                   u60, u61, u62, u63,
                   u64])
      )

      (
        (limbs 32 [m0, m1, m2, m3,
                   m4, m5, m6, m7,
                   m8, m9, m10, m11,
                   m12, m13, m14, m15,
                   m16, m17, m18, m19,
                   m20, m21, m22, m23,
                   m24, m25, m26, m27,
                   m28, m29, m30, m31,
                   m32, m33, m34, m35,
                   m36, m37, m38, m39,
                   m40, m41, m42, m43,
                   m44, m45, m46, m47,
                   m48, m49, m50, m51,
                   m52, m53, m54, m55,
                   m56, m57, m58, m59,
                   m60, m61, m62, m63])
      )
&&
    and [
      u64 < const 32 2,
      (limbs 32 [u0, u1, u2, u3,
                 u4, u5, u6, u7,
                 u8, u9, u10, u11,
                 u12, u13, u14, u15,
                 u16, u17, u18, u19,
                 u20, u21, u22, u23,
                 u24, u25, u26, u27,
                 u28, u29, u30, u31,
                 u32, u33, u34, u35,
                 u36, u37, u38, u39,
                 u40, u41, u42, u43,
                 u44, u45, u46, u47,
                 u48, u49, u50, u51,
                 u52, u53, u54, u55,
                 u56, u57, u58, u59,
                 u60, u61, u62, u63,
                 u64]) <
      (mul const 2080 2
              (limbs 32 [m0, m1, m2, m3,
                         m4, m5, m6, m7,
                         m8, m9, m10, m11,
                         m12, m13, m14, m15,
                         m16, m17, m18, m19,
                         m20, m21, m22, m23,
                         m24, m25, m26, m27,
                         m28, m29, m30, m31,
                         m32, m33, m34, m35,
                         m36, m37, m38, m39,
                         m40, m41, m42, m43,
                         m44, m45, m46, m47,
                         m48, m49, m50, m51,
                         m52, m53, m54, m55,
                         m56, m57, m58, m59,
                         m60, m61, m62, m63,
                         const 32 0])) ]
}

