# fp2sub1271:
# %rdi = 0x7fffffffdcc0
# %rsi = 0x7fffffffdce0
# %rdx = 0x7fffffffdd00
# %rcx = 0x7ffff7dd1104
# %r8  = 0x7ffff7dd10a4
# %r9  = 0x7ffff7dd1120

#! 0x8(%rdi) = %%EA
#! 0x10(%rdi) = %%EA
#! 0x18(%rdi) = %%EA
#! (%rdi) = %%EA
#! 0x8(%rsi) = %%EA
#! 0x10(%rsi) = %%EA
#! 0x18(%rsi) = %%EA
#! (%rsi) = %%EA
#! 0x8(%rcx) = %%EA
#! 0x10(%rcx) = %%EA
#! 0x18(%rcx) = %%EA
#! (%rcx) = %%EA
#! %rax = %%rax
#! %rsi = %%rsi
#! %rbx = %%rbx
#! %rdx = %%rdx
#! %rcx = %%rcx
#! %rbp = %%rbp
#! %rdi = %%rdi
#! %r8 = %%r8
#! %r9 = %%r9
#! %r10 = %%r10
#! %r11 = %%r11
#! %r12 = %%r12
#! %r13 = %%r13
#! %r14 = %%r14
#! %r15 = %%r15
#! add $1v, $2v -> bvAddC carry $2v (bvVar $1v) (bvVar $2v)
#! add $1c, $2v -> bvAddC carry $2v (bvConst $1c) (bvVar $2v)
#! adc $1v, $2v -> bvAdcC carry $2v (bvVar $1v) (bvVar $2v) carry
#! adc $1c, $2v -> bvAdcC carry $2v (bvConst $1c) (bvVar $2v) carry
#! mul $1v -> bvMulf rdx rax (bvVar $1v) (bvVar rax)
#! mulq $1v -> bvMulf rdx rax (bvVar $1v) (bvVar rax)
#! imul $1v, $2v -> bvMulf tmp $2v (bvVar $1v) (bvVar $2v)
#! mov $1v, $2v -> bvAssign $2v (bvVar $1v)
#! mov $1c, $2v -> bvAssign $2v (bvConst $1c)
#! movabs $1c, $2v -> bvAssign $2v (bvConst $1c)
#! xor $1v, $1v -> bvAssign $1v (bvConst 0)
#! and $1v, $2v -> bvAndb $2v (bvVar $1v) (bvVar $2v)
#! shl $1c, $2v -> bvShl $2v (bvVar $2v) $1c
#! shr $1c, $2v -> bvSplit $2v tmp (bvVar $2v) $1c
#! sar \$0x3f, $1v -> bvSplit sign tmp (bvVar $1v) 63; bvSubC carry2 $1v (bvConst 0) (bvVar sign)
#! lea $1v, $2v -> bvAssign $2v (bvVar $1v)
#! sub $1v, $2v -> bvSubC carry $2v (bvVar $2v) (bvVar $1v)
#! sbb $1v, $2v -> bvSbbC carry $2v (bvVar $2v) (bvVar $1v) carry
#! sbb $1c, $2v -> bvSbbC carry $2v (bvVar $2v) (bvConst $1c) carry
#! cmovb $1v, $2v -> bvCmove $2v carry (bvVar $1v) (bvVar $2v)
        movabs $0x7fffffffffffffff,%r8
	mov    (%rdi),%rax                              #! EA = L0x7fffffffdcc0
	mov    %rdx,%rcx
	sub    (%rsi),%rax                              #! EA = L0x7fffffffdce0
	mov    0x8(%rdi),%rdx                           #! EA = L0x7fffffffdcc8
	sbb    0x8(%rsi),%rdx                           #! EA = L0x7fffffffdce8
	mov    %rax,%r9
	mov    %rdx,%r10
	sar    $0x3f,%rdx
	mov    %rdx,%rax
	add    %r9,%rax
	adc    %r10,%rdx
	mov    %rax,(%rcx)                              #! EA = L0x7fffffffdd00
	mov    %rdx,%rax
	and    %r8,%rax
	mov    %rax,0x8(%rcx)                           #! EA = L0x7fffffffdd08
	mov    0x10(%rdi),%rax                          #! EA = L0x7fffffffdcd0
	mov    0x18(%rdi),%rdx                          #! EA = L0x7fffffffdcd8
	sub    0x10(%rsi),%rax                          #! EA = L0x7fffffffdcf0
	sbb    0x18(%rsi),%rdx                          #! EA = L0x7fffffffdcf8
	mov    %rax,%rsi
	mov    %rdx,%rdi
	sar    $0x3f,%rdx
	mov    %rdx,%rax
	add    %rsi,%rax
	adc    %rdi,%rdx
	mov    %rax,0x10(%rcx)                          #! EA = L0x7fffffffdd10
	and    %rdx,%r8
	mov    %r8,0x18(%rcx)                           #! EA = L0x7fffffffdd18
	#retq   
