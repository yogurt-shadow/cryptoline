proc main (EA, L0x1505, L0x3e, L0x4003c0, L0x400420, L0x400425, L0x40070d, L0x40070e, L0x40070f, L0x400710, L0x400711, L0x400712, L0x400713, L0x400714, L0x400715, L0x400716, L0x400717, L0x400718, L0x400719, L0x40071a, L0x400826, L0x4008d8, L0x4008e0, L0x46beb0, L0x46bec0, L0x46bf30, L0x46bf90, L0x46c008, L0x46c110, L0x566628, L0x566630, L0x566638, L0x566640, L0x566648, L0x566650, L0x7ffff7b5b430, L0x7ffff7b5b434, L0x7ffff7b5b436, L0x7ffff7b5b438, L0x7ffff7b602c0, L0x7ffff7dd0d88, L0x7ffff7dd0d98, L0x7ffff7dd2421, L0x7ffff7dd2429, L0x7ffff7dd242e, L0x7ffff7dd4d20, L0x7ffff7dd5170, L0x7ffff7dd5a78, L0x7ffff7ff6000, L0x7ffff7ff6028, L0x7ffff7ff6068, L0x7ffff7ff6070, L0x7ffff7ff62ec, L0x7ffff7ff62f0, L0x7ffff7ff62f4, L0x7ffff7ff62f8, L0x7ffff7ff6300, L0x7ffff7ff6308, L0x7ffff7ff6314, L0x7ffff7ff6315, L0x7ffff7ff6330, L0x7ffff7ff63cc, L0x7ffff7ff6a28, L0x7ffff7ff6a30, L0x7ffff7ff6a50, L0x7ffff7ffcca0, L0x7ffff7ffcce8, L0x7ffff7ffcd50, L0x7ffff7ffd9b8, L0x7ffff7ffe168, L0x7ffff7ffe190, L0x7ffff7ffe1d0, L0x7ffff7ffe1d8, L0x7ffff7ffe260, L0x7ffff7ffe330, L0x7ffff7ffe420, L0x7ffff7ffe428, L0x7ffff7ffe448, L0x7ffff7ffe454, L0x7ffff7ffe458, L0x7ffff7ffe45c, L0x7ffff7ffe460, L0x7ffff7ffe47d, L0x7ffff7ffe4c0, L0x7ffff7ffe4e8, L0x7fffffffc0e0, L0x7fffffffc0e8, L0x7fffffffc0f0, L0x7fffffffc178, L0x7fffffffc194, L0x7fffffffc198, L0x7fffffffc1e0, L0x7fffffffc1e8, L0x7fffffffc1f0, L0x7fffffffc1f8, L0x7fffffffc200, L0x7fffffffc208, L0x7fffffffc228, L0x7fffffffc230, L0x7fffffffc238, L0x7fffffffc244, L0x7fffffffc248, L0x7fffffffc250, L0x7fffffffc258, L0x7fffffffc260, L0x7fffffffc270, L0x7fffffffc278, L0x7fffffffc310, L0x7fffffffc318, L0x7fffffffc380, L0x7fffffffcd40, L0x7fffffffcd48, L0x7fffffffcd50, L0x7fffffffd350, L0x7fffffffd358, L0x7fffffffd360, L0x7fffffffd368, L0x7fffffffd370, L0x7fffffffd378, L0x7fffffffd380, L0x7fffffffd388, L0x7fffffffd390, L0x7fffffffd398, L0x7fffffffd3a0, L0x7fffffffd3a8, L0x7fffffffd3b0, L0x7fffffffd3b8, L0x7fffffffd3c0, L0x7fffffffd3c8, L0x7fffffffd3d0, L0x7fffffffd3d8, L0x7fffffffd3e0, L0x7fffffffd3e8, L0x7fffffffd3f0, L0x7fffffffd3f8, L0x7fffffffd400, L0x7fffffffd408, __gmpn_lshift, __gmpn_rshift, _dl_fixup, _dl_lookup_symbol_x, _rtld_global, _rtld_global_ro, addq, al, ax, bn_lshb_low, bn_rshb_low, bnd, bsf, bt, callq, carry, check_match, cl, cmp, cmpq, cmpw, core_get, dec, div, dl, do_lookup_x, fp2_mulc_low, fp_addd_low, fp_addn_low, fp_muln_low, fp_prime_get, fp_subd_low, fs, ja, jae, je, jg, jle, jmp, jmpq, jne, lea, movhpd, movl, movlpd, movq, movslq, movzbl, movzwl, nopl, pcmpeqb, plt, pmovmskb, pop, psubb, push, pushq, pxor, r10b, r10d, r12, r12d, r13, r13d, r14, r15, r15d, r8d, r9d, rbp, rbx, rdi, rdx, retq, rsi, rsp, sar, sete, shld, shr, shrd, strcmp, subb, test, testb, uint64, xchg, xmm0, xmm1, xmm2, xrstor, xsavec) =
{
  true
  &&
  true
}

(* fp2_mulc_low: *)
fp2_mulc_low:;
(* push   %r14                                     #! PC = 0x4283728 *)
push r14;
(* push   %r13                                     #! PC = 0x4283730 *)
push r13;
(* lea    0x30(%rsi),%r13                          #! PC = 0x4283732 *)
lea    %%EA,%%r13                          #! 0x4283732 = 0x4283732;
(* push   %r12                                     #! PC = 0x4283736 *)
push r12;
(* push   %rbp                                     #! PC = 0x4283738 *)
push rbp;
(* mov    %rdx,%r12                                #! PC = 0x4283739 *)
mov r12 rdx;
(* push   %rbx                                     #! PC = 0x4283742 *)
push rbx;
(* lea    0x30(%r12),%r14                          #! PC = 0x4283743 *)
lea    %%EA,%%r14                          #! 0x4283743 = 0x4283743;
(* mov    %rdi,%rbx                                #! PC = 0x4283748 *)
mov rbx rdi;
(* mov    %r13,%rdx                                #! PC = 0x4283751 *)
mov rdx r13;
(* mov    %rsi,%rbp                                #! PC = 0x4283754 *)
mov rbp rsi;
(* sub    $0x120,%rsp                              #! PC = 0x4283757 *)
subb carry rsp rsp 0x120@uint64;
(* mov    %rsp,%rdi                                #! PC = 0x4283764 *)
mov rdi rsp;
(* #callq  0x417fda <fp_addn_low>                  #! PC = 0x4283767 *)
#callq  0x417fda <fp_addn_low>                  #! 0x4283767 = 0x4283767;
(* xor    %rax,%rax                                #! PC = 0x4292570 *)
mov rax 0@uint64;
(* mov    (%rdx),%r11                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4292573 *)
mov r11 L0x7fffffffd3e0;
(* add    (%rsi),%r11                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4292576 *)
adds carry r11 r11 L0x7fffffffd3b0;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffcd60; PC = 0x4292579 *)
mov L0x7fffffffcd60 r11;
(* mov    0x8(%rdx),%r11                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4292582 *)
mov r11 L0x7fffffffd3e8;
(* adc    0x8(%rsi),%r11                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4292586 *)
adcs carry r11 r11 L0x7fffffffd3b8 carry;
(* mov    %r11,0x8(%rdi)                           #! EA = L0x7fffffffcd68; PC = 0x4292590 *)
mov L0x7fffffffcd68 r11;
(* mov    0x10(%rdx),%r11                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4292594 *)
mov r11 L0x7fffffffd3f0;
(* adc    0x10(%rsi),%r11                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4292598 *)
adcs carry r11 r11 L0x7fffffffd3c0 carry;
(* mov    %r11,0x10(%rdi)                          #! EA = L0x7fffffffcd70; PC = 0x4292602 *)
mov L0x7fffffffcd70 r11;
(* mov    0x18(%rdx),%r11                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4292606 *)
mov r11 L0x7fffffffd3f8;
(* adc    0x18(%rsi),%r11                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4292610 *)
adcs carry r11 r11 L0x7fffffffd3c8 carry;
(* mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffcd78; PC = 0x4292614 *)
mov L0x7fffffffcd78 r11;
(* mov    0x20(%rdx),%r11                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4292618 *)
mov r11 L0x7fffffffd400;
(* adc    0x20(%rsi),%r11                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4292622 *)
adcs carry r11 r11 L0x7fffffffd3d0 carry;
(* mov    %r11,0x20(%rdi)                          #! EA = L0x7fffffffcd80; PC = 0x4292626 *)
mov L0x7fffffffcd80 r11;
(* mov    0x28(%rdx),%r11                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4292630 *)
mov r11 L0x7fffffffd408;
(* adc    0x28(%rsi),%r11                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4292634 *)
adcs carry r11 r11 L0x7fffffffd3d8 carry;
(* mov    %r11,0x28(%rdi)                          #! EA = L0x7fffffffcd88; PC = 0x4292638 *)
mov L0x7fffffffcd88 r11;
(* adc    $0x0,%rax                                #! PC = 0x4292642 *)
adcs carry rax rax 0x0@uint64 carry;
(* #retq                                           #! PC = 0x4292646 *)
#retq                                           #! 0x4292646 = 0x4292646;
(* lea    0x60(%rsp),%rdi                          #! PC = 0x4283772 *)
lea    %%EA,%%rdi                          #! 0x4283772 = 0x4283772;
(* mov    %r14,%rdx                                #! PC = 0x4283777 *)
mov rdx r14;
(* mov    %r12,%rsi                                #! PC = 0x4283780 *)
mov rsi r12;
(* #callq  0x417fda <fp_addn_low>                  #! PC = 0x4283783 *)
#callq  0x417fda <fp_addn_low>                  #! 0x4283783 = 0x4283783;
(* xor    %rax,%rax                                #! PC = 0x4292570 *)
mov rax 0@uint64;
(* mov    (%rdx),%r11                              #! EA = L0x7fffffffd380; Value = 0xc8110b28fcc2318f; PC = 0x4292573 *)
mov r11 L0x7fffffffd380;
(* add    (%rsi),%r11                              #! EA = L0x7fffffffd350; Value = 0x4e7fcc2814fc66de; PC = 0x4292576 *)
adds carry r11 r11 L0x7fffffffd350;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffcdc0; PC = 0x4292579 *)
mov L0x7fffffffcdc0 r11;
(* mov    0x8(%rdx),%r11                           #! EA = L0x7fffffffd388; Value = 0x7a7dc5f221361761; PC = 0x4292582 *)
mov r11 L0x7fffffffd388;
(* adc    0x8(%rsi),%r11                           #! EA = L0x7fffffffd358; Value = 0xfb1508e931f91c7b; PC = 0x4292586 *)
adcs carry r11 r11 L0x7fffffffd358 carry;
(* mov    %r11,0x8(%rdi)                           #! EA = L0x7fffffffcdc8; PC = 0x4292590 *)
mov L0x7fffffffcdc8 r11;
(* mov    0x10(%rdx),%r11                          #! EA = L0x7fffffffd390; Value = 0x40e5122034114574; PC = 0x4292594 *)
mov r11 L0x7fffffffd390;
(* adc    0x10(%rsi),%r11                          #! EA = L0x7fffffffd360; Value = 0x6ae9a37b421b5d3b; PC = 0x4292598 *)
adcs carry r11 r11 L0x7fffffffd360 carry;
(* mov    %r11,0x10(%rdi)                          #! EA = L0x7fffffffcdd0; PC = 0x4292602 *)
mov L0x7fffffffcdd0 r11;
(* mov    0x18(%rdx),%r11                          #! EA = L0x7fffffffd398; Value = 0x8835e8f5e91c9fa5; PC = 0x4292606 *)
mov r11 L0x7fffffffd398;
(* adc    0x18(%rsi),%r11                          #! EA = L0x7fffffffd368; Value = 0x99cfddfcf7b331b5; PC = 0x4292610 *)
adcs carry r11 r11 L0x7fffffffd368 carry;
(* mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffcdd8; PC = 0x4292614 *)
mov L0x7fffffffcdd8 r11;
(* mov    0x20(%rdx),%r11                          #! EA = L0x7fffffffd3a0; Value = 0x9761002bb49a04e5; PC = 0x4292618 *)
mov r11 L0x7fffffffd3a0;
(* adc    0x20(%rsi),%r11                          #! EA = L0x7fffffffd370; Value = 0xcf9f2e2ff43bb0b2; PC = 0x4292622 *)
adcs carry r11 r11 L0x7fffffffd370 carry;
(* mov    %r11,0x20(%rdi)                          #! EA = L0x7fffffffcde0; PC = 0x4292626 *)
mov L0x7fffffffcde0 r11;
(* mov    0x28(%rdx),%r11                          #! EA = L0x7fffffffd3a8; Value = 0x16548c1ed1c3ed9b; PC = 0x4292630 *)
mov r11 L0x7fffffffd3a8;
(* adc    0x28(%rsi),%r11                          #! EA = L0x7fffffffd378; Value = 0x13b75aea6b8527c2; PC = 0x4292634 *)
adcs carry r11 r11 L0x7fffffffd378 carry;
(* mov    %r11,0x28(%rdi)                          #! EA = L0x7fffffffcde8; PC = 0x4292638 *)
mov L0x7fffffffcde8 r11;
(* adc    $0x0,%rax                                #! PC = 0x4292642 *)
adcs carry rax rax 0x0@uint64 carry;
(* #retq                                           #! PC = 0x4292646 *)
#retq                                           #! 0x4292646 = 0x4292646;
(* mov    %rbp,%rsi                                #! PC = 0x4283788 *)
mov rsi rbp;
(* lea    0x110(%rbx),%rbp                         #! PC = 0x4283791 *)
lea    %%EA,%%rbp                         #! 0x4283791 = 0x4283791;
(* mov    %r12,%rdx                                #! PC = 0x4283798 *)
mov rdx r12;
(* mov    %rbx,%rdi                                #! PC = 0x4283801 *)
mov rdi rbx;
(* lea    0x28(%rbx),%r12                          #! PC = 0x4283804 *)
lea    %%EA,%%r12                          #! 0x4283804 = 0x4283804;
(* #callq  0x418845 <fp_muln_low>                  #! PC = 0x4283808 *)
#callq  0x418845 <fp_muln_low>                  #! 0x4283808 = 0x4283808;
(* mov    %rdx,%rcx                                #! PC = 0x4294725 *)
mov rcx rdx;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4294728 *)
mov rax L0x7fffffffd3b0;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4294731 *)
mull rdx rax rax L0x7fffffffd350;
(* mov    %rax,(%rdi)                              #! EA = L0x7fffffffd0d0; PC = 0x4294734 *)
mov L0x7fffffffd0d0 rax;
(* mov    %rdx,%r8                                 #! PC = 0x4294737 *)
mov r8 rdx;
(* xor    %r9,%r9                                  #! PC = 0x4294740 *)
mov r9 0@uint64;
(* xor    %r10,%r10                                #! PC = 0x4294743 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4294746 *)
mov rax L0x7fffffffd3b0;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4294749 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r8                                 #! PC = 0x4294753 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294756 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294759 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4294763 *)
mov rax L0x7fffffffd3b8;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4294767 *)
mull rdx rax rax L0x7fffffffd350;
(* add    %rax,%r8                                 #! PC = 0x4294770 *)
adds carry r8 r8 rax;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd0d8; PC = 0x4294773 *)
mov L0x7fffffffd0d8 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4294777 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294780 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4294784 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4294787 *)
mov rax L0x7fffffffd3b0;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4294790 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r9                                 #! PC = 0x4294794 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294797 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294800 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4294804 *)
mov rax L0x7fffffffd3b8;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4294808 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r9                                 #! PC = 0x4294812 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294815 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294818 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4294822 *)
mov rax L0x7fffffffd3c0;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4294826 *)
mull rdx rax rax L0x7fffffffd350;
(* add    %rax,%r9                                 #! PC = 0x4294829 *)
adds carry r9 r9 rax;
(* mov    %r9,0x10(%rdi)                           #! EA = L0x7fffffffd0e0; PC = 0x4294832 *)
mov L0x7fffffffd0e0 r9;
(* adc    %rdx,%r10                                #! PC = 0x4294836 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294839 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4294843 *)
mov r9 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4294846 *)
mov rax L0x7fffffffd3b0;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4294849 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r10                                #! PC = 0x4294853 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294856 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294859 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4294863 *)
mov rax L0x7fffffffd3b8;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4294867 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r10                                #! PC = 0x4294871 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294874 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294877 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4294881 *)
mov rax L0x7fffffffd3c0;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4294885 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r10                                #! PC = 0x4294889 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294892 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294895 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4294899 *)
mov rax L0x7fffffffd3c8;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4294903 *)
mull rdx rax rax L0x7fffffffd350;
(* add    %rax,%r10                                #! PC = 0x4294906 *)
adds carry r10 r10 rax;
(* mov    %r10,0x18(%rdi)                          #! EA = L0x7fffffffd0e8; PC = 0x4294909 *)
mov L0x7fffffffd0e8 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4294913 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294916 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4294920 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4294923 *)
mov rax L0x7fffffffd3b0;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4294926 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r8                                 #! PC = 0x4294930 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294933 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294936 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4294940 *)
mov rax L0x7fffffffd3b8;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4294944 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r8                                 #! PC = 0x4294948 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294951 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294954 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4294958 *)
mov rax L0x7fffffffd3c0;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4294962 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r8                                 #! PC = 0x4294966 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294969 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294972 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4294976 *)
mov rax L0x7fffffffd3c8;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4294980 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r8                                 #! PC = 0x4294984 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294987 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294990 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4294994 *)
mov rax L0x7fffffffd3d0;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4294998 *)
mull rdx rax rax L0x7fffffffd350;
(* add    %rax,%r8                                 #! PC = 0x4295001 *)
adds carry r8 r8 rax;
(* mov    %r8,0x20(%rdi)                           #! EA = L0x7fffffffd0f0; PC = 0x4295004 *)
mov L0x7fffffffd0f0 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295008 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295011 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295015 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3b0; Value = 0xdbe30ccfda3f8f9a; PC = 0x4295018 *)
mov rax L0x7fffffffd3b0;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295021 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r9                                 #! PC = 0x4295025 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295028 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295031 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4295035 *)
mov rax L0x7fffffffd3b8;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4295039 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r9                                 #! PC = 0x4295043 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295046 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295049 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4295053 *)
mov rax L0x7fffffffd3c0;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4295057 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r9                                 #! PC = 0x4295061 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295064 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295067 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4295071 *)
mov rax L0x7fffffffd3c8;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4295075 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r9                                 #! PC = 0x4295079 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295082 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295085 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4295089 *)
mov rax L0x7fffffffd3d0;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4295093 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r9                                 #! PC = 0x4295097 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295100 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295103 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295107 *)
mov rax L0x7fffffffd3d8;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd350; PC = 0x4295111 *)
mull rdx rax rax L0x7fffffffd350;
(* add    %rax,%r9                                 #! PC = 0x4295114 *)
adds carry r9 r9 rax;
(* mov    %r9,0x28(%rdi)                           #! EA = L0x7fffffffd0f8; PC = 0x4295117 *)
mov L0x7fffffffd0f8 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295121 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295124 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295128 *)
mov r9 0@uint64;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3b8; Value = 0x503ac7e077341649; PC = 0x4295131 *)
mov rax L0x7fffffffd3b8;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295135 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r10                                #! PC = 0x4295139 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295142 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295145 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4295149 *)
mov rax L0x7fffffffd3c0;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4295153 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r10                                #! PC = 0x4295157 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295160 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295163 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4295167 *)
mov rax L0x7fffffffd3c8;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4295171 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r10                                #! PC = 0x4295175 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295178 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295181 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4295185 *)
mov rax L0x7fffffffd3d0;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4295189 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r10                                #! PC = 0x4295193 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295196 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295199 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295203 *)
mov rax L0x7fffffffd3d8;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd358; PC = 0x4295207 *)
mull rdx rax rax L0x7fffffffd358;
(* add    %rax,%r10                                #! PC = 0x4295211 *)
adds carry r10 r10 rax;
(* mov    %r10,0x30(%rdi)                          #! EA = L0x7fffffffd100; PC = 0x4295214 *)
mov L0x7fffffffd100 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295218 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295221 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4295225 *)
mov r10 0@uint64;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3c0; Value = 0xb8204e4d53f347c6; PC = 0x4295228 *)
mov rax L0x7fffffffd3c0;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295232 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r8                                 #! PC = 0x4295236 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295239 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295242 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4295246 *)
mov rax L0x7fffffffd3c8;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4295250 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r8                                 #! PC = 0x4295254 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295257 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295260 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4295264 *)
mov rax L0x7fffffffd3d0;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4295268 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r8                                 #! PC = 0x4295272 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295275 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295278 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295282 *)
mov rax L0x7fffffffd3d8;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd360; PC = 0x4295286 *)
mull rdx rax rax L0x7fffffffd360;
(* add    %rax,%r8                                 #! PC = 0x4295290 *)
adds carry r8 r8 rax;
(* mov    %r8,0x38(%rdi)                           #! EA = L0x7fffffffd108; PC = 0x4295293 *)
mov L0x7fffffffd108 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295297 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295300 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295304 *)
mov r8 0@uint64;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3c8; Value = 0x9556b7b8bf86a204; PC = 0x4295307 *)
mov rax L0x7fffffffd3c8;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295311 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r9                                 #! PC = 0x4295315 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295318 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295321 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4295325 *)
mov rax L0x7fffffffd3d0;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4295329 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r9                                 #! PC = 0x4295333 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295336 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295339 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295343 *)
mov rax L0x7fffffffd3d8;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd368; PC = 0x4295347 *)
mull rdx rax rax L0x7fffffffd368;
(* add    %rax,%r9                                 #! PC = 0x4295351 *)
adds carry r9 r9 rax;
(* mov    %r9,0x40(%rdi)                           #! EA = L0x7fffffffd110; PC = 0x4295354 *)
mov L0x7fffffffd110 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295358 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295361 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295365 *)
mov r9 0@uint64;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd3d0; Value = 0xcffc640545f98dd1; PC = 0x4295368 *)
mov rax L0x7fffffffd3d0;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295372 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r10                                #! PC = 0x4295376 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295379 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295382 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295386 *)
mov rax L0x7fffffffd3d8;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd370; PC = 0x4295390 *)
mull rdx rax rax L0x7fffffffd370;
(* add    %rax,%r10                                #! PC = 0x4295394 *)
adds carry r10 r10 rax;
(* mov    %r10,0x48(%rdi)                          #! EA = L0x7fffffffd118; PC = 0x4295397 *)
mov L0x7fffffffd118 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295401 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295404 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd3d8; Value = 0x179e19613154296d; PC = 0x4295408 *)
mov rax L0x7fffffffd3d8;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd378; PC = 0x4295412 *)
mull rdx rax rax L0x7fffffffd378;
(* add    %rax,%r8                                 #! PC = 0x4295416 *)
adds carry r8 r8 rax;
(* mov    %r8,0x50(%rdi)                           #! EA = L0x7fffffffd120; PC = 0x4295419 *)
mov L0x7fffffffd120 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295423 *)
adcs carry r9 r9 rdx carry;
(* mov    %r9,0x58(%rdi)                           #! EA = L0x7fffffffd128; PC = 0x4295426 *)
mov L0x7fffffffd128 r9;
(* #retq                                           #! PC = 0x4295430 *)
#retq                                           #! 0x4295430 = 0x4295430;
(* mov    %r14,%rdx                                #! PC = 0x4283813 *)
mov rdx r14;
(* mov    %r13,%rsi                                #! PC = 0x4283816 *)
mov rsi r13;
(* mov    %rbp,%rdi                                #! PC = 0x4283819 *)
mov rdi rbp;
(* #callq  0x418845 <fp_muln_low>                  #! PC = 0x4283822 *)
#callq  0x418845 <fp_muln_low>                  #! 0x4283822 = 0x4283822;
(* mov    %rdx,%rcx                                #! PC = 0x4294725 *)
mov rcx rdx;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4294728 *)
mov rax L0x7fffffffd3e0;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4294731 *)
mull rdx rax rax L0x7fffffffd380;
(* mov    %rax,(%rdi)                              #! EA = L0x7fffffffd1e0; PC = 0x4294734 *)
mov L0x7fffffffd1e0 rax;
(* mov    %rdx,%r8                                 #! PC = 0x4294737 *)
mov r8 rdx;
(* xor    %r9,%r9                                  #! PC = 0x4294740 *)
mov r9 0@uint64;
(* xor    %r10,%r10                                #! PC = 0x4294743 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4294746 *)
mov rax L0x7fffffffd3e0;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4294749 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r8                                 #! PC = 0x4294753 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294756 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294759 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4294763 *)
mov rax L0x7fffffffd3e8;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4294767 *)
mull rdx rax rax L0x7fffffffd380;
(* add    %rax,%r8                                 #! PC = 0x4294770 *)
adds carry r8 r8 rax;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd1e8; PC = 0x4294773 *)
mov L0x7fffffffd1e8 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4294777 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294780 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4294784 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4294787 *)
mov rax L0x7fffffffd3e0;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4294790 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r9                                 #! PC = 0x4294794 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294797 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294800 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4294804 *)
mov rax L0x7fffffffd3e8;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4294808 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r9                                 #! PC = 0x4294812 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294815 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294818 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4294822 *)
mov rax L0x7fffffffd3f0;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4294826 *)
mull rdx rax rax L0x7fffffffd380;
(* add    %rax,%r9                                 #! PC = 0x4294829 *)
adds carry r9 r9 rax;
(* mov    %r9,0x10(%rdi)                           #! EA = L0x7fffffffd1f0; PC = 0x4294832 *)
mov L0x7fffffffd1f0 r9;
(* adc    %rdx,%r10                                #! PC = 0x4294836 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294839 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4294843 *)
mov r9 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4294846 *)
mov rax L0x7fffffffd3e0;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4294849 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r10                                #! PC = 0x4294853 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294856 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294859 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4294863 *)
mov rax L0x7fffffffd3e8;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4294867 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r10                                #! PC = 0x4294871 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294874 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294877 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4294881 *)
mov rax L0x7fffffffd3f0;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4294885 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r10                                #! PC = 0x4294889 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294892 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294895 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4294899 *)
mov rax L0x7fffffffd3f8;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4294903 *)
mull rdx rax rax L0x7fffffffd380;
(* add    %rax,%r10                                #! PC = 0x4294906 *)
adds carry r10 r10 rax;
(* mov    %r10,0x18(%rdi)                          #! EA = L0x7fffffffd1f8; PC = 0x4294909 *)
mov L0x7fffffffd1f8 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4294913 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294916 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4294920 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4294923 *)
mov rax L0x7fffffffd3e0;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4294926 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r8                                 #! PC = 0x4294930 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294933 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294936 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4294940 *)
mov rax L0x7fffffffd3e8;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4294944 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r8                                 #! PC = 0x4294948 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294951 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294954 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4294958 *)
mov rax L0x7fffffffd3f0;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4294962 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r8                                 #! PC = 0x4294966 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294969 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294972 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4294976 *)
mov rax L0x7fffffffd3f8;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4294980 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r8                                 #! PC = 0x4294984 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294987 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294990 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4294994 *)
mov rax L0x7fffffffd400;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4294998 *)
mull rdx rax rax L0x7fffffffd380;
(* add    %rax,%r8                                 #! PC = 0x4295001 *)
adds carry r8 r8 rax;
(* mov    %r8,0x20(%rdi)                           #! EA = L0x7fffffffd200; PC = 0x4295004 *)
mov L0x7fffffffd200 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295008 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295011 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295015 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffd3e0; Value = 0xcc2702ecb00c12f3; PC = 0x4295018 *)
mov rax L0x7fffffffd3e0;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295021 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r9                                 #! PC = 0x4295025 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295028 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295031 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4295035 *)
mov rax L0x7fffffffd3e8;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4295039 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r9                                 #! PC = 0x4295043 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295046 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295049 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4295053 *)
mov rax L0x7fffffffd3f0;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4295057 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r9                                 #! PC = 0x4295061 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295064 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295067 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4295071 *)
mov rax L0x7fffffffd3f8;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4295075 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r9                                 #! PC = 0x4295079 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295082 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295085 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4295089 *)
mov rax L0x7fffffffd400;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4295093 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r9                                 #! PC = 0x4295097 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295100 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295103 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295107 *)
mov rax L0x7fffffffd408;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffd380; PC = 0x4295111 *)
mull rdx rax rax L0x7fffffffd380;
(* add    %rax,%r9                                 #! PC = 0x4295114 *)
adds carry r9 r9 rax;
(* mov    %r9,0x28(%rdi)                           #! EA = L0x7fffffffd208; PC = 0x4295117 *)
mov L0x7fffffffd208 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295121 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295124 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295128 *)
mov r9 0@uint64;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffd3e8; Value = 0x9e986e412d15441d; PC = 0x4295131 *)
mov rax L0x7fffffffd3e8;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295135 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r10                                #! PC = 0x4295139 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295142 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295145 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4295149 *)
mov rax L0x7fffffffd3f0;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4295153 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r10                                #! PC = 0x4295157 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295160 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295163 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4295167 *)
mov rax L0x7fffffffd3f8;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4295171 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r10                                #! PC = 0x4295175 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295178 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295181 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4295185 *)
mov rax L0x7fffffffd400;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4295189 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r10                                #! PC = 0x4295193 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295196 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295199 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295203 *)
mov rax L0x7fffffffd408;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffd388; PC = 0x4295207 *)
mull rdx rax rax L0x7fffffffd388;
(* add    %rax,%r10                                #! PC = 0x4295211 *)
adds carry r10 r10 rax;
(* mov    %r10,0x30(%rdi)                          #! EA = L0x7fffffffd210; PC = 0x4295214 *)
mov L0x7fffffffd210 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295218 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295221 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4295225 *)
mov r10 0@uint64;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffd3f0; Value = 0x86f0d9c57740f069; PC = 0x4295228 *)
mov rax L0x7fffffffd3f0;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295232 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r8                                 #! PC = 0x4295236 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295239 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295242 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4295246 *)
mov rax L0x7fffffffd3f8;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4295250 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r8                                 #! PC = 0x4295254 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295257 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295260 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4295264 *)
mov rax L0x7fffffffd400;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4295268 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r8                                 #! PC = 0x4295272 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295275 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295278 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295282 *)
mov rax L0x7fffffffd408;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffd390; PC = 0x4295286 *)
mull rdx rax rax L0x7fffffffd390;
(* add    %rax,%r8                                 #! PC = 0x4295290 *)
adds carry r8 r8 rax;
(* mov    %r8,0x38(%rdi)                           #! EA = L0x7fffffffd218; PC = 0x4295293 *)
mov L0x7fffffffd218 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295297 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295300 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295304 *)
mov r8 0@uint64;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffd3f8; Value = 0xa11bfbdc54933a3a; PC = 0x4295307 *)
mov rax L0x7fffffffd3f8;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295311 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r9                                 #! PC = 0x4295315 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295318 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295321 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4295325 *)
mov rax L0x7fffffffd400;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4295329 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r9                                 #! PC = 0x4295333 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295336 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295339 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295343 *)
mov rax L0x7fffffffd408;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffd398; PC = 0x4295347 *)
mull rdx rax rax L0x7fffffffd398;
(* add    %rax,%r9                                 #! PC = 0x4295351 *)
adds carry r9 r9 rax;
(* mov    %r9,0x40(%rdi)                           #! EA = L0x7fffffffd220; PC = 0x4295354 *)
mov L0x7fffffffd220 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295358 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295361 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295365 *)
mov r9 0@uint64;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffd400; Value = 0x669130b9104fd5b1; PC = 0x4295368 *)
mov rax L0x7fffffffd400;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295372 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r10                                #! PC = 0x4295376 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295379 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295382 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295386 *)
mov rax L0x7fffffffd408;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffd3a0; PC = 0x4295390 *)
mull rdx rax rax L0x7fffffffd3a0;
(* add    %rax,%r10                                #! PC = 0x4295394 *)
adds carry r10 r10 rax;
(* mov    %r10,0x48(%rdi)                          #! EA = L0x7fffffffd228; PC = 0x4295397 *)
mov L0x7fffffffd228 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295401 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295404 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffd408; Value = 0x1550e902af6321cb; PC = 0x4295408 *)
mov rax L0x7fffffffd408;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffd3a8; PC = 0x4295412 *)
mull rdx rax rax L0x7fffffffd3a8;
(* add    %rax,%r8                                 #! PC = 0x4295416 *)
adds carry r8 r8 rax;
(* mov    %r8,0x50(%rdi)                           #! EA = L0x7fffffffd230; PC = 0x4295419 *)
mov L0x7fffffffd230 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295423 *)
adcs carry r9 r9 rdx carry;
(* mov    %r9,0x58(%rdi)                           #! EA = L0x7fffffffd238; PC = 0x4295426 *)
mov L0x7fffffffd238 r9;
(* #retq                                           #! PC = 0x4295430 *)
#retq                                           #! 0x4295430 = 0x4295430;
(* lea    0x60(%rsp),%rdx                          #! PC = 0x4283827 *)
lea    %%EA,%%rdx                          #! 0x4283827 = 0x4283827;
(* lea    0xc0(%rsp),%rdi                          #! PC = 0x4283832 *)
lea    %%EA,%%rdi                          #! 0x4283832 = 0x4283832;
(* mov    %rsp,%rsi                                #! PC = 0x4283840 *)
mov rsi rsp;
(* #callq  0x418845 <fp_muln_low>                  #! PC = 0x4283843 *)
#callq  0x418845 <fp_muln_low>                  #! 0x4283843 = 0x4283843;
(* mov    %rdx,%rcx                                #! PC = 0x4294725 *)
mov rcx rdx;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4294728 *)
mov rax L0x7fffffffcd60;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4294731 *)
mull rdx rax rax L0x7fffffffcdc0;
(* mov    %rax,(%rdi)                              #! EA = L0x7fffffffce20; PC = 0x4294734 *)
mov L0x7fffffffce20 rax;
(* mov    %rdx,%r8                                 #! PC = 0x4294737 *)
mov r8 rdx;
(* xor    %r9,%r9                                  #! PC = 0x4294740 *)
mov r9 0@uint64;
(* xor    %r10,%r10                                #! PC = 0x4294743 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4294746 *)
mov rax L0x7fffffffcd60;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4294749 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r8                                 #! PC = 0x4294753 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294756 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294759 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4294763 *)
mov rax L0x7fffffffcd68;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4294767 *)
mull rdx rax rax L0x7fffffffcdc0;
(* add    %rax,%r8                                 #! PC = 0x4294770 *)
adds carry r8 r8 rax;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffce28; PC = 0x4294773 *)
mov L0x7fffffffce28 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4294777 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294780 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4294784 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4294787 *)
mov rax L0x7fffffffcd60;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4294790 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r9                                 #! PC = 0x4294794 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294797 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294800 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4294804 *)
mov rax L0x7fffffffcd68;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4294808 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r9                                 #! PC = 0x4294812 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4294815 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294818 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4294822 *)
mov rax L0x7fffffffcd70;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4294826 *)
mull rdx rax rax L0x7fffffffcdc0;
(* add    %rax,%r9                                 #! PC = 0x4294829 *)
adds carry r9 r9 rax;
(* mov    %r9,0x10(%rdi)                           #! EA = L0x7fffffffce30; PC = 0x4294832 *)
mov L0x7fffffffce30 r9;
(* adc    %rdx,%r10                                #! PC = 0x4294836 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4294839 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4294843 *)
mov r9 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4294846 *)
mov rax L0x7fffffffcd60;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4294849 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r10                                #! PC = 0x4294853 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294856 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294859 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4294863 *)
mov rax L0x7fffffffcd68;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4294867 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r10                                #! PC = 0x4294871 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294874 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294877 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4294881 *)
mov rax L0x7fffffffcd70;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4294885 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r10                                #! PC = 0x4294889 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4294892 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294895 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4294899 *)
mov rax L0x7fffffffcd78;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4294903 *)
mull rdx rax rax L0x7fffffffcdc0;
(* add    %rax,%r10                                #! PC = 0x4294906 *)
adds carry r10 r10 rax;
(* mov    %r10,0x18(%rdi)                          #! EA = L0x7fffffffce38; PC = 0x4294909 *)
mov L0x7fffffffce38 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4294913 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4294916 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4294920 *)
mov r10 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4294923 *)
mov rax L0x7fffffffcd60;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4294926 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r8                                 #! PC = 0x4294930 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294933 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294936 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4294940 *)
mov rax L0x7fffffffcd68;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4294944 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r8                                 #! PC = 0x4294948 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294951 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294954 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4294958 *)
mov rax L0x7fffffffcd70;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4294962 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r8                                 #! PC = 0x4294966 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294969 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294972 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4294976 *)
mov rax L0x7fffffffcd78;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4294980 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r8                                 #! PC = 0x4294984 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4294987 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4294990 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4294994 *)
mov rax L0x7fffffffcd80;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4294998 *)
mull rdx rax rax L0x7fffffffcdc0;
(* add    %rax,%r8                                 #! PC = 0x4295001 *)
adds carry r8 r8 rax;
(* mov    %r8,0x20(%rdi)                           #! EA = L0x7fffffffce40; PC = 0x4295004 *)
mov L0x7fffffffce40 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295008 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295011 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295015 *)
mov r8 0@uint64;
(* mov    (%rsi),%rax                              #! EA = L0x7fffffffcd60; Value = 0xa80a0fbc8a4ba28d; PC = 0x4295018 *)
mov rax L0x7fffffffcd60;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295021 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r9                                 #! PC = 0x4295025 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295028 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295031 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4295035 *)
mov rax L0x7fffffffcd68;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4295039 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r9                                 #! PC = 0x4295043 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295046 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295049 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4295053 *)
mov rax L0x7fffffffcd70;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4295057 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r9                                 #! PC = 0x4295061 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295064 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295067 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4295071 *)
mov rax L0x7fffffffcd78;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4295075 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r9                                 #! PC = 0x4295079 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295082 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295085 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4295089 *)
mov rax L0x7fffffffcd80;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4295093 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r9                                 #! PC = 0x4295097 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295100 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295103 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295107 *)
mov rax L0x7fffffffcd88;
(* mulq   (%rcx)                                   #! EA = L0x7fffffffcdc0; PC = 0x4295111 *)
mull rdx rax rax L0x7fffffffcdc0;
(* add    %rax,%r9                                 #! PC = 0x4295114 *)
adds carry r9 r9 rax;
(* mov    %r9,0x28(%rdi)                           #! EA = L0x7fffffffce48; PC = 0x4295117 *)
mov L0x7fffffffce48 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295121 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295124 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295128 *)
mov r9 0@uint64;
(* mov    0x8(%rsi),%rax                           #! EA = L0x7fffffffcd68; Value = 0xeed33621a4495a67; PC = 0x4295131 *)
mov rax L0x7fffffffcd68;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295135 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r10                                #! PC = 0x4295139 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295142 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295145 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4295149 *)
mov rax L0x7fffffffcd70;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4295153 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r10                                #! PC = 0x4295157 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295160 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295163 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4295167 *)
mov rax L0x7fffffffcd78;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4295171 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r10                                #! PC = 0x4295175 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295178 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295181 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4295185 *)
mov rax L0x7fffffffcd80;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4295189 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r10                                #! PC = 0x4295193 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295196 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295199 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295203 *)
mov rax L0x7fffffffcd88;
(* mulq   0x8(%rcx)                                #! EA = L0x7fffffffcdc8; PC = 0x4295207 *)
mull rdx rax rax L0x7fffffffcdc8;
(* add    %rax,%r10                                #! PC = 0x4295211 *)
adds carry r10 r10 rax;
(* mov    %r10,0x30(%rdi)                          #! EA = L0x7fffffffce50; PC = 0x4295214 *)
mov L0x7fffffffce50 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295218 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295221 *)
adcs carry r9 r9 0x0@uint64 carry;
(* xor    %r10,%r10                                #! PC = 0x4295225 *)
mov r10 0@uint64;
(* mov    0x10(%rsi),%rax                          #! EA = L0x7fffffffcd70; Value = 0x3f112812cb34382f; PC = 0x4295228 *)
mov rax L0x7fffffffcd70;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295232 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r8                                 #! PC = 0x4295236 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295239 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295242 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4295246 *)
mov rax L0x7fffffffcd78;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4295250 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r8                                 #! PC = 0x4295254 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295257 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295260 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4295264 *)
mov rax L0x7fffffffcd80;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4295268 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r8                                 #! PC = 0x4295272 *)
adds carry r8 r8 rax;
(* adc    %rdx,%r9                                 #! PC = 0x4295275 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295278 *)
adcs carry r10 r10 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295282 *)
mov rax L0x7fffffffcd88;
(* mulq   0x10(%rcx)                               #! EA = L0x7fffffffcdd0; PC = 0x4295286 *)
mull rdx rax rax L0x7fffffffcdd0;
(* add    %rax,%r8                                 #! PC = 0x4295290 *)
adds carry r8 r8 rax;
(* mov    %r8,0x38(%rdi)                           #! EA = L0x7fffffffce58; PC = 0x4295293 *)
mov L0x7fffffffce58 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295297 *)
adcs carry r9 r9 rdx carry;
(* adc    $0x0,%r10                                #! PC = 0x4295300 *)
adcs carry r10 r10 0x0@uint64 carry;
(* xor    %r8,%r8                                  #! PC = 0x4295304 *)
mov r8 0@uint64;
(* mov    0x18(%rsi),%rax                          #! EA = L0x7fffffffcd78; Value = 0x3672b3951419dc3f; PC = 0x4295307 *)
mov rax L0x7fffffffcd78;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295311 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r9                                 #! PC = 0x4295315 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295318 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295321 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4295325 *)
mov rax L0x7fffffffcd80;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4295329 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r9                                 #! PC = 0x4295333 *)
adds carry r9 r9 rax;
(* adc    %rdx,%r10                                #! PC = 0x4295336 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295339 *)
adcs carry r8 r8 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295343 *)
mov rax L0x7fffffffcd88;
(* mulq   0x18(%rcx)                               #! EA = L0x7fffffffcdd8; PC = 0x4295347 *)
mull rdx rax rax L0x7fffffffcdd8;
(* add    %rax,%r9                                 #! PC = 0x4295351 *)
adds carry r9 r9 rax;
(* mov    %r9,0x40(%rdi)                           #! EA = L0x7fffffffce60; PC = 0x4295354 *)
mov L0x7fffffffce60 r9;
(* adc    %rdx,%r10                                #! PC = 0x4295358 *)
adcs carry r10 r10 rdx carry;
(* adc    $0x0,%r8                                 #! PC = 0x4295361 *)
adcs carry r8 r8 0x0@uint64 carry;
(* xor    %r9,%r9                                  #! PC = 0x4295365 *)
mov r9 0@uint64;
(* mov    0x20(%rsi),%rax                          #! EA = L0x7fffffffcd80; Value = 0x368d94be56496383; PC = 0x4295368 *)
mov rax L0x7fffffffcd80;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295372 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r10                                #! PC = 0x4295376 *)
adds carry r10 r10 rax;
(* adc    %rdx,%r8                                 #! PC = 0x4295379 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295382 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295386 *)
mov rax L0x7fffffffcd88;
(* mulq   0x20(%rcx)                               #! EA = L0x7fffffffcde0; PC = 0x4295390 *)
mull rdx rax rax L0x7fffffffcde0;
(* add    %rax,%r10                                #! PC = 0x4295394 *)
adds carry r10 r10 rax;
(* mov    %r10,0x48(%rdi)                          #! EA = L0x7fffffffce68; PC = 0x4295397 *)
mov L0x7fffffffce68 r10;
(* adc    %rdx,%r8                                 #! PC = 0x4295401 *)
adcs carry r8 r8 rdx carry;
(* adc    $0x0,%r9                                 #! PC = 0x4295404 *)
adcs carry r9 r9 0x0@uint64 carry;
(* mov    0x28(%rsi),%rax                          #! EA = L0x7fffffffcd88; Value = 0x2cef0263e0b74b39; PC = 0x4295408 *)
mov rax L0x7fffffffcd88;
(* mulq   0x28(%rcx)                               #! EA = L0x7fffffffcde8; PC = 0x4295412 *)
mull rdx rax rax L0x7fffffffcde8;
(* add    %rax,%r8                                 #! PC = 0x4295416 *)
adds carry r8 r8 rax;
(* mov    %r8,0x50(%rdi)                           #! EA = L0x7fffffffce70; PC = 0x4295419 *)
mov L0x7fffffffce70 r8;
(* adc    %rdx,%r9                                 #! PC = 0x4295423 *)
adcs carry r9 r9 rdx carry;
(* mov    %r9,0x58(%rdi)                           #! EA = L0x7fffffffce78; PC = 0x4295426 *)
mov L0x7fffffffce78 r9;
(* #retq                                           #! PC = 0x4295430 *)
#retq                                           #! 0x4295430 = 0x4295430;
(* mov    %rbp,%rdx                                #! PC = 0x4283848 *)
mov rdx rbp;
(* mov    %rbx,%rsi                                #! PC = 0x4283851 *)
mov rsi rbx;
(* mov    %rsp,%rdi                                #! PC = 0x4283854 *)
mov rdi rsp;
(* #callq  0x4180cd <fp_addd_low>                  #! PC = 0x4283857 *)
#callq  0x4180cd <fp_addd_low>                  #! 0x4283857 = 0x4283857;
(* mov    (%rdx),%r11                              #! EA = L0x7fffffffd1e0; Value = 0xd6d9a2ae368518bd; PC = 0x4292813 *)
mov r11 L0x7fffffffd1e0;
(* add    (%rsi),%r11                              #! EA = L0x7fffffffd0d0; Value = 0xe96ae30df9ede38c; PC = 0x4292816 *)
adds carry r11 r11 L0x7fffffffd0d0;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffcd60; PC = 0x4292819 *)
mov L0x7fffffffcd60 r11;
(* mov    0x8(%rdx),%r11                           #! EA = L0x7fffffffd1e8; Value = 0xfe0e17b4ff78a063; PC = 0x4292822 *)
mov r11 L0x7fffffffd1e8;
(* adc    0x8(%rsi),%r11                           #! EA = L0x7fffffffd0d8; Value = 0x1ad3a0adc6440ed5; PC = 0x4292826 *)
adcs carry r11 r11 L0x7fffffffd0d8 carry;
(* mov    %r11,0x8(%rdi)                           #! EA = L0x7fffffffcd68; PC = 0x4292830 *)
mov L0x7fffffffcd68 r11;
(* mov    0x10(%rdx),%r11                          #! EA = L0x7fffffffd1f0; Value = 0x8762a805d9a4a8a3; PC = 0x4292834 *)
mov r11 L0x7fffffffd1f0;
(* adc    0x10(%rsi),%r11                          #! EA = L0x7fffffffd0e0; Value = 0x4a3cfa93e6b97972; PC = 0x4292838 *)
adcs carry r11 r11 L0x7fffffffd0e0 carry;
(* mov    %r11,0x10(%rdi)                          #! EA = L0x7fffffffcd70; PC = 0x4292842 *)
mov L0x7fffffffcd70 r11;
(* mov    0x18(%rdx),%r11                          #! EA = L0x7fffffffd1f8; Value = 0xd6cd55f7c9687a24; PC = 0x4292846 *)
mov r11 L0x7fffffffd1f8;
(* adc    0x18(%rsi),%r11                          #! EA = L0x7fffffffd0e8; Value = 0x0fc8d99ac1392fba; PC = 0x4292850 *)
adcs carry r11 r11 L0x7fffffffd0e8 carry;
(* mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffcd78; PC = 0x4292854 *)
mov L0x7fffffffcd78 r11;
(* mov    0x20(%rdx),%r11                          #! EA = L0x7fffffffd200; Value = 0x76a65642209259d5; PC = 0x4292858 *)
mov r11 L0x7fffffffd200;
(* adc    0x20(%rsi),%r11                          #! EA = L0x7fffffffd0f0; Value = 0x9ea475c7c2e12177; PC = 0x4292862 *)
adcs carry r11 r11 L0x7fffffffd0f0 carry;
(* mov    %r11,0x20(%rdi)                          #! EA = L0x7fffffffcd80; PC = 0x4292866 *)
mov L0x7fffffffcd80 r11;
(* mov    0x28(%rdx),%r11                          #! EA = L0x7fffffffd208; Value = 0xd6dd8bade9136610; PC = 0x4292870 *)
mov r11 L0x7fffffffd208;
(* adc    0x28(%rsi),%r11                          #! EA = L0x7fffffffd0f8; Value = 0x000a95a56b78fe6a; PC = 0x4292874 *)
adcs carry r11 r11 L0x7fffffffd0f8 carry;
(* mov    %r11,0x28(%rdi)                          #! EA = L0x7fffffffcd88; PC = 0x4292878 *)
mov L0x7fffffffcd88 r11;
(* mov    0x30(%rdx),%r11                          #! EA = L0x7fffffffd210; Value = 0xcae66c06b1aa7b57; PC = 0x4292882 *)
mov r11 L0x7fffffffd210;
(* adc    0x30(%rsi),%r11                          #! EA = L0x7fffffffd100; Value = 0x171e354a0eb86fa6; PC = 0x4292886 *)
adcs carry r11 r11 L0x7fffffffd100 carry;
(* mov    %r11,0x30(%rdi)                          #! EA = L0x7fffffffcd90; PC = 0x4292890 *)
mov L0x7fffffffcd90 r11;
(* mov    0x38(%rdx),%r11                          #! EA = L0x7fffffffd218; Value = 0x1d3de5aa2f64325e; PC = 0x4292894 *)
mov r11 L0x7fffffffd218;
(* adc    0x38(%rsi),%r11                          #! EA = L0x7fffffffd108; Value = 0x3ba4f17f7fb4c47c; PC = 0x4292898 *)
adcs carry r11 r11 L0x7fffffffd108 carry;
(* mov    %r11,0x38(%rdi)                          #! EA = L0x7fffffffcd98; PC = 0x4292902 *)
mov L0x7fffffffcd98 r11;
(* mov    0x40(%rdx),%r11                          #! EA = L0x7fffffffd220; Value = 0x5c5c5dd163c443ab; PC = 0x4292906 *)
mov r11 L0x7fffffffd220;
(* adc    0x40(%rsi),%r11                          #! EA = L0x7fffffffd110; Value = 0xedf480f543c41a47; PC = 0x4292910 *)
adcs carry r11 r11 L0x7fffffffd110 carry;
(* mov    %r11,0x40(%rdi)                          #! EA = L0x7fffffffcda0; PC = 0x4292914 *)
mov L0x7fffffffcda0 r11;
(* mov    0x48(%rdx),%r11                          #! EA = L0x7fffffffd228; Value = 0x582938907022e3c3; PC = 0x4292918 *)
mov r11 L0x7fffffffd228;
(* adc    0x48(%rsi),%r11                          #! EA = L0x7fffffffd118; Value = 0x389e1450165585a2; PC = 0x4292922 *)
adcs carry r11 r11 L0x7fffffffd118 carry;
(* mov    %r11,0x48(%rdi)                          #! EA = L0x7fffffffcda8; PC = 0x4292926 *)
mov L0x7fffffffcda8 r11;
(* mov    0x50(%rdx),%r11                          #! EA = L0x7fffffffd230; Value = 0xe03238f696dc5682; PC = 0x4292930 *)
mov r11 L0x7fffffffd230;
(* adc    0x50(%rsi),%r11                          #! EA = L0x7fffffffd120; Value = 0x4f5f40868b458094; PC = 0x4292934 *)
adcs carry r11 r11 L0x7fffffffd120 carry;
(* mov    %r11,0x50(%rdi)                          #! EA = L0x7fffffffcdb0; PC = 0x4292938 *)
mov L0x7fffffffcdb0 r11;
(* mov    0x58(%rdx),%r11                          #! EA = L0x7fffffffd238; Value = 0x01dbfe3d8054364e; PC = 0x4292942 *)
mov r11 L0x7fffffffd238;
(* adc    0x58(%rsi),%r11                          #! EA = L0x7fffffffd128; Value = 0x01d1a649907e3dd5; PC = 0x4292946 *)
adcs carry r11 r11 L0x7fffffffd128 carry;
(* mov    %r11,0x58(%rdi)                          #! EA = L0x7fffffffcdb8; PC = 0x4292950 *)
mov L0x7fffffffcdb8 r11;
(* #retq                                           #! PC = 0x4292954 *)
#retq                                           #! 0x4292954 = 0x4292954;
(* mov    %rbp,%rdx                                #! PC = 0x4283862 *)
mov rdx rbp;
(* mov    %rbx,%rsi                                #! PC = 0x4283865 *)
mov rsi rbx;
(* mov    %rbx,%rdi                                #! PC = 0x4283868 *)
mov rdi rbx;
(* #callq  0x418391 <fp_subd_low>                  #! PC = 0x4283871 *)
#callq  0x418391 <fp_subd_low>                  #! 0x4283871 = 0x4283871;
(* mov    (%rsi),%r8                               #! EA = L0x7fffffffd0d0; Value = 0xe96ae30df9ede38c; PC = 0x4293521 *)
mov r8 L0x7fffffffd0d0;
(* sub    (%rdx),%r8                               #! EA = L0x7fffffffd1e0; Value = 0xd6d9a2ae368518bd; PC = 0x4293524 *)
subb carry r8 r8 L0x7fffffffd1e0;
(* mov    %r8,(%rdi)                               #! EA = L0x7fffffffd0d0; PC = 0x4293527 *)
mov L0x7fffffffd0d0 r8;
(* mov    0x8(%rsi),%r8                            #! EA = L0x7fffffffd0d8; Value = 0x1ad3a0adc6440ed5; PC = 0x4293530 *)
mov r8 L0x7fffffffd0d8;
(* sbb    0x8(%rdx),%r8                            #! EA = L0x7fffffffd1e8; Value = 0xfe0e17b4ff78a063; PC = 0x4293534 *)
sbbs carry r8 r8 L0x7fffffffd1e8 carry;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd0d8; PC = 0x4293538 *)
mov L0x7fffffffd0d8 r8;
(* mov    0x10(%rsi),%r8                           #! EA = L0x7fffffffd0e0; Value = 0x4a3cfa93e6b97972; PC = 0x4293542 *)
mov r8 L0x7fffffffd0e0;
(* sbb    0x10(%rdx),%r8                           #! EA = L0x7fffffffd1f0; Value = 0x8762a805d9a4a8a3; PC = 0x4293546 *)
sbbs carry r8 r8 L0x7fffffffd1f0 carry;
(* mov    %r8,0x10(%rdi)                           #! EA = L0x7fffffffd0e0; PC = 0x4293550 *)
mov L0x7fffffffd0e0 r8;
(* mov    0x18(%rsi),%r8                           #! EA = L0x7fffffffd0e8; Value = 0x0fc8d99ac1392fba; PC = 0x4293554 *)
mov r8 L0x7fffffffd0e8;
(* sbb    0x18(%rdx),%r8                           #! EA = L0x7fffffffd1f8; Value = 0xd6cd55f7c9687a24; PC = 0x4293558 *)
sbbs carry r8 r8 L0x7fffffffd1f8 carry;
(* mov    %r8,0x18(%rdi)                           #! EA = L0x7fffffffd0e8; PC = 0x4293562 *)
mov L0x7fffffffd0e8 r8;
(* mov    0x20(%rsi),%r8                           #! EA = L0x7fffffffd0f0; Value = 0x9ea475c7c2e12177; PC = 0x4293566 *)
mov r8 L0x7fffffffd0f0;
(* sbb    0x20(%rdx),%r8                           #! EA = L0x7fffffffd200; Value = 0x76a65642209259d5; PC = 0x4293570 *)
sbbs carry r8 r8 L0x7fffffffd200 carry;
(* mov    %r8,0x20(%rdi)                           #! EA = L0x7fffffffd0f0; PC = 0x4293574 *)
mov L0x7fffffffd0f0 r8;
(* mov    0x28(%rsi),%r8                           #! EA = L0x7fffffffd0f8; Value = 0x000a95a56b78fe6a; PC = 0x4293578 *)
mov r8 L0x7fffffffd0f8;
(* sbb    0x28(%rdx),%r8                           #! EA = L0x7fffffffd208; Value = 0xd6dd8bade9136610; PC = 0x4293582 *)
sbbs carry r8 r8 L0x7fffffffd208 carry;
(* mov    %r8,0x28(%rdi)                           #! EA = L0x7fffffffd0f8; PC = 0x4293586 *)
mov L0x7fffffffd0f8 r8;
(* mov    0x30(%rsi),%r8                           #! EA = L0x7fffffffd100; Value = 0x171e354a0eb86fa6; PC = 0x4293590 *)
mov r8 L0x7fffffffd100;
(* sbb    0x30(%rdx),%r8                           #! EA = L0x7fffffffd210; Value = 0xcae66c06b1aa7b57; PC = 0x4293594 *)
sbbs carry r8 r8 L0x7fffffffd210 carry;
(* mov    %r8,0x30(%rdi)                           #! EA = L0x7fffffffd100; PC = 0x4293598 *)
mov L0x7fffffffd100 r8;
(* mov    0x38(%rsi),%r8                           #! EA = L0x7fffffffd108; Value = 0x3ba4f17f7fb4c47c; PC = 0x4293602 *)
mov r8 L0x7fffffffd108;
(* sbb    0x38(%rdx),%r8                           #! EA = L0x7fffffffd218; Value = 0x1d3de5aa2f64325e; PC = 0x4293606 *)
sbbs carry r8 r8 L0x7fffffffd218 carry;
(* mov    %r8,0x38(%rdi)                           #! EA = L0x7fffffffd108; PC = 0x4293610 *)
mov L0x7fffffffd108 r8;
(* mov    0x40(%rsi),%r8                           #! EA = L0x7fffffffd110; Value = 0xedf480f543c41a47; PC = 0x4293614 *)
mov r8 L0x7fffffffd110;
(* sbb    0x40(%rdx),%r8                           #! EA = L0x7fffffffd220; Value = 0x5c5c5dd163c443ab; PC = 0x4293618 *)
sbbs carry r8 r8 L0x7fffffffd220 carry;
(* mov    %r8,0x40(%rdi)                           #! EA = L0x7fffffffd110; PC = 0x4293622 *)
mov L0x7fffffffd110 r8;
(* mov    0x48(%rsi),%r8                           #! EA = L0x7fffffffd118; Value = 0x389e1450165585a2; PC = 0x4293626 *)
mov r8 L0x7fffffffd118;
(* sbb    0x48(%rdx),%r8                           #! EA = L0x7fffffffd228; Value = 0x582938907022e3c3; PC = 0x4293630 *)
sbbs carry r8 r8 L0x7fffffffd228 carry;
(* mov    %r8,0x48(%rdi)                           #! EA = L0x7fffffffd118; PC = 0x4293634 *)
mov L0x7fffffffd118 r8;
(* mov    0x50(%rsi),%r8                           #! EA = L0x7fffffffd120; Value = 0x4f5f40868b458094; PC = 0x4293638 *)
mov r8 L0x7fffffffd120;
(* sbb    0x50(%rdx),%r8                           #! EA = L0x7fffffffd230; Value = 0xe03238f696dc5682; PC = 0x4293642 *)
sbbs carry r8 r8 L0x7fffffffd230 carry;
(* mov    %r8,0x50(%rdi)                           #! EA = L0x7fffffffd120; PC = 0x4293646 *)
mov L0x7fffffffd120 r8;
(* mov    0x58(%rsi),%r8                           #! EA = L0x7fffffffd128; Value = 0x01d1a649907e3dd5; PC = 0x4293650 *)
mov r8 L0x7fffffffd128;
(* sbb    0x58(%rdx),%r8                           #! EA = L0x7fffffffd238; Value = 0x01dbfe3d8054364e; PC = 0x4293654 *)
sbbs carry r8 r8 L0x7fffffffd238 carry;
(* mov    %r8,0x58(%rdi)                           #! EA = L0x7fffffffd128; PC = 0x4293658 *)
mov L0x7fffffffd128 r8;
(* #retq                                           #! PC = 0x4293662 *)
#retq                                           #! 0x4293662 = 0x4293662;
(* lea    0xc0(%rsp),%rsi                          #! PC = 0x4283876 *)
lea    %%EA,%%rsi                          #! 0x4283876 = 0x4283876;
(* mov    %rsp,%rdx                                #! PC = 0x4283884 *)
mov rdx rsp;
(* mov    %rbp,%rdi                                #! PC = 0x4283887 *)
mov rdi rbp;
(* #callq  0x418391 <fp_subd_low>                  #! PC = 0x4283890 *)
#callq  0x418391 <fp_subd_low>                  #! 0x4283890 = 0x4283890;
(* mov    (%rsi),%r8                               #! EA = L0x7fffffffce20; Value = 0x8d8128eecc5dee09; PC = 0x4293521 *)
mov r8 L0x7fffffffce20;
(* sub    (%rdx),%r8                               #! EA = L0x7fffffffcd60; Value = 0xc04485bc3072fc49; PC = 0x4293524 *)
subb carry r8 r8 L0x7fffffffcd60;
(* mov    %r8,(%rdi)                               #! EA = L0x7fffffffd1e0; PC = 0x4293527 *)
mov L0x7fffffffd1e0 r8;
(* mov    0x8(%rsi),%r8                            #! EA = L0x7fffffffce28; Value = 0x410672c62be77475; PC = 0x4293530 *)
mov r8 L0x7fffffffce28;
(* sbb    0x8(%rdx),%r8                            #! EA = L0x7fffffffcd68; Value = 0x18e1b862c5bcaf39; PC = 0x4293534 *)
sbbs carry r8 r8 L0x7fffffffcd68 carry;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd1e8; PC = 0x4293538 *)
mov L0x7fffffffd1e8 r8;
(* mov    0x10(%rsi),%r8                           #! EA = L0x7fffffffce30; Value = 0x33ec7626354f2a10; PC = 0x4293542 *)
mov r8 L0x7fffffffce30;
(* sbb    0x10(%rdx),%r8                           #! EA = L0x7fffffffcd70; Value = 0xd19fa299c05e2216; PC = 0x4293546 *)
sbbs carry r8 r8 L0x7fffffffcd70 carry;
(* mov    %r8,0x10(%rdi)                           #! EA = L0x7fffffffd1f0; PC = 0x4293550 *)
mov L0x7fffffffd1f0 r8;
(* mov    0x18(%rsi),%r8                           #! EA = L0x7fffffffce38; Value = 0x17e0039b9d94ac86; PC = 0x4293554 *)
mov r8 L0x7fffffffce38;
(* sbb    0x18(%rdx),%r8                           #! EA = L0x7fffffffcd78; Value = 0xe6962f928aa1a9de; PC = 0x4293558 *)
sbbs carry r8 r8 L0x7fffffffcd78 carry;
(* mov    %r8,0x18(%rdi)                           #! EA = L0x7fffffffd1f8; PC = 0x4293562 *)
mov L0x7fffffffd1f8 r8;
(* mov    0x20(%rsi),%r8                           #! EA = L0x7fffffffce40; Value = 0x822032cd2be0c1ed; PC = 0x4293566 *)
mov r8 L0x7fffffffce40;
(* sbb    0x20(%rdx),%r8                           #! EA = L0x7fffffffcd80; Value = 0x154acc09e3737b4c; PC = 0x4293570 *)
sbbs carry r8 r8 L0x7fffffffcd80 carry;
(* mov    %r8,0x20(%rdi)                           #! EA = L0x7fffffffd200; PC = 0x4293574 *)
mov L0x7fffffffd200 r8;
(* mov    0x28(%rsi),%r8                           #! EA = L0x7fffffffce48; Value = 0xd62622af11be618c; PC = 0x4293578 *)
mov r8 L0x7fffffffce48;
(* sbb    0x28(%rdx),%r8                           #! EA = L0x7fffffffcd88; Value = 0xd6e82153548c647b; PC = 0x4293582 *)
sbbs carry r8 r8 L0x7fffffffcd88 carry;
(* mov    %r8,0x28(%rdi)                           #! EA = L0x7fffffffd208; PC = 0x4293586 *)
mov L0x7fffffffd208 r8;
(* mov    0x30(%rsi),%r8                           #! EA = L0x7fffffffce50; Value = 0xe633864f06aa9a21; PC = 0x4293590 *)
mov r8 L0x7fffffffce50;
(* sbb    0x30(%rdx),%r8                           #! EA = L0x7fffffffcd90; Value = 0xe204a150c062eafd; PC = 0x4293594 *)
sbbs carry r8 r8 L0x7fffffffcd90 carry;
(* mov    %r8,0x30(%rdi)                           #! EA = L0x7fffffffd210; PC = 0x4293598 *)
mov L0x7fffffffd210 r8;
(* mov    0x38(%rsi),%r8                           #! EA = L0x7fffffffce58; Value = 0x483304facecc5b67; PC = 0x4293602 *)
mov r8 L0x7fffffffce58;
(* sbb    0x38(%rdx),%r8                           #! EA = L0x7fffffffcd98; Value = 0x58e2d729af18f6da; PC = 0x4293606 *)
sbbs carry r8 r8 L0x7fffffffcd98 carry;
(* mov    %r8,0x38(%rdi)                           #! EA = L0x7fffffffd218; PC = 0x4293610 *)
mov L0x7fffffffd218 r8;
(* mov    0x40(%rsi),%r8                           #! EA = L0x7fffffffce60; Value = 0x754af9f48e06fda9; PC = 0x4293614 *)
mov r8 L0x7fffffffce60;
(* sbb    0x40(%rdx),%r8                           #! EA = L0x7fffffffcda0; Value = 0x4a50dec6a7885df2; PC = 0x4293618 *)
sbbs carry r8 r8 L0x7fffffffcda0 carry;
(* mov    %r8,0x40(%rdi)                           #! EA = L0x7fffffffd220; PC = 0x4293622 *)
mov L0x7fffffffd220 r8;
(* mov    0x48(%rsi),%r8                           #! EA = L0x7fffffffce68; Value = 0x87bc69b04d83f8d0; PC = 0x4293626 *)
mov r8 L0x7fffffffce68;
(* sbb    0x48(%rdx),%r8                           #! EA = L0x7fffffffcda8; Value = 0x90c74ce086786966; PC = 0x4293630 *)
sbbs carry r8 r8 L0x7fffffffcda8 carry;
(* mov    %r8,0x48(%rdi)                           #! EA = L0x7fffffffd228; PC = 0x4293634 *)
mov L0x7fffffffd228 r8;
(* mov    0x50(%rsi),%r8                           #! EA = L0x7fffffffce70; Value = 0x91cadd1f24c13cc8; PC = 0x4293638 *)
mov r8 L0x7fffffffce70;
(* sbb    0x50(%rdx),%r8                           #! EA = L0x7fffffffcdb0; Value = 0x2f91797d2221d716; PC = 0x4293642 *)
sbbs carry r8 r8 L0x7fffffffcdb0 carry;
(* mov    %r8,0x50(%rdi)                           #! EA = L0x7fffffffd230; PC = 0x4293646 *)
mov L0x7fffffffd230 r8;
(* mov    0x58(%rsi),%r8                           #! EA = L0x7fffffffce78; Value = 0x07614d36c779b6f9; PC = 0x4293650 *)
mov r8 L0x7fffffffce78;
(* sbb    0x58(%rdx),%r8                           #! EA = L0x7fffffffcdb8; Value = 0x03ada48710d27424; PC = 0x4293654 *)
sbbs carry r8 r8 L0x7fffffffcdb8 carry;
(* mov    %r8,0x58(%rdi)                           #! EA = L0x7fffffffd238; PC = 0x4293658 *)
mov L0x7fffffffd238 r8;
(* #retq                                           #! PC = 0x4293662 *)
#retq                                           #! 0x4293662 = 0x4293662;
(* mov    $0x2,%ecx                                #! PC = 0x4283895 *)
mov rcx 0x2@uint64;
(* mov    %r12,%rsi                                #! PC = 0x4283900 *)
mov rsi r12;
(* mov    %r12,%rdi                                #! PC = 0x4283903 *)
mov rdi r12;
(* mov    $0x7,%edx                                #! PC = 0x4283906 *)
mov rdx 0x7@uint64;
(* #callq  0x447ae0 <bn_lshb_low>                  #! PC = 0x4283911 *)
#callq  0x447ae0 <bn_lshb_low>                  #! 0x4283911 = 0x4283911;
(* movslq %edx,%rdx                                #! PC = 0x4487904 *)
movslq %%rdx,%%rdx                                #! 0x4487904 = 0x4487904;
(* #jmpq   0x401040 <__gmpn_lshift@plt>            #! PC = 0x4487907 *)
#jmpq   0x401040 <__gmpn_lshift@plt>            #! 0x4487907 = 0x4487907;
(* #jmpq   *0x6afda(%rip)        # 0x46c020        #! PC = 0x4198464 *)
#jmpq   *%%EA        # 0x46c020        #! 0x4198464 = 0x4198464;
(* pushq  $0x1                                     #! PC = 0x4198470 *)
pushq  $0x1                                     #! 0x4198470 = 0x4198470;
(* #jmpq   0x401020                                #! PC = 0x4198475 *)
#jmpq   0x401020                                #! 0x4198475 = 0x4198475;
(* pushq  0x6afe2(%rip)        # 0x46c008          #! EA = L0x46c008; PC = 0x4198432 *)
pushq  %%L0x46c008        # 0x46c008          #! L0x46c008 = L0x46c008; 0x4198432 = 0x4198432;
(* #jmpq   *0x6afe4(%rip)        # 0x46c010        #! PC = 0x4198438 *)
#jmpq   *%%EA        # 0x46c010        #! 0x4198438 = 0x4198438;
(* push   %rbx                                     #! PC = 0x140737351970528 *)
push rbx;
(* mov    %rsp,%rbx                                #! PC = 0x140737351970529 *)
mov rbx rsp;
(* and    $0xffffffffffffffc0,%rsp                 #! PC = 0x140737351970532 *)
and    $0xffffffffffffffc0,%%rsp                 #! 0x140737351970532 = 0x140737351970532;
(* sub    0x20de61(%rip),%rsp        # 0x7ffff7ffcd50 <_rtld_global_ro+176>#! EA = L0x7ffff7ffcd50; Value = 0x0000000000000a00; PC = 0x140737351970536 *)
subb carry rsp rsp L0x7ffff7ffcd50;
(* mov    %rax,(%rsp)                              #! EA = L0x7fffffffc340; PC = 0x140737351970543 *)
mov L0x7fffffffc340 rax;
(* mov    %rcx,0x8(%rsp)                           #! EA = L0x7fffffffc348; PC = 0x140737351970547 *)
mov L0x7fffffffc348 rcx;
(* mov    %rdx,0x10(%rsp)                          #! EA = L0x7fffffffc350; PC = 0x140737351970552 *)
mov L0x7fffffffc350 rdx;
(* mov    %rsi,0x18(%rsp)                          #! EA = L0x7fffffffc358; PC = 0x140737351970557 *)
mov L0x7fffffffc358 rsi;
(* mov    %rdi,0x20(%rsp)                          #! EA = L0x7fffffffc360; PC = 0x140737351970562 *)
mov L0x7fffffffc360 rdi;
(* mov    %r8,0x28(%rsp)                           #! EA = L0x7fffffffc368; PC = 0x140737351970567 *)
mov L0x7fffffffc368 r8;
(* mov    %r9,0x30(%rsp)                           #! EA = L0x7fffffffc370; PC = 0x140737351970572 *)
mov L0x7fffffffc370 r9;
(* mov    $0xee,%eax                               #! PC = 0x140737351970577 *)
mov rax 0xee@uint64;
(* xor    %edx,%edx                                #! PC = 0x140737351970582 *)
mov rdx 0@uint64;
(* mov    %rdx,0x250(%rsp)                         #! EA = L0x7fffffffc590; PC = 0x140737351970584 *)
mov L0x7fffffffc590 rdx;
(* mov    %rdx,0x258(%rsp)                         #! EA = L0x7fffffffc598; PC = 0x140737351970592 *)
mov L0x7fffffffc598 rdx;
(* mov    %rdx,0x260(%rsp)                         #! EA = L0x7fffffffc5a0; PC = 0x140737351970600 *)
mov L0x7fffffffc5a0 rdx;
(* mov    %rdx,0x268(%rsp)                         #! EA = L0x7fffffffc5a8; PC = 0x140737351970608 *)
mov L0x7fffffffc5a8 rdx;
(* mov    %rdx,0x270(%rsp)                         #! EA = L0x7fffffffc5b0; PC = 0x140737351970616 *)
mov L0x7fffffffc5b0 rdx;
(* mov    %rdx,0x278(%rsp)                         #! EA = L0x7fffffffc5b8; PC = 0x140737351970624 *)
mov L0x7fffffffc5b8 rdx;
(* xsavec 0x40(%rsp)                               #! EA = L0x7fffffffc380; PC = 0x140737351970632 *)
xsavec %%L0x7fffffffc380                               #! L0x7fffffffc380 = L0x7fffffffc380; 0x140737351970632 = 0x140737351970632;
(* mov    0x10(%rbx),%rsi                          #! EA = L0x7fffffffcd50; Value = 0x0000000000000001; PC = 0x140737351970637 *)
mov rsi L0x7fffffffcd50;
(* mov    0x8(%rbx),%rdi                           #! EA = L0x7fffffffcd48; Value = 0x00007ffff7ffe168; PC = 0x140737351970641 *)
mov rdi L0x7fffffffcd48;
(* #callq  0x7ffff7de6a00 <_dl_fixup>              #! PC = 0x140737351970645 *)
#callq  0x7ffff7de6a00 <_dl_fixup>              #! 0x140737351970645 = 0x140737351970645;
(* push   %rbx                                     #! PC = 0x140737351936512 *)
push rbx;
(* mov    %rdi,%r10                                #! PC = 0x140737351936513 *)
mov r10 rdi;
(* mov    %esi,%esi                                #! PC = 0x140737351936516 *)
mov rsi rsi;
(* lea    (%rsi,%rsi,2),%rdx                       #! PC = 0x140737351936518 *)
lea    (%%rsi,%%rsi,2),%%rdx                       #! 0x140737351936518 = 0x140737351936518;
(* sub    $0x10,%rsp                               #! PC = 0x140737351936522 *)
subb carry rsp rsp 0x10@uint64;
(* mov    0x68(%rdi),%rax                          #! EA = L0x7ffff7ffe1d0; Value = 0x000000000046bea8; PC = 0x140737351936526 *)
mov rax L0x7ffff7ffe1d0;
(* mov    0x8(%rax),%rdi                           #! EA = L0x46beb0; Value = 0x00000000004006a8; PC = 0x140737351936530 *)
mov rdi L0x46beb0;
(* mov    0xf8(%r10),%rax                          #! EA = L0x7ffff7ffe260; Value = 0x000000000046bf28; PC = 0x140737351936534 *)
mov rax L0x7ffff7ffe260;
(* mov    0x8(%rax),%rax                           #! EA = L0x46bf30; Value = 0x00000000004008c0; PC = 0x140737351936541 *)
mov rax L0x46bf30;
(* lea    (%rax,%rdx,8),%r8                        #! PC = 0x140737351936545 *)
lea    (%%rax,%%rdx,8),%%r8                        #! 0x140737351936545 = 0x140737351936545;
(* mov    0x70(%r10),%rax                          #! EA = L0x7ffff7ffe1d8; Value = 0x000000000046beb8; PC = 0x140737351936549 *)
mov rax L0x7ffff7ffe1d8;
(* mov    0x8(%r8),%rcx                            #! EA = L0x4008e0; Value = 0x0000000200000007; PC = 0x140737351936553 *)
mov rcx L0x4008e0;
(* mov    0x8(%rax),%rax                           #! EA = L0x46bec0; Value = 0x00000000004003f0; PC = 0x140737351936557 *)
mov rax L0x46bec0;
(* mov    %rcx,%rdx                                #! PC = 0x140737351936561 *)
mov rdx rcx;
(* shr    $0x20,%rdx                               #! PC = 0x140737351936564 *)
shr    $0x20,%%rdx                               #! 0x140737351936564 = 0x140737351936564;
(* lea    (%rdx,%rdx,2),%rsi                       #! PC = 0x140737351936568 *)
lea    (%%rdx,%%rdx,2),%%rsi                       #! 0x140737351936568 = 0x140737351936568;
(* lea    (%rax,%rsi,8),%rsi                       #! PC = 0x140737351936572 *)
lea    (%%rax,%%rsi,8),%%rsi                       #! 0x140737351936572 = 0x140737351936572;
(* mov    (%r10),%rax                              #! EA = L0x7ffff7ffe168; Value = 0x0000000000000000; PC = 0x140737351936576 *)
mov rax L0x7ffff7ffe168;
(* mov    %rsi,0x8(%rsp)                           #! EA = L0x7fffffffc328; PC = 0x140737351936579 *)
mov L0x7fffffffc328 rsi;
(* mov    %rax,%rbx                                #! PC = 0x140737351936584 *)
mov rbx rax;
(* add    (%r8),%rbx                               #! EA = L0x4008d8; Value = 0x000000000046c020; PC = 0x140737351936587 *)
adds carry rbx rbx L0x4008d8;
(* cmp    $0x7,%ecx                                #! PC = 0x140737351936590 *)
cmp    $0x7,%%rcx                                #! 0x140737351936590 = 0x140737351936590;
(* #jne    0x7ffff7de6ba7 <_dl_fixup+423>          #! PC = 0x140737351936593 *)
#jne    0x7ffff7de6ba7 <_dl_fixup+423>          #! 0x140737351936593 = 0x140737351936593;
(* testb  $0x3,0x5(%rsi)                           #! EA = L0x400425; PC = 0x140737351936599 *)
testb  $0x3,%%L0x400425                           #! L0x400425 = L0x400425; 0x140737351936599 = 0x140737351936599;
(* #jne    0x7ffff7de6af9 <_dl_fixup+249>          #! PC = 0x140737351936603 *)
#jne    0x7ffff7de6af9 <_dl_fixup+249>          #! 0x140737351936603 = 0x140737351936603;
(* mov    0x1c8(%r10),%rax                         #! EA = L0x7ffff7ffe330; Value = 0x000000000046bf88; PC = 0x140737351936609 *)
mov rax L0x7ffff7ffe330;
(* test   %rax,%rax                                #! PC = 0x140737351936616 *)
test   %%rax,%%rax                                #! 0x140737351936616 = 0x140737351936616;
(* #je     0x7ffff7de6b20 <_dl_fixup+288>          #! PC = 0x140737351936619 *)
#je     0x7ffff7de6b20 <_dl_fixup+288>          #! 0x140737351936619 = 0x140737351936619;
(* mov    0x8(%rax),%rax                           #! EA = L0x46bf90; Value = 0x0000000000400822; PC = 0x140737351936625 *)
mov rax L0x46bf90;
(* movzwl (%rax,%rdx,2),%eax                       #! EA = L0x400826; Value = 0x0002000000000000; PC = 0x140737351936629 *)
movzwl (%%rax,%%rdx,2),%%rax                       #! L0x400826 = L0x400826; 0x0002000000000000 = 0x0002000000000000; 0x140737351936629 = 0x140737351936629;
(* and    $0x7fff,%eax                             #! PC = 0x140737351936633 *)
and    $0x7fff,%%rax                             #! 0x140737351936633 = 0x140737351936633;
(* lea    (%rax,%rax,2),%rdx                       #! PC = 0x140737351936638 *)
lea    (%%rax,%%rax,2),%%rdx                       #! 0x140737351936638 = 0x140737351936638;
(* mov    0x2e0(%r10),%rax                         #! EA = L0x7ffff7ffe448; Value = 0x00007ffff7ff6a48; PC = 0x140737351936642 *)
mov rax L0x7ffff7ffe448;
(* lea    (%rax,%rdx,8),%r8                        #! PC = 0x140737351936649 *)
lea    (%%rax,%%rdx,8),%%r8                        #! 0x140737351936649 = 0x140737351936649;
(* mov    $0x0,%eax                                #! PC = 0x140737351936653 *)
mov rax 0x0@uint64;
(* mov    0x8(%r8),%r9d                            #! EA = L0x7ffff7ff6a50; Value = 0x0000000000000000; PC = 0x140737351936658 *)
mov    %%L0x7ffff7ff6a50,%r9d                            #! L0x7ffff7ff6a50 = L0x7ffff7ff6a50; 0x0000000000000000 = 0x0000000000000000; 0x140737351936658 = 0x140737351936658;
(* test   %r9d,%r9d                                #! PC = 0x140737351936662 *)
test   %r9d,%r9d                                #! 0x140737351936662 = 0x140737351936662;
(* cmove  %rax,%r8                                 #! PC = 0x140737351936665 *)
cmove  %%rax,%%r8                                 #! 0x140737351936665 = 0x140737351936665;
(* mov    %fs:0x18,%eax                            #! PC = 0x140737351936669 *)
mov    %fs:0x18,%%rax                            #! 0x140737351936669 = 0x140737351936669;
(* test   %eax,%eax                                #! PC = 0x140737351936677 *)
test   %%rax,%%rax                                #! 0x140737351936677 = 0x140737351936677;
(* mov    $0x1,%r9d                                #! PC = 0x140737351936679 *)
mov    $0x1,%r9d                                #! 0x140737351936679 = 0x140737351936679;
(* #jne    0x7ffff7de6b40 <_dl_fixup+320>          #! PC = 0x140737351936685 *)
#jne    0x7ffff7de6b40 <_dl_fixup+320>          #! 0x140737351936685 = 0x140737351936685;
(* mov    (%rsi),%eax                              #! EA = L0x400420; Value = 0x0000001200000065; PC = 0x140737351936691 *)
mov rax L0x400420;
(* mov    0x380(%r10),%rcx                         #! EA = L0x7ffff7ffe4e8; Value = 0x00007ffff7ffe4c0; PC = 0x140737351936693 *)
mov rcx L0x7ffff7ffe4e8;
(* lea    0x8(%rsp),%rdx                           #! PC = 0x140737351936700 *)
lea    %%EA,%%rdx                           #! 0x140737351936700 = 0x140737351936700;
(* pushq  $0x0                                     #! PC = 0x140737351936705 *)
pushq  $0x0                                     #! 0x140737351936705 = 0x140737351936705;
(* push   %r9                                      #! PC = 0x140737351936707 *)
push r9;
(* mov    %r10,%rsi                                #! PC = 0x140737351936709 *)
mov rsi r10;
(* mov    $0x1,%r9d                                #! PC = 0x140737351936712 *)
mov    $0x1,%r9d                                #! 0x140737351936712 = 0x140737351936712;
(* add    %rax,%rdi                                #! PC = 0x140737351936718 *)
adds carry rdi rdi rax;
(* #callq  0x7ffff7de19d0 <_dl_lookup_symbol_x>    #! PC = 0x140737351936721 *)
#callq  0x7ffff7de19d0 <_dl_lookup_symbol_x>    #! 0x140737351936721 = 0x140737351936721;
(* push   %rbp                                     #! PC = 0x140737351915984 *)
push rbp;
(* mov    %rsp,%rbp                                #! PC = 0x140737351915985 *)
mov rbp rsp;
(* push   %r15                                     #! PC = 0x140737351915988 *)
push r15;
(* push   %r14                                     #! PC = 0x140737351915990 *)
push r14;
(* push   %r13                                     #! PC = 0x140737351915992 *)
push r13;
(* push   %r12                                     #! PC = 0x140737351915994 *)
push r12;
(* mov    %rdx,%r15                                #! PC = 0x140737351915996 *)
mov r15 rdx;
(* push   %rbx                                     #! PC = 0x140737351915999 *)
push rbx;
(* mov    %rsi,%r14                                #! PC = 0x140737351916000 *)
mov r14 rsi;
(* mov    %r8,%r12                                 #! PC = 0x140737351916003 *)
mov r12 r8;
(* sub    $0xc8,%rsp                               #! PC = 0x140737351916006 *)
subb carry rsp rsp 0xc8@uint64;
(* movzbl (%rdi),%edx                              #! EA = L0x40070d; Value = 0x6c5f6e706d675f5f; PC = 0x140737351916013 *)
movzbl %%L0x40070d,%%rdx                              #! L0x40070d = L0x40070d; 0x6c5f6e706d675f5f = 0x6c5f6e706d675f5f; 0x140737351916013 = 0x140737351916013;
(* mov    %rdi,-0xa8(%rbp)                         #! EA = L0x7fffffffc258; PC = 0x140737351916016 *)
mov    %%rdi,-%%L0x7fffffffc258                         #! L0x7fffffffc258 = L0x7fffffffc258; 0x140737351916016 = 0x140737351916016;
(* mov    %rcx,-0xd0(%rbp)                         #! EA = L0x7fffffffc230; PC = 0x140737351916023 *)
mov    %%rcx,-%%L0x7fffffffc230                         #! L0x7fffffffc230 = L0x7fffffffc230; 0x140737351916023 = 0x140737351916023;
(* mov    %r9d,-0xbc(%rbp)                         #! EA = L0x7fffffffc244; PC = 0x140737351916030 *)
mov    %r9d,-%%L0x7fffffffc244                         #! L0x7fffffffc244 = L0x7fffffffc244; 0x140737351916030 = 0x140737351916030;
(* mov    0x18(%rbp),%r13                          #! EA = L0x7fffffffc318; Value = 0x0000000000000000; PC = 0x140737351916037 *)
mov r13 L0x7fffffffc318;
(* test   %dl,%dl                                  #! PC = 0x140737351916041 *)
test   %dl,%dl                                  #! 0x140737351916041 = 0x140737351916041;
(* #je     0x7ffff7de1d00 <_dl_lookup_symbol_x+816>#! PC = 0x140737351916043 *)
#je     0x7ffff7de1d00 <_dl_lookup_symbol_x+816>#! 0x140737351916043 = 0x140737351916043;
(* mov    %rdi,%rcx                                #! PC = 0x140737351916049 *)
mov rcx rdi;
(* mov    $0x1505,%eax                             #! PC = 0x140737351916052 *)
mov rax 0x1505@uint64;
(* nopl   0x0(%rax)                                #! EA = L0x1505; PC = 0x140737351916057 *)
nopl   %%L0x1505                                #! L0x1505 = L0x1505; 0x140737351916057 = 0x140737351916057;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x40070e; Value = 0x736c5f6e706d675f; PC = 0x140737351916081 *)
movzbl %%L0x40070e,%%rdx                              #! L0x40070e = L0x40070e; 0x736c5f6e706d675f = 0x736c5f6e706d675f; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x40070f; Value = 0x68736c5f6e706d67; PC = 0x140737351916081 *)
movzbl %%L0x40070f,%%rdx                              #! L0x40070f = L0x40070f; 0x68736c5f6e706d67 = 0x68736c5f6e706d67; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400710; Value = 0x6968736c5f6e706d; PC = 0x140737351916081 *)
movzbl %%L0x400710,%%rdx                              #! L0x400710 = L0x400710; 0x6968736c5f6e706d = 0x6968736c5f6e706d; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400711; Value = 0x666968736c5f6e70; PC = 0x140737351916081 *)
movzbl %%L0x400711,%%rdx                              #! L0x400711 = L0x400711; 0x666968736c5f6e70 = 0x666968736c5f6e70; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400712; Value = 0x74666968736c5f6e; PC = 0x140737351916081 *)
movzbl %%L0x400712,%%rdx                              #! L0x400712 = L0x400712; 0x74666968736c5f6e = 0x74666968736c5f6e; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400713; Value = 0x0074666968736c5f; PC = 0x140737351916081 *)
movzbl %%L0x400713,%%rdx                              #! L0x400713 = L0x400713; 0x0074666968736c5f = 0x0074666968736c5f; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400714; Value = 0x5f0074666968736c; PC = 0x140737351916081 *)
movzbl %%L0x400714,%%rdx                              #! L0x400714 = L0x400714; 0x5f0074666968736c = 0x5f0074666968736c; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400715; Value = 0x5f5f007466696873; PC = 0x140737351916081 *)
movzbl %%L0x400715,%%rdx                              #! L0x400715 = L0x400715; 0x5f5f007466696873 = 0x5f5f007466696873; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400716; Value = 0x675f5f0074666968; PC = 0x140737351916081 *)
movzbl %%L0x400716,%%rdx                              #! L0x400716 = L0x400716; 0x675f5f0074666968 = 0x675f5f0074666968; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400717; Value = 0x6d675f5f00746669; PC = 0x140737351916081 *)
movzbl %%L0x400717,%%rdx                              #! L0x400717 = L0x400717; 0x6d675f5f00746669 = 0x6d675f5f00746669; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400718; Value = 0x706d675f5f007466; PC = 0x140737351916081 *)
movzbl %%L0x400718,%%rdx                              #! L0x400718 = L0x400718; 0x706d675f5f007466 = 0x706d675f5f007466; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x400719; Value = 0x6e706d675f5f0074; PC = 0x140737351916081 *)
movzbl %%L0x400719,%%rdx                              #! L0x400719 = L0x400719; 0x6e706d675f5f0074 = 0x6e706d675f5f0074; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %rax,%rsi                                #! PC = 0x140737351916064 *)
mov rsi rax;
(* add    $0x1,%rcx                                #! PC = 0x140737351916067 *)
adds carry rcx rcx 0x1;
(* shl    $0x5,%rsi                                #! PC = 0x140737351916071 *)
shl    $0x5,%%rsi                                #! 0x140737351916071 = 0x140737351916071;
(* add    %rsi,%rax                                #! PC = 0x140737351916075 *)
adds carry rax rax rsi;
(* add    %rdx,%rax                                #! PC = 0x140737351916078 *)
adds carry rax rax rdx;
(* movzbl (%rcx),%edx                              #! EA = L0x40071a; Value = 0x5f6e706d675f5f00; PC = 0x140737351916081 *)
movzbl %%L0x40071a,%%rdx                              #! L0x40071a = L0x40071a; 0x5f6e706d675f5f00 = 0x5f6e706d675f5f00; 0x140737351916081 = 0x140737351916081;
(* test   %dl,%dl                                  #! PC = 0x140737351916084 *)
test   %dl,%dl                                  #! 0x140737351916084 = 0x140737351916084;
(* #jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! PC = 0x140737351916086 *)
#jne    0x7ffff7de1a20 <_dl_lookup_symbol_x+80> #! 0x140737351916086 = 0x140737351916086;
(* mov    %eax,%eax                                #! PC = 0x140737351916088 *)
mov rax rax;
(* mov    %rax,-0xb0(%rbp)                         #! EA = L0x7fffffffc250; PC = 0x140737351916090 *)
mov    %%rax,-%%L0x7fffffffc250                         #! L0x7fffffffc250 = L0x7fffffffc250; 0x140737351916090 = 0x140737351916090;
(* mov    $0xffffffff,%eax                         #! PC = 0x140737351916097 *)
mov rax 0xffffffff@uint64;
(* addq   $0x1,0x21bf6a(%rip)        # 0x7ffff7ffd9b8 <_rtld_global+2424>#! EA = L0x7ffff7ffd9b8; PC = 0x140737351916102 *)
addq   $0x1,%%L0x7ffff7ffd9b8        # 0x7ffff7ffd9b8 <_rtld_global+2424>#! L0x7ffff7ffd9b8 = L0x7ffff7ffd9b8; 0x140737351916102 = 0x140737351916102;
(* test   %r12,%r12                                #! PC = 0x140737351916110 *)
test   %%r12,%%r12                                #! 0x140737351916110 = 0x140737351916110;
(* mov    %rax,-0xa0(%rbp)                         #! EA = L0x7fffffffc260; PC = 0x140737351916113 *)
mov    %%rax,-%%L0x7fffffffc260                         #! L0x7fffffffc260 = L0x7fffffffc260; 0x140737351916113 = 0x140737351916113;
(* movq   $0x0,-0x90(%rbp)                         #! EA = L0x7fffffffc270; PC = 0x140737351916120 *)
movq   $0x0,-%%L0x7fffffffc270                         #! L0x7fffffffc270 = L0x7fffffffc270; 0x140737351916120 = 0x140737351916120;
(* movq   $0x0,-0x88(%rbp)                         #! EA = L0x7fffffffc278; PC = 0x140737351916131 *)
movq   $0x0,-%%L0x7fffffffc278                         #! L0x7fffffffc278 = L0x7fffffffc278; 0x140737351916131 = 0x140737351916131;
(* #je     0x7ffff7de1a7d <_dl_lookup_symbol_x+173>#! PC = 0x140737351916142 *)
#je     0x7ffff7de1a7d <_dl_lookup_symbol_x+173>#! 0x140737351916142 = 0x140737351916142;
(* mov    -0xd0(%rbp),%rax                         #! EA = L0x7fffffffc230; Value = 0x00007ffff7ffe4c0; PC = 0x140737351916157 *)
mov    -%%L0x7fffffffc230,%%rax                         #! L0x7fffffffc230 = L0x7fffffffc230; 0x00007ffff7ffe4c0 = 0x00007ffff7ffe4c0; 0x140737351916157 = 0x140737351916157;
(* test   %r13,%r13                                #! PC = 0x140737351916164 *)
test   %%r13,%%r13                                #! 0x140737351916164 = 0x140737351916164;
(* mov    (%rax),%r9                               #! EA = L0x7ffff7ffe4c0; Value = 0x00007ffff7ffe420; PC = 0x140737351916167 *)
mov r9 L0x7ffff7ffe4c0;
(* #jne    0x7ffff7de1cae <_dl_lookup_symbol_x+734>#! PC = 0x140737351916170 *)
#jne    0x7ffff7de1cae <_dl_lookup_symbol_x+734>#! 0x140737351916170 = 0x140737351916170;
(* test   %r9,%r9                                  #! PC = 0x140737351916176 *)
test   %%r9,%%r9                                  #! 0x140737351916176 = 0x140737351916176;
(* movq   $0x0,-0xd8(%rbp)                         #! EA = L0x7fffffffc228; PC = 0x140737351916179 *)
movq   $0x0,-%%L0x7fffffffc228                         #! L0x7fffffffc228 = L0x7fffffffc228; 0x140737351916179 = 0x140737351916179;
(* #je     0x7ffff7de1cd6 <_dl_lookup_symbol_x+774>#! PC = 0x140737351916190 *)
#je     0x7ffff7de1cd6 <_dl_lookup_symbol_x+774>#! 0x140737351916190 = 0x140737351916190;
(* lea    -0x90(%rbp),%rcx                         #! PC = 0x140737351916196 *)
lea    -%%EA,%%rcx                         #! 0x140737351916196 = 0x140737351916196;
(* mov    -0xd8(%rbp),%rax                         #! EA = L0x7fffffffc228; Value = 0x0000000000000000; PC = 0x140737351916203 *)
mov    -%%L0x7fffffffc228,%%rax                         #! L0x7fffffffc228 = L0x7fffffffc228; 0x0000000000000000 = 0x0000000000000000; 0x140737351916203 = 0x140737351916203;
(* mov    -0xd0(%rbp),%rbx                         #! EA = L0x7fffffffc230; Value = 0x00007ffff7ffe4c0; PC = 0x140737351916210 *)
mov    -%%L0x7fffffffc230,%%rbx                         #! L0x7fffffffc230 = L0x7fffffffc230; 0x00007ffff7ffe4c0 = 0x00007ffff7ffe4c0; 0x140737351916210 = 0x140737351916210;
(* mov    %rcx,-0xc8(%rbp)                         #! EA = L0x7fffffffc238; PC = 0x140737351916217 *)
mov    %%rcx,-%%L0x7fffffffc238                         #! L0x7fffffffc238 = L0x7fffffffc238; 0x140737351916217 = 0x140737351916217;
(* lea    -0xa0(%rbp),%rcx                         #! PC = 0x140737351916224 *)
lea    -%%EA,%%rcx                         #! 0x140737351916224 = 0x140737351916224;
(* mov    %rcx,-0xb8(%rbp)                         #! EA = L0x7fffffffc248; PC = 0x140737351916231 *)
mov    %%rcx,-%%L0x7fffffffc248                         #! L0x7fffffffc248 = L0x7fffffffc248; 0x140737351916231 = 0x140737351916231;
(* #jmp    0x7ffff7de1ae9 <_dl_lookup_symbol_x+281>#! PC = 0x140737351916238 *)
#jmp    0x7ffff7de1ae9 <_dl_lookup_symbol_x+281>#! 0x140737351916238 = 0x140737351916238;
(* mov    -0xbc(%rbp),%edi                         #! EA = L0x7fffffffc244; Value = 0xffffc26000000001; PC = 0x140737351916265 *)
mov    -%%L0x7fffffffc244,%%rdi                         #! L0x7fffffffc244 = L0x7fffffffc244; 0xffffc26000000001 = 0xffffc26000000001; 0x140737351916265 = 0x140737351916265;
(* mov    0x10(%rbp),%esi                          #! EA = L0x7fffffffc310; Value = 0x0000000000000001; PC = 0x140737351916271 *)
mov rsi L0x7fffffffc310;
(* push   %r14                                     #! PC = 0x140737351916274 *)
push r14;
(* mov    -0xc8(%rbp),%r8                          #! EA = L0x7fffffffc238; Value = 0x00007fffffffc270; PC = 0x140737351916276 *)
mov    -%%L0x7fffffffc238,%%r8                          #! L0x7fffffffc238 = L0x7fffffffc238; 0x00007fffffffc270 = 0x00007fffffffc270; 0x140737351916276 = 0x140737351916276;
(* mov    (%r15),%rcx                              #! EA = L0x7fffffffc328; Value = 0x0000000000400420; PC = 0x140737351916283 *)
mov rcx L0x7fffffffc328;
(* mov    -0xb8(%rbp),%rdx                         #! EA = L0x7fffffffc248; Value = 0x00007fffffffc260; PC = 0x140737351916286 *)
mov    -%%L0x7fffffffc248,%%rdx                         #! L0x7fffffffc248 = L0x7fffffffc248; 0x00007fffffffc260 = 0x00007fffffffc260; 0x140737351916286 = 0x140737351916286;
(* push   %rdi                                     #! PC = 0x140737351916293 *)
push rdi;
(* mov    -0xa8(%rbp),%rdi                         #! EA = L0x7fffffffc258; Value = 0x000000000040070d; PC = 0x140737351916294 *)
mov    -%%L0x7fffffffc258,%%rdi                         #! L0x7fffffffc258 = L0x7fffffffc258; 0x000000000040070d = 0x000000000040070d; 0x140737351916294 = 0x140737351916294;
(* push   %r13                                     #! PC = 0x140737351916301 *)
push r13;
(* push   %rsi                                     #! PC = 0x140737351916303 *)
push rsi;
(* mov    -0xb0(%rbp),%rsi                         #! EA = L0x7fffffffc250; Value = 0x000000007c3ca97e; PC = 0x140737351916304 *)
mov    -%%L0x7fffffffc250,%%rsi                         #! L0x7fffffffc250 = L0x7fffffffc250; 0x000000007c3ca97e = 0x000000007c3ca97e; 0x140737351916304 = 0x140737351916304;
(* push   %r12                                     #! PC = 0x140737351916311 *)
push r12;
(* push   %rax                                     #! PC = 0x140737351916313 *)
push rax;
(* #callq  0x7ffff7de0e70 <do_lookup_x>            #! PC = 0x140737351916314 *)
#callq  0x7ffff7de0e70 <do_lookup_x>            #! 0x140737351916314 = 0x140737351916314;
(* push   %r15                                     #! PC = 0x140737351913072 *)
push r15;
(* push   %r14                                     #! PC = 0x140737351913074 *)
push r14;
(* push   %r13                                     #! PC = 0x140737351913076 *)
push r13;
(* push   %r12                                     #! PC = 0x140737351913078 *)
push r12;
(* push   %rbp                                     #! PC = 0x140737351913080 *)
push rbp;
(* push   %rbx                                     #! PC = 0x140737351913081 *)
push rbx;
(* sub    $0x98,%rsp                               #! PC = 0x140737351913082 *)
subb carry rsp rsp 0x98@uint64;
(* mov    0x8(%r9),%r12d                           #! EA = L0x7ffff7ffe428; Value = 0x0000000000000004; PC = 0x140737351913089 *)
mov    %%L0x7ffff7ffe428,%r12d                           #! L0x7ffff7ffe428 = L0x7ffff7ffe428; 0x0000000000000004 = 0x0000000000000004; 0x140737351913089 = 0x140737351913089;
(* mov    %rdi,0x8(%rsp)                           #! EA = L0x7fffffffc118; PC = 0x140737351913093 *)
mov L0x7fffffffc118 rdi;
(* mov    %rdx,0x58(%rsp)                          #! EA = L0x7fffffffc168; PC = 0x140737351913098 *)
mov L0x7fffffffc168 rdx;
(* mov    %rcx,0x10(%rsp)                          #! EA = L0x7fffffffc120; PC = 0x140737351913103 *)
mov L0x7fffffffc120 rcx;
(* mov    %r8,0x38(%rsp)                           #! EA = L0x7fffffffc148; PC = 0x140737351913108 *)
mov L0x7fffffffc148 r8;
(* mov    0xd0(%rsp),%rbp                          #! EA = L0x7fffffffc1e0; Value = 0x0000000000000000; PC = 0x140737351913113 *)
mov rbp L0x7fffffffc1e0;
(* mov    %rsi,%rax                                #! PC = 0x140737351913121 *)
mov rax rsi;
(* mov    0xf0(%rsp),%r15d                         #! EA = L0x7fffffffc200; Value = 0x0000000000000001; PC = 0x140737351913124 *)
mov    %%L0x7fffffffc200,%r15d                         #! L0x7fffffffc200 = L0x7fffffffc200; 0x0000000000000001 = 0x0000000000000001; 0x140737351913124 = 0x140737351913124;
(* mov    (%r9),%r14                               #! EA = L0x7ffff7ffe420; Value = 0x00007ffff7ff6a28; PC = 0x140737351913132 *)
mov r14 L0x7ffff7ffe420;
(* shr    $0x6,%rax                                #! PC = 0x140737351913135 *)
shr    $0x6,%%rax                                #! 0x140737351913135 = 0x140737351913135;
(* mov    0xe8(%rsp),%r13                          #! EA = L0x7fffffffc1f8; Value = 0x0000000000000000; PC = 0x140737351913139 *)
mov r13 L0x7fffffffc1f8;
(* mov    %rsi,0x20(%rsp)                          #! EA = L0x7fffffffc130; PC = 0x140737351913147 *)
mov L0x7fffffffc130 rsi;
(* mov    %rax,0x28(%rsp)                          #! EA = L0x7fffffffc138; PC = 0x140737351913152 *)
mov L0x7fffffffc138 rax;
(* lea    0x84(%rsp),%rax                          #! PC = 0x140737351913157 *)
lea    %%EA,%%rax                          #! 0x140737351913157 = 0x140737351913157;
(* and    $0x2,%r15d                               #! PC = 0x140737351913165 *)
and    $0x2,%r15d                               #! 0x140737351913165 = 0x140737351913165;
(* mov    %rax,0x50(%rsp)                          #! EA = L0x7fffffffc160; PC = 0x140737351913169 *)
mov L0x7fffffffc160 rax;
(* lea    0x88(%rsp),%rax                          #! PC = 0x140737351913174 *)
lea    %%EA,%%rax                          #! 0x140737351913174 = 0x140737351913174;
(* mov    %rax,0x18(%rsp)                          #! EA = L0x7fffffffc128; PC = 0x140737351913182 *)
mov L0x7fffffffc128 rax;
(* mov    %esi,%eax                                #! PC = 0x140737351913187 *)
mov rax rsi;
(* and    $0x3f,%eax                               #! PC = 0x140737351913189 *)
and    $0x3f,%%rax                               #! 0x140737351913189 = 0x140737351913189;
(* mov    %eax,0x30(%rsp)                          #! EA = L0x7fffffffc140; PC = 0x140737351913192 *)
mov L0x7fffffffc140 rax;
(* nopl   0x0(%rax)                                #! EA = L0x3e; PC = 0x140737351913196 *)
nopl   %%L0x3e                                #! L0x3e = L0x3e; 0x140737351913196 = 0x140737351913196;
(* mov    (%r14,%rbp,8),%rax                       #! EA = L0x7ffff7ff6a28; Value = 0x00007ffff7ffe168; PC = 0x140737351913200 *)
mov    (%%r14,%%rbp,8),%%rax                       #! L0x7ffff7ff6a28 = L0x7ffff7ff6a28; 0x00007ffff7ffe168 = 0x00007ffff7ffe168; 0x140737351913200 = 0x140737351913200;
(* mov    0x28(%rax),%rbx                          #! EA = L0x7ffff7ffe190; Value = 0x00007ffff7ffe168; PC = 0x140737351913204 *)
mov rbx L0x7ffff7ffe190;
(* cmp    %r13,%rbx                                #! PC = 0x140737351913208 *)
cmp    %%r13,%%rbx                                #! 0x140737351913208 = 0x140737351913208;
(* #je     0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913211 *)
#je     0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913211 = 0x140737351913211;
(* test   %r15d,%r15d                              #! PC = 0x140737351913217 *)
test   %r15d,%r15d                              #! 0x140737351913217 = 0x140737351913217;
(* #je     0x7ffff7de0f13 <do_lookup_x+163>        #! PC = 0x140737351913220 *)
#je     0x7ffff7de0f13 <do_lookup_x+163>        #! 0x140737351913220 = 0x140737351913220;
(* testb  $0x20,0x315(%rbx)                        #! EA = L0x7ffff7ffe47d; PC = 0x140737351913235 *)
testb  $0x20,%%L0x7ffff7ffe47d                        #! L0x7ffff7ffe47d = L0x7ffff7ffe47d; 0x140737351913235 = 0x140737351913235;
(* #jne    0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913242 *)
#jne    0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913242 = 0x140737351913242;
(* testb  $0x8,0x21bd79(%rip)        # 0x7ffff7ffcca0 <_rtld_global_ro>#! EA = L0x7ffff7ffcca0; PC = 0x140737351913248 *)
testb  $0x8,%%L0x7ffff7ffcca0        # 0x7ffff7ffcca0 <_rtld_global_ro>#! L0x7ffff7ffcca0 = L0x7ffff7ffcca0; 0x140737351913248 = 0x140737351913248;
(* #jne    0x7ffff7de1018 <do_lookup_x+424>        #! PC = 0x140737351913255 *)
#jne    0x7ffff7de1018 <do_lookup_x+424>        #! 0x140737351913255 = 0x140737351913255;
(* mov    0x2ec(%rbx),%edx                         #! EA = L0x7ffff7ffe454; Value = 0x0000000000000003; PC = 0x140737351913261 *)
mov rdx L0x7ffff7ffe454;
(* test   %edx,%edx                                #! PC = 0x140737351913267 *)
test   %%rdx,%%rdx                                #! 0x140737351913267 = 0x140737351913267;
(* #je     0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913269 *)
#je     0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913269 = 0x140737351913269;
(* mov    0x70(%rbx),%rax                          #! EA = L0x7ffff7ffe1d8; Value = 0x000000000046beb8; PC = 0x140737351913275 *)
mov rax L0x7ffff7ffe1d8;
(* movl   $0x0,0x84(%rsp)                          #! EA = L0x7fffffffc194; PC = 0x140737351913279 *)
movl   $0x0,%%L0x7fffffffc194                          #! L0x7fffffffc194 = L0x7fffffffc194; 0x140737351913279 = 0x140737351913279;
(* movq   $0x0,0x88(%rsp)                          #! EA = L0x7fffffffc198; PC = 0x140737351913290 *)
movq   $0x0,%%L0x7fffffffc198                          #! L0x7fffffffc198 = L0x7fffffffc198; 0x140737351913290 = 0x140737351913290;
(* mov    0x8(%rax),%rax                           #! EA = L0x46bec0; Value = 0x00000000004003f0; PC = 0x140737351913302 *)
mov rax L0x46bec0;
(* mov    %rax,0x48(%rsp)                          #! EA = L0x7fffffffc158; PC = 0x140737351913306 *)
mov L0x7fffffffc158 rax;
(* mov    0x68(%rbx),%rax                          #! EA = L0x7ffff7ffe1d0; Value = 0x000000000046bea8; PC = 0x140737351913311 *)
mov rax L0x7ffff7ffe1d0;
(* mov    0x8(%rax),%rax                           #! EA = L0x46beb0; Value = 0x00000000004006a8; PC = 0x140737351913315 *)
mov rax L0x46beb0;
(* mov    %rax,0x40(%rsp)                          #! EA = L0x7fffffffc150; PC = 0x140737351913319 *)
mov L0x7fffffffc150 rax;
(* mov    0x2f8(%rbx),%rax                         #! EA = L0x7ffff7ffe460; Value = 0x00000000004003c0; PC = 0x140737351913324 *)
mov rax L0x7ffff7ffe460;
(* test   %rax,%rax                                #! PC = 0x140737351913331 *)
test   %%rax,%%rax                                #! 0x140737351913331 = 0x140737351913331;
(* #je     0x7ffff7de1060 <do_lookup_x+496>        #! PC = 0x140737351913334 *)
#je     0x7ffff7de1060 <do_lookup_x+496>        #! 0x140737351913334 = 0x140737351913334;
(* mov    0x28(%rsp),%ecx                          #! EA = L0x7fffffffc138; Value = 0x0000000001f0f2a5; PC = 0x140737351913340 *)
mov rcx L0x7fffffffc138;
(* and    0x2f0(%rbx),%ecx                         #! EA = L0x7ffff7ffe458; Value = 0x0000000600000000; PC = 0x140737351913344 *)
and rcx L0x7ffff7ffe458;
(* mov    0x20(%rsp),%rsi                          #! EA = L0x7fffffffc130; Value = 0x000000007c3ca97e; PC = 0x140737351913350 *)
mov rsi L0x7fffffffc130;
(* mov    (%rax,%rcx,8),%rax                       #! EA = L0x4003c0; Value = 0x095005000120c088; PC = 0x140737351913355 *)
mov    (%%rax,%%rcx,8),%%rax                       #! L0x4003c0 = L0x4003c0; 0x095005000120c088 = 0x095005000120c088; 0x140737351913355 = 0x140737351913355;
(* mov    0x2f4(%rbx),%ecx                         #! EA = L0x7ffff7ffe45c; Value = 0x004003c000000006; PC = 0x140737351913359 *)
mov rcx L0x7ffff7ffe45c;
(* shr    %cl,%rsi                                 #! PC = 0x140737351913365 *)
shr    %cl,%%rsi                                 #! 0x140737351913365 = 0x140737351913365;
(* mov    %rsi,%rcx                                #! PC = 0x140737351913368 *)
mov rcx rsi;
(* mov    %rax,%rsi                                #! PC = 0x140737351913371 *)
mov rsi rax;
(* shr    %cl,%rsi                                 #! PC = 0x140737351913374 *)
shr    %cl,%%rsi                                 #! 0x140737351913374 = 0x140737351913374;
(* movzbl 0x30(%rsp),%ecx                          #! EA = L0x7fffffffc140; Value = 0x00007fff0000003e; PC = 0x140737351913377 *)
movzbl %%L0x7fffffffc140,%%rcx                          #! L0x7fffffffc140 = L0x7fffffffc140; 0x00007fff0000003e = 0x00007fff0000003e; 0x140737351913377 = 0x140737351913377;
(* shr    %cl,%rax                                 #! PC = 0x140737351913382 *)
shr    %cl,%%rax                                 #! 0x140737351913382 = 0x140737351913382;
(* and    %rsi,%rax                                #! PC = 0x140737351913385 *)
and rax rsi;
(* test   $0x1,%al                                 #! PC = 0x140737351913388 *)
test   $0x1,%al                                 #! 0x140737351913388 = 0x140737351913388;
(* #jne    0x7ffff7de1578 <do_lookup_x+1800>       #! PC = 0x140737351913390 *)
#jne    0x7ffff7de1578 <do_lookup_x+1800>       #! 0x140737351913390 = 0x140737351913390;
(* mov    $0x1,%eax                                #! PC = 0x140737351913396 *)
mov rax 0x1@uint64;
(* cmpq   $0x0,0xd8(%rsp)                          #! EA = L0x7fffffffc1e8; PC = 0x140737351913401 *)
cmpq   $0x0,%%L0x7fffffffc1e8                          #! L0x7fffffffc1e8 = L0x7fffffffc1e8; 0x140737351913401 = 0x140737351913401;
(* #je     0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913410 *)
#je     0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913410 = 0x140737351913410;
(* add    $0x1,%rbp                                #! PC = 0x140737351913456 *)
adds carry rbp rbp 0x1;
(* cmp    %rbp,%r12                                #! PC = 0x140737351913460 *)
cmp    %%rbp,%%r12                                #! 0x140737351913460 = 0x140737351913460;
(* #ja     0x7ffff7de0ef0 <do_lookup_x+128>        #! PC = 0x140737351913463 *)
#ja     0x7ffff7de0ef0 <do_lookup_x+128>        #! 0x140737351913463 = 0x140737351913463;
(* mov    (%r14,%rbp,8),%rax                       #! EA = L0x7ffff7ff6a30; Value = 0x00007ffff7ff6000; PC = 0x140737351913200 *)
mov    (%%r14,%%rbp,8),%%rax                       #! L0x7ffff7ff6a30 = L0x7ffff7ff6a30; 0x00007ffff7ff6000 = 0x00007ffff7ff6000; 0x140737351913200 = 0x140737351913200;
(* mov    0x28(%rax),%rbx                          #! EA = L0x7ffff7ff6028; Value = 0x00007ffff7ff6000; PC = 0x140737351913204 *)
mov rbx L0x7ffff7ff6028;
(* cmp    %r13,%rbx                                #! PC = 0x140737351913208 *)
cmp    %%r13,%%rbx                                #! 0x140737351913208 = 0x140737351913208;
(* #je     0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913211 *)
#je     0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913211 = 0x140737351913211;
(* test   %r15d,%r15d                              #! PC = 0x140737351913217 *)
test   %r15d,%r15d                              #! 0x140737351913217 = 0x140737351913217;
(* #je     0x7ffff7de0f13 <do_lookup_x+163>        #! PC = 0x140737351913220 *)
#je     0x7ffff7de0f13 <do_lookup_x+163>        #! 0x140737351913220 = 0x140737351913220;
(* testb  $0x20,0x315(%rbx)                        #! EA = L0x7ffff7ff6315; PC = 0x140737351913235 *)
testb  $0x20,%%L0x7ffff7ff6315                        #! L0x7ffff7ff6315 = L0x7ffff7ff6315; 0x140737351913235 = 0x140737351913235;
(* #jne    0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913242 *)
#jne    0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913242 = 0x140737351913242;
(* testb  $0x8,0x21bd79(%rip)        # 0x7ffff7ffcca0 <_rtld_global_ro>#! EA = L0x7ffff7ffcca0; PC = 0x140737351913248 *)
testb  $0x8,%%L0x7ffff7ffcca0        # 0x7ffff7ffcca0 <_rtld_global_ro>#! L0x7ffff7ffcca0 = L0x7ffff7ffcca0; 0x140737351913248 = 0x140737351913248;
(* #jne    0x7ffff7de1018 <do_lookup_x+424>        #! PC = 0x140737351913255 *)
#jne    0x7ffff7de1018 <do_lookup_x+424>        #! 0x140737351913255 = 0x140737351913255;
(* mov    0x2ec(%rbx),%edx                         #! EA = L0x7ffff7ff62ec; Value = 0x0000003f00000209; PC = 0x140737351913261 *)
mov rdx L0x7ffff7ff62ec;
(* test   %edx,%edx                                #! PC = 0x140737351913267 *)
test   %%rdx,%%rdx                                #! 0x140737351913267 = 0x140737351913267;
(* #je     0x7ffff7de0ff0 <do_lookup_x+384>        #! PC = 0x140737351913269 *)
#je     0x7ffff7de0ff0 <do_lookup_x+384>        #! 0x140737351913269 = 0x140737351913269;
(* mov    0x70(%rbx),%rax                          #! EA = L0x7ffff7ff6070; Value = 0x00007ffff7dd0d90; PC = 0x140737351913275 *)
mov rax L0x7ffff7ff6070;
(* movl   $0x0,0x84(%rsp)                          #! EA = L0x7fffffffc194; PC = 0x140737351913279 *)
movl   $0x0,%%L0x7fffffffc194                          #! L0x7fffffffc194 = L0x7fffffffc194; 0x140737351913279 = 0x140737351913279;
(* movq   $0x0,0x88(%rsp)                          #! EA = L0x7fffffffc198; PC = 0x140737351913290 *)
movq   $0x0,%%L0x7fffffffc198                          #! L0x7fffffffc198 = L0x7fffffffc198; 0x140737351913290 = 0x140737351913290;
(* mov    0x8(%rax),%rax                           #! EA = L0x7ffff7dd0d98; Value = 0x00007ffff7b595e8; PC = 0x140737351913302 *)
mov rax L0x7ffff7dd0d98;
(* mov    %rax,0x48(%rsp)                          #! EA = L0x7fffffffc158; PC = 0x140737351913306 *)
mov L0x7fffffffc158 rax;
(* mov    0x68(%rbx),%rax                          #! EA = L0x7ffff7ff6068; Value = 0x00007ffff7dd0d80; PC = 0x140737351913311 *)
mov rax L0x7ffff7ff6068;
(* mov    0x8(%rax),%rax                           #! EA = L0x7ffff7dd0d88; Value = 0x00007ffff7dd2000; PC = 0x140737351913315 *)
mov rax L0x7ffff7dd0d88;
(* mov    %rax,0x40(%rsp)                          #! EA = L0x7fffffffc150; PC = 0x140737351913319 *)
mov L0x7fffffffc150 rax;
(* mov    0x2f8(%rbx),%rax                         #! EA = L0x7ffff7ff62f8; Value = 0x00007ffff7dd4bf8; PC = 0x140737351913324 *)
mov rax L0x7ffff7ff62f8;
(* test   %rax,%rax                                #! PC = 0x140737351913331 *)
test   %%rax,%%rax                                #! 0x140737351913331 = 0x140737351913331;
(* #je     0x7ffff7de1060 <do_lookup_x+496>        #! PC = 0x140737351913334 *)
#je     0x7ffff7de1060 <do_lookup_x+496>        #! 0x140737351913334 = 0x140737351913334;
(* mov    0x28(%rsp),%ecx                          #! EA = L0x7fffffffc138; Value = 0x0000000001f0f2a5; PC = 0x140737351913340 *)
mov rcx L0x7fffffffc138;
(* and    0x2f0(%rbx),%ecx                         #! EA = L0x7ffff7ff62f0; Value = 0x0000000c0000003f; PC = 0x140737351913344 *)
and rcx L0x7ffff7ff62f0;
(* mov    0x20(%rsp),%rsi                          #! EA = L0x7fffffffc130; Value = 0x000000007c3ca97e; PC = 0x140737351913350 *)
mov rsi L0x7fffffffc130;
(* mov    (%rax,%rcx,8),%rax                       #! EA = L0x7ffff7dd4d20; Value = 0x443468218b1a4e05; PC = 0x140737351913355 *)
mov    (%%rax,%%rcx,8),%%rax                       #! L0x7ffff7dd4d20 = L0x7ffff7dd4d20; 0x443468218b1a4e05 = 0x443468218b1a4e05; 0x140737351913355 = 0x140737351913355;
(* mov    0x2f4(%rbx),%ecx                         #! EA = L0x7ffff7ff62f4; Value = 0xf7dd4bf80000000c; PC = 0x140737351913359 *)
mov rcx L0x7ffff7ff62f4;
(* shr    %cl,%rsi                                 #! PC = 0x140737351913365 *)
shr    %cl,%%rsi                                 #! 0x140737351913365 = 0x140737351913365;
(* mov    %rsi,%rcx                                #! PC = 0x140737351913368 *)
mov rcx rsi;
(* mov    %rax,%rsi                                #! PC = 0x140737351913371 *)
mov rsi rax;
(* shr    %cl,%rsi                                 #! PC = 0x140737351913374 *)
shr    %cl,%%rsi                                 #! 0x140737351913374 = 0x140737351913374;
(* movzbl 0x30(%rsp),%ecx                          #! EA = L0x7fffffffc140; Value = 0x00007fff0000003e; PC = 0x140737351913377 *)
movzbl %%L0x7fffffffc140,%%rcx                          #! L0x7fffffffc140 = L0x7fffffffc140; 0x00007fff0000003e = 0x00007fff0000003e; 0x140737351913377 = 0x140737351913377;
(* shr    %cl,%rax                                 #! PC = 0x140737351913382 *)
shr    %cl,%%rax                                 #! 0x140737351913382 = 0x140737351913382;
(* and    %rsi,%rax                                #! PC = 0x140737351913385 *)
and rax rsi;
(* test   $0x1,%al                                 #! PC = 0x140737351913388 *)
test   $0x1,%al                                 #! 0x140737351913388 = 0x140737351913388;
(* #jne    0x7ffff7de1578 <do_lookup_x+1800>       #! PC = 0x140737351913390 *)
#jne    0x7ffff7de1578 <do_lookup_x+1800>       #! 0x140737351913390 = 0x140737351913390;
(* mov    0x20(%rsp),%rax                          #! EA = L0x7fffffffc130; Value = 0x000000007c3ca97e; PC = 0x140737351914872 *)
mov rax L0x7fffffffc130;
(* mov    %edx,%ecx                                #! PC = 0x140737351914877 *)
mov rcx rdx;
(* xor    %edx,%edx                                #! PC = 0x140737351914879 *)
mov rdx 0@uint64;
(* div    %rcx                                     #! PC = 0x140737351914881 *)
div    %%rcx                                     #! 0x140737351914881 = 0x140737351914881;
(* mov    0x300(%rbx),%rax                         #! EA = L0x7ffff7ff6300; Value = 0x00007ffff7dd4df8; PC = 0x140737351914884 *)
mov rax L0x7ffff7ff6300;
(* mov    (%rax,%rdx,4),%eax                       #! EA = L0x7ffff7dd5170; Value = 0x0000014400000143; PC = 0x140737351914891 *)
mov    (%%rax,%%rdx,4),%%rax                       #! L0x7ffff7dd5170 = L0x7ffff7dd5170; 0x0000014400000143 = 0x0000014400000143; 0x140737351914891 = 0x140737351914891;
(* test   %eax,%eax                                #! PC = 0x140737351914894 *)
test   %%rax,%%rax                                #! 0x140737351914894 = 0x140737351914894;
(* #je     0x7ffff7de0fb4 <do_lookup_x+324>        #! PC = 0x140737351914896 *)
#je     0x7ffff7de0fb4 <do_lookup_x+324>        #! 0x140737351914896 = 0x140737351914896;
(* mov    0x308(%rbx),%rdx                         #! EA = L0x7ffff7ff6308; Value = 0x00007ffff7dd556c; PC = 0x140737351914902 *)
mov rdx L0x7ffff7ff6308;
(* mov    %r14,0x60(%rsp)                          #! EA = L0x7fffffffc170; PC = 0x140737351914909 *)
mov L0x7fffffffc170 r14;
(* mov    %r15d,0x68(%rsp)                         #! EA = L0x7fffffffc178; PC = 0x140737351914914 *)
mov    %r15d,%%L0x7fffffffc178                         #! L0x7fffffffc178 = L0x7fffffffc178; 0x140737351914914 = 0x140737351914914;
(* mov    %rbp,0xd0(%rsp)                          #! EA = L0x7fffffffc1e0; PC = 0x140737351914919 *)
mov L0x7fffffffc1e0 rbp;
(* mov    %rbx,%rbp                                #! PC = 0x140737351914927 *)
mov rbp rbx;
(* mov    %r13,0xe8(%rsp)                          #! EA = L0x7fffffffc1f8; PC = 0x140737351914930 *)
mov L0x7fffffffc1f8 r13;
(* mov    %r12,0x70(%rsp)                          #! EA = L0x7fffffffc180; PC = 0x140737351914938 *)
mov L0x7fffffffc180 r12;
(* lea    (%rdx,%rax,4),%r11                       #! PC = 0x140737351914943 *)
lea    (%%rdx,%%rax,4),%%r11                       #! 0x140737351914943 = 0x140737351914943;
(* mov    0x20(%rsp),%r15                          #! EA = L0x7fffffffc130; Value = 0x000000007c3ca97e; PC = 0x140737351914947 *)
mov r15 L0x7fffffffc130;
(* mov    0x40(%rsp),%r13                          #! EA = L0x7fffffffc150; Value = 0x00007ffff7dd2000; PC = 0x140737351914952 *)
mov r13 L0x7fffffffc150;
(* mov    0x48(%rsp),%r12                          #! EA = L0x7fffffffc158; Value = 0x00007ffff7b595e8; PC = 0x140737351914957 *)
mov r12 L0x7fffffffc158;
(* mov    %r11,%r14                                #! PC = 0x140737351914962 *)
mov r14 r11;
(* #jmp    0x7ffff7de15ed <do_lookup_x+1917>       #! PC = 0x140737351914965 *)
#jmp    0x7ffff7de15ed <do_lookup_x+1917>       #! 0x140737351914965 = 0x140737351914965;
(* mov    (%r14),%eax                              #! EA = L0x7ffff7dd5a78; Value = 0x4b1003277c3ca97f; PC = 0x140737351914989 *)
mov rax L0x7ffff7dd5a78;
(* mov    %rax,%rdx                                #! PC = 0x140737351914992 *)
mov rdx rax;
(* xor    %r15,%rax                                #! PC = 0x140737351914995 *)
xor    %%r15,%%rax                                #! 0x140737351914995 = 0x140737351914995;
(* shr    %rax                                     #! PC = 0x140737351914998 *)
shr    %%rax                                     #! 0x140737351914998 = 0x140737351914998;
(* #jne    0x7ffff7de15e0 <do_lookup_x+1904>       #! PC = 0x140737351915001 *)
#jne    0x7ffff7de15e0 <do_lookup_x+1904>       #! 0x140737351915001 = 0x140737351915001;
(* mov    %r14,%rax                                #! PC = 0x140737351915003 *)
mov rax r14;
(* sub    0x308(%rbp),%rax                         #! EA = L0x7ffff7ff6308; Value = 0x00007ffff7dd556c; PC = 0x140737351915006 *)
subb carry rax rax L0x7ffff7ff6308;
(* sub    $0x8,%rsp                                #! PC = 0x140737351915013 *)
subb carry rsp rsp 0x8@uint64;
(* pushq  0x58(%rsp)                               #! EA = L0x7fffffffc160; PC = 0x140737351915017 *)
pushq  %%L0x7fffffffc160                               #! L0x7fffffffc160 = L0x7fffffffc160; 0x140737351915017 = 0x140737351915017;
(* pushq  0x28(%rsp)                               #! EA = L0x7fffffffc128; PC = 0x140737351915021 *)
pushq  %%L0x7fffffffc128                               #! L0x7fffffffc128 = L0x7fffffffc128; 0x140737351915021 = 0x140737351915021;
(* push   %rbp                                     #! PC = 0x140737351915025 *)
push rbp;
(* push   %r13                                     #! PC = 0x140737351915026 *)
push r13;
(* sar    $0x2,%rax                                #! PC = 0x140737351915028 *)
sar    $0x2,%%rax                                #! 0x140737351915028 = 0x140737351915028;
(* mov    %eax,%edx                                #! PC = 0x140737351915032 *)
mov rdx rax;
(* push   %rax                                     #! PC = 0x140737351915034 *)
push rax;
(* mov    0x120(%rsp),%r8d                         #! EA = L0x7fffffffc200; Value = 0x0000000000000001; PC = 0x140737351915035 *)
mov    %%L0x7fffffffc200,%r8d                         #! L0x7fffffffc200 = L0x7fffffffc200; 0x0000000000000001 = 0x0000000000000001; 0x140737351915035 = 0x140737351915035;
(* lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x140737351915043 *)
lea    (%%rdx,%%rdx,2),%%rdx                       #! 0x140737351915043 = 0x140737351915043;
(* mov    0x110(%rsp),%ecx                         #! EA = L0x7fffffffc1f0; Value = 0x0000000000000001; PC = 0x140737351915047 *)
mov rcx L0x7fffffffc1f0;
(* mov    0x40(%rsp),%rsi                          #! EA = L0x7fffffffc120; Value = 0x0000000000400420; PC = 0x140737351915054 *)
mov rsi L0x7fffffffc120;
(* mov    0x38(%rsp),%rdi                          #! EA = L0x7fffffffc118; Value = 0x000000000040070d; PC = 0x140737351915059 *)
mov rdi L0x7fffffffc118;
(* mov    %eax,%ebx                                #! PC = 0x140737351915064 *)
mov rbx rax;
(* lea    (%r12,%rdx,8),%r9                        #! PC = 0x140737351915066 *)
lea    (%%r12,%%rdx,8),%%r9                        #! 0x140737351915066 = 0x140737351915066;
(* mov    0x108(%rsp),%rdx                         #! EA = L0x7fffffffc1e8; Value = 0x0000000000000000; PC = 0x140737351915070 *)
mov rdx L0x7fffffffc1e8;
(* #callq  0x7ffff7de0cd0 <check_match>            #! PC = 0x140737351915078 *)
#callq  0x7ffff7de0cd0 <check_match>            #! 0x140737351915078 = 0x140737351915078;
(* push   %r13                                     #! PC = 0x140737351912656 *)
push r13;
(* push   %r12                                     #! PC = 0x140737351912658 *)
push r12;
(* push   %rbp                                     #! PC = 0x140737351912660 *)
push rbp;
(* push   %rbx                                     #! PC = 0x140737351912661 *)
push rbx;
(* sub    $0x8,%rsp                                #! PC = 0x140737351912662 *)
subb carry rsp rsp 0x8@uint64;
(* movzbl 0x4(%r9),%eax                            #! EA = L0x7ffff7b5b434; Value = 0x0002943000090012; PC = 0x140737351912666 *)
movzbl %%L0x7ffff7b5b434,%%rax                            #! L0x7ffff7b5b434 = L0x7ffff7b5b434; 0x0002943000090012 = 0x0002943000090012; 0x140737351912666 = 0x140737351912666;
(* mov    0x40(%rsp),%r12                          #! EA = L0x7fffffffc0f0; Value = 0x00007ffff7ff6000; PC = 0x140737351912671 *)
mov r12 L0x7fffffffc0f0;
(* and    $0xf,%eax                                #! PC = 0x140737351912676 *)
and    $0xf,%%rax                                #! 0x140737351912676 = 0x140737351912676;
(* cmpq   $0x0,0x8(%r9)                            #! EA = L0x7ffff7b5b438; PC = 0x140737351912679 *)
cmpq   $0x0,%%L0x7ffff7b5b438                            #! L0x7ffff7b5b438 = L0x7ffff7b5b438; 0x140737351912679 = 0x140737351912679;
(* #jne    0x7ffff7de0cf6 <check_match+38>         #! PC = 0x140737351912684 *)
#jne    0x7ffff7de0cf6 <check_match+38>         #! 0x140737351912684 = 0x140737351912684;
(* xor    %r10d,%r10d                              #! PC = 0x140737351912694 *)
xor    %r10d,%r10d                              #! 0x140737351912694 = 0x140737351912694;
(* cmpw   $0x0,0x6(%r9)                            #! EA = L0x7ffff7b5b436; PC = 0x140737351912697 *)
cmpw   $0x0,%%L0x7ffff7b5b436                            #! L0x7ffff7b5b436 = L0x7ffff7b5b436; 0x140737351912697 = 0x140737351912697;
(* sete   %r10b                                    #! PC = 0x140737351912703 *)
sete   %r10b                                    #! 0x140737351912703 = 0x140737351912703;
(* test   %r8d,%r10d                               #! PC = 0x140737351912707 *)
test   %r8d,%r10d                               #! 0x140737351912707 = 0x140737351912707;
(* #jne    0x7ffff7de0df7 <check_match+295>        #! PC = 0x140737351912710 *)
#jne    0x7ffff7de0df7 <check_match+295>        #! 0x140737351912710 = 0x140737351912710;
(* mov    $0x467,%r8d                              #! PC = 0x140737351912716 *)
mov    $0x467,%r8d                              #! 0x140737351912716 = 0x140737351912716;
(* bt     %eax,%r8d                                #! PC = 0x140737351912722 *)
bt     %%rax,%r8d                                #! 0x140737351912722 = 0x140737351912722;
(* #jae    0x7ffff7de0df7 <check_match+295>        #! PC = 0x140737351912726 *)
#jae    0x7ffff7de0df7 <check_match+295>        #! 0x140737351912726 = 0x140737351912726;
(* mov    %rsi,%rax                                #! PC = 0x140737351912732 *)
mov rax rsi;
(* mov    %r9,%rbx                                 #! PC = 0x140737351912735 *)
mov rbx r9;
(* mov    %ecx,%r13d                               #! PC = 0x140737351912738 *)
mov    %%rcx,%r13d                               #! 0x140737351912738 = 0x140737351912738;
(* cmp    %rax,%r9                                 #! PC = 0x140737351912741 *)
cmp    %%rax,%%r9                                 #! 0x140737351912741 = 0x140737351912741;
(* mov    %rdx,%rbp                                #! PC = 0x140737351912744 *)
mov rbp rdx;
(* mov    %rdi,%rsi                                #! PC = 0x140737351912747 *)
mov rsi rdi;
(* #je     0x7ffff7de0d48 <check_match+120>        #! PC = 0x140737351912750 *)
#je     0x7ffff7de0d48 <check_match+120>        #! 0x140737351912750 = 0x140737351912750;
(* mov    (%r9),%eax                               #! EA = L0x7ffff7b5b430; Value = 0x0009001200000421; PC = 0x140737351912752 *)
mov rax L0x7ffff7b5b430;
(* add    0x38(%rsp),%rax                          #! EA = L0x7fffffffc0e8; Value = 0x00007ffff7dd2000; PC = 0x140737351912755 *)
adds carry rax rax L0x7fffffffc0e8;
(* mov    %rax,%rdi                                #! PC = 0x140737351912760 *)
mov rdi rax;
(* #callq  0x7ffff7df2a80 <strcmp>                 #! PC = 0x140737351912763 *)
#callq  0x7ffff7df2a80 <strcmp>                 #! 0x140737351912763 = 0x140737351912763;
(* mov    %esi,%ecx                                #! PC = 0x140737351985792 *)
mov rcx rsi;
(* mov    %edi,%eax                                #! PC = 0x140737351985794 *)
mov rax rdi;
(* and    $0x3f,%rcx                               #! PC = 0x140737351985796 *)
and    $0x3f,%%rcx                               #! 0x140737351985796 = 0x140737351985796;
(* and    $0x3f,%rax                               #! PC = 0x140737351985800 *)
and    $0x3f,%%rax                               #! 0x140737351985800 = 0x140737351985800;
(* cmp    $0x30,%ecx                               #! PC = 0x140737351985804 *)
cmp    $0x30,%%rcx                               #! 0x140737351985804 = 0x140737351985804;
(* #ja     0x7ffff7df2ad0 <strcmp+80>              #! PC = 0x140737351985807 *)
#ja     0x7ffff7df2ad0 <strcmp+80>              #! 0x140737351985807 = 0x140737351985807;
(* cmp    $0x30,%eax                               #! PC = 0x140737351985809 *)
cmp    $0x30,%%rax                               #! 0x140737351985809 = 0x140737351985809;
(* #ja     0x7ffff7df2ad0 <strcmp+80>              #! PC = 0x140737351985812 *)
#ja     0x7ffff7df2ad0 <strcmp+80>              #! 0x140737351985812 = 0x140737351985812;
(* movlpd (%rdi),%xmm1                             #! EA = L0x7ffff7dd2421; Value = 0x6c5f6e706d675f5f; PC = 0x140737351985814 *)
movlpd %%L0x7ffff7dd2421,%%xmm1                             #! L0x7ffff7dd2421 = L0x7ffff7dd2421; 0x6c5f6e706d675f5f = 0x6c5f6e706d675f5f; 0x140737351985814 = 0x140737351985814;
(* movlpd (%rsi),%xmm2                             #! EA = L0x40070d; Value = 0x6c5f6e706d675f5f; PC = 0x140737351985818 *)
movlpd %%L0x40070d,%%xmm2                             #! L0x40070d = L0x40070d; 0x6c5f6e706d675f5f = 0x6c5f6e706d675f5f; 0x140737351985818 = 0x140737351985818;
(* movhpd 0x8(%rdi),%xmm1                          #! EA = L0x7ffff7dd2429; Value = 0x5f5f007466696873; PC = 0x140737351985822 *)
movhpd %%L0x7ffff7dd2429,%%xmm1                          #! L0x7ffff7dd2429 = L0x7ffff7dd2429; 0x5f5f007466696873 = 0x5f5f007466696873; 0x140737351985822 = 0x140737351985822;
(* movhpd 0x8(%rsi),%xmm2                          #! EA = L0x400715; Value = 0x5f5f007466696873; PC = 0x140737351985827 *)
movhpd %%L0x400715,%%xmm2                          #! L0x400715 = L0x400715; 0x5f5f007466696873 = 0x5f5f007466696873; 0x140737351985827 = 0x140737351985827;
(* pxor   %xmm0,%xmm0                              #! PC = 0x140737351985832 *)
pxor   %%xmm0,%%xmm0                              #! 0x140737351985832 = 0x140737351985832;
(* pcmpeqb %xmm1,%xmm0                             #! PC = 0x140737351985836 *)
pcmpeqb %%xmm1,%%xmm0                             #! 0x140737351985836 = 0x140737351985836;
(* pcmpeqb %xmm2,%xmm1                             #! PC = 0x140737351985840 *)
pcmpeqb %%xmm2,%%xmm1                             #! 0x140737351985840 = 0x140737351985840;
(* psubb  %xmm0,%xmm1                              #! PC = 0x140737351985844 *)
psubb  %%xmm0,%%xmm1                              #! 0x140737351985844 = 0x140737351985844;
(* pmovmskb %xmm1,%edx                             #! PC = 0x140737351985848 *)
pmovmskb %%xmm1,%%rdx                             #! 0x140737351985848 = 0x140737351985848;
(* sub    $0xffff,%edx                             #! PC = 0x140737351985852 *)
subb carry rdx rdx 0xffff@uint64;
(* #jne    0x7ffff7df3e90 <strcmp+5136>            #! PC = 0x140737351985858 *)
#jne    0x7ffff7df3e90 <strcmp+5136>            #! 0x140737351985858 = 0x140737351985858;
(* bsf    %rdx,%rdx                                #! PC = 0x140737351990928 *)
bsf    %%rdx,%%rdx                                #! 0x140737351990928 = 0x140737351990928;
(* movzbl (%rsi,%rdx,1),%ecx                       #! EA = L0x40071a; Value = 0x5f6e706d675f5f00; PC = 0x140737351990932 *)
movzbl (%%rsi,%%rdx,1),%%rcx                       #! L0x40071a = L0x40071a; 0x5f6e706d675f5f00 = 0x5f6e706d675f5f00; 0x140737351990932 = 0x140737351990932;
(* movzbl (%rdi,%rdx,1),%eax                       #! EA = L0x7ffff7dd242e; Value = 0x5f6e706d675f5f00; PC = 0x140737351990936 *)
movzbl (%%rdi,%%rdx,1),%%rax                       #! L0x7ffff7dd242e = L0x7ffff7dd242e; 0x5f6e706d675f5f00 = 0x5f6e706d675f5f00; 0x140737351990936 = 0x140737351990936;
(* sub    %ecx,%eax                                #! PC = 0x140737351990940 *)
subb carry rax rax rcx;
(* #retq                                           #! PC = 0x140737351990942 *)
#retq                                           #! 0x140737351990942 = 0x140737351990942;
(* test   %eax,%eax                                #! PC = 0x140737351912768 *)
test   %%rax,%%rax                                #! 0x140737351912768 = 0x140737351912768;
(* #jne    0x7ffff7de0df7 <check_match+295>        #! PC = 0x140737351912770 *)
#jne    0x7ffff7de0df7 <check_match+295>        #! 0x140737351912770 = 0x140737351912770;
(* test   %rbp,%rbp                                #! PC = 0x140737351912776 *)
test   %%rbp,%%rbp                                #! 0x140737351912776 = 0x140737351912776;
(* mov    0x330(%r12),%rax                         #! EA = L0x7ffff7ff6330; Value = 0x00007ffff7b6003a; PC = 0x140737351912779 *)
mov rax L0x7ffff7ff6330;
(* #je     0x7ffff7de0db0 <check_match+224>        #! PC = 0x140737351912787 *)
#je     0x7ffff7de0db0 <check_match+224>        #! 0x140737351912787 = 0x140737351912787;
(* test   %rax,%rax                                #! PC = 0x140737351912880 *)
test   %%rax,%%rax                                #! 0x140737351912880 = 0x140737351912880;
(* #je     0x7ffff7de0d9b <check_match+203>        #! PC = 0x140737351912883 *)
#je     0x7ffff7de0d9b <check_match+203>        #! 0x140737351912883 = 0x140737351912883;
(* mov    0x30(%rsp),%edx                          #! EA = L0x7fffffffc0e0; Value = 0x0000000000000143; PC = 0x140737351912885 *)
mov rdx L0x7fffffffc0e0;
(* mov    %r13d,%ecx                               #! PC = 0x140737351912889 *)
mov    %r13d,%%rcx                               #! 0x140737351912889 = 0x140737351912889;
(* shl    $0x1e,%ecx                               #! PC = 0x140737351912892 *)
shl    $0x1e,%%rcx                               #! 0x140737351912892 = 0x140737351912892;
(* sar    $0x1f,%ecx                               #! PC = 0x140737351912895 *)
sar    $0x1f,%%rcx                               #! 0x140737351912895 = 0x140737351912895;
(* add    $0x3,%ecx                                #! PC = 0x140737351912898 *)
adds carry rcx rcx 0x3;
(* movzwl (%rax,%rdx,2),%eax                       #! EA = L0x7ffff7b602c0; Value = 0x0001000100010001; PC = 0x140737351912901 *)
movzwl (%%rax,%%rdx,2),%%rax                       #! L0x7ffff7b602c0 = L0x7ffff7b602c0; 0x0001000100010001 = 0x0001000100010001; 0x140737351912901 = 0x140737351912901;
(* mov    %eax,%edx                                #! PC = 0x140737351912905 *)
mov rdx rax;
(* and    $0x7fff,%edx                             #! PC = 0x140737351912907 *)
and    $0x7fff,%%rdx                             #! 0x140737351912907 = 0x140737351912907;
(* cmp    %edx,%ecx                                #! PC = 0x140737351912913 *)
cmp    %%rdx,%%rcx                                #! 0x140737351912913 = 0x140737351912913;
(* #jg     0x7ffff7de0d9b <check_match+203>        #! PC = 0x140737351912915 *)
#jg     0x7ffff7de0d9b <check_match+203>        #! 0x140737351912915 = 0x140737351912915;
(* add    $0x8,%rsp                                #! PC = 0x140737351912859 *)
adds carry rsp rsp 0x8;
(* mov    %rbx,%rax                                #! PC = 0x140737351912863 *)
mov rax rbx;
(* pop    %rbx                                     #! PC = 0x140737351912866 *)
pop rbx;
(* pop    %rbp                                     #! PC = 0x140737351912867 *)
pop rbp;
(* pop    %r12                                     #! PC = 0x140737351912868 *)
pop r12;
(* pop    %r13                                     #! PC = 0x140737351912870 *)
pop r13;
(* #retq                                           #! PC = 0x140737351912872 *)
#retq                                           #! 0x140737351912872 = 0x140737351912872;
(* add    $0x30,%rsp                               #! PC = 0x140737351915083 *)
adds carry rsp rsp 0x30;
(* test   %rax,%rax                                #! PC = 0x140737351915087 *)
test   %%rax,%%rax                                #! 0x140737351915087 = 0x140737351915087;
(* #jne    0x7ffff7de192f <do_lookup_x+2751>       #! PC = 0x140737351915090 *)
#jne    0x7ffff7de192f <do_lookup_x+2751>       #! 0x140737351915090 = 0x140737351915090;
(* mov    %ebx,%r10d                               #! PC = 0x140737351915823 *)
mov    %%rbx,%r10d                               #! 0x140737351915823 = 0x140737351915823;
(* mov    %rax,%r8                                 #! PC = 0x140737351915826 *)
mov r8 rax;
(* mov    %rbp,%rbx                                #! PC = 0x140737351915829 *)
mov rbx rbp;
(* mov    0x60(%rsp),%r14                          #! EA = L0x7fffffffc170; Value = 0x00007ffff7ff6a28; PC = 0x140737351915832 *)
mov r14 L0x7fffffffc170;
(* mov    0x68(%rsp),%r15d                         #! EA = L0x7fffffffc178; Value = 0x0000000000000000; PC = 0x140737351915837 *)
mov    %%L0x7fffffffc178,%r15d                         #! L0x7fffffffc178 = L0x7fffffffc178; 0x0000000000000000 = 0x0000000000000000; 0x140737351915837 = 0x140737351915837;
(* mov    0xd0(%rsp),%rbp                          #! EA = L0x7fffffffc1e0; Value = 0x0000000000000001; PC = 0x140737351915842 *)
mov rbp L0x7fffffffc1e0;
(* mov    0xe8(%rsp),%r13                          #! EA = L0x7fffffffc1f8; Value = 0x0000000000000000; PC = 0x140737351915850 *)
mov r13 L0x7fffffffc1f8;
(* mov    0x70(%rsp),%r12                          #! EA = L0x7fffffffc180; Value = 0x0000000000000004; PC = 0x140737351915858 *)
mov r12 L0x7fffffffc180;
(* #jmpq   0x7ffff7de1158 <do_lookup_x+744>        #! PC = 0x140737351915863 *)
#jmpq   0x7ffff7de1158 <do_lookup_x+744>        #! 0x140737351915863 = 0x140737351915863;
(* cmpq   $0x0,0xf8(%rsp)                          #! EA = L0x7fffffffc208; PC = 0x140737351913816 *)
cmpq   $0x0,%%L0x7fffffffc208                          #! L0x7fffffffc208 = L0x7fffffffc208; 0x140737351913816 = 0x140737351913816;
(* #je     0x7ffff7de1450 <do_lookup_x+1504>       #! PC = 0x140737351913825 *)
#je     0x7ffff7de1450 <do_lookup_x+1504>       #! 0x140737351913825 = 0x140737351913825;
(* movzbl 0x4(%r8),%eax                            #! EA = L0x7ffff7b5b434; Value = 0x0002943000090012; PC = 0x140737351913831 *)
movzbl %%L0x7ffff7b5b434,%%rax                            #! L0x7ffff7b5b434 = L0x7ffff7b5b434; 0x0002943000090012 = 0x0002943000090012; 0x140737351913831 = 0x140737351913831;
(* shr    $0x4,%al                                 #! PC = 0x140737351913836 *)
shr    $0x4,%al                                 #! 0x140737351913836 = 0x140737351913836;
(* cmp    $0x2,%al                                 #! PC = 0x140737351913839 *)
cmp    $0x2,%al                                 #! 0x140737351913839 = 0x140737351913839;
(* #je     0x7ffff7de1190 <do_lookup_x+800>        #! PC = 0x140737351913841 *)
#je     0x7ffff7de1190 <do_lookup_x+800>        #! 0x140737351913841 = 0x140737351913841;
(* cmp    $0xa,%al                                 #! PC = 0x140737351913843 *)
cmp    $0xa,%al                                 #! 0x140737351913843 = 0x140737351913843;
(* #je     0x7ffff7de11b8 <do_lookup_x+840>        #! PC = 0x140737351913845 *)
#je     0x7ffff7de11b8 <do_lookup_x+840>        #! 0x140737351913845 = 0x140737351913845;
(* cmp    $0x1,%al                                 #! PC = 0x140737351913847 *)
cmp    $0x1,%al                                 #! 0x140737351913847 = 0x140737351913847;
(* #je     0x7ffff7de119e <do_lookup_x+814>        #! PC = 0x140737351913849 *)
#je     0x7ffff7de119e <do_lookup_x+814>        #! 0x140737351913849 = 0x140737351913849;
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc148; Value = 0x00007fffffffc270; PC = 0x140737351913886 *)
mov rax L0x7fffffffc148;
(* mov    %r8,(%rax)                               #! EA = L0x7fffffffc270; PC = 0x140737351913891 *)
mov L0x7fffffffc270 r8;
(* mov    %rbx,0x8(%rax)                           #! EA = L0x7fffffffc278; PC = 0x140737351913894 *)
mov L0x7fffffffc278 rbx;
(* mov    $0x1,%eax                                #! PC = 0x140737351913898 *)
mov rax 0x1@uint64;
(* #jmpq   0x7ffff7de0fff <do_lookup_x+399>        #! PC = 0x140737351913903 *)
#jmpq   0x7ffff7de0fff <do_lookup_x+399>        #! 0x140737351913903 = 0x140737351913903;
(* add    $0x98,%rsp                               #! PC = 0x140737351913471 *)
adds carry rsp rsp 0x98;
(* pop    %rbx                                     #! PC = 0x140737351913478 *)
pop rbx;
(* pop    %rbp                                     #! PC = 0x140737351913479 *)
pop rbp;
(* pop    %r12                                     #! PC = 0x140737351913480 *)
pop r12;
(* pop    %r13                                     #! PC = 0x140737351913482 *)
pop r13;
(* pop    %r14                                     #! PC = 0x140737351913484 *)
pop r14;
(* pop    %r15                                     #! PC = 0x140737351913486 *)
pop r15;
(* #retq                                           #! PC = 0x140737351913488 *)
#retq                                           #! 0x140737351913488 = 0x140737351913488;
(* add    $0x30,%rsp                               #! PC = 0x140737351916319 *)
adds carry rsp rsp 0x30;
(* cmp    $0x0,%eax                                #! PC = 0x140737351916323 *)
cmp    $0x0,%%rax                                #! 0x140737351916323 = 0x140737351916323;
(* #jle    0x7ffff7de1ad0 <_dl_lookup_symbol_x+256>#! PC = 0x140737351916326 *)
#jle    0x7ffff7de1ad0 <_dl_lookup_symbol_x+256>#! 0x140737351916326 = 0x140737351916326;
(* cmpq   $0x0,-0x90(%rbp)                         #! EA = L0x7fffffffc270; PC = 0x140737351916328 *)
cmpq   $0x0,-%%L0x7fffffffc270                         #! L0x7fffffffc270 = L0x7fffffffc270; 0x140737351916328 = 0x140737351916328;
(* #je     0x7ffff7de1cd6 <_dl_lookup_symbol_x+774>#! PC = 0x140737351916336 *)
#je     0x7ffff7de1cd6 <_dl_lookup_symbol_x+774>#! 0x140737351916336 = 0x140737351916336;
(* mov    (%r15),%rcx                              #! EA = L0x7fffffffc328; Value = 0x0000000000400420; PC = 0x140737351916342 *)
mov rcx L0x7fffffffc328;
(* test   %rcx,%rcx                                #! PC = 0x140737351916345 *)
test   %%rcx,%%rcx                                #! 0x140737351916345 = 0x140737351916345;
(* #je     0x7ffff7de1b49 <_dl_lookup_symbol_x+377>#! PC = 0x140737351916348 *)
#je     0x7ffff7de1b49 <_dl_lookup_symbol_x+377>#! 0x140737351916348 = 0x140737351916348;
(* movzbl 0x5(%rcx),%eax                           #! EA = L0x400425; Value = 0x0000000000000000; PC = 0x140737351916350 *)
movzbl %%L0x400425,%%rax                           #! L0x400425 = L0x400425; 0x0000000000000000 = 0x0000000000000000; 0x140737351916350 = 0x140737351916350;
(* and    $0x3,%eax                                #! PC = 0x140737351916354 *)
and    $0x3,%%rax                                #! 0x140737351916354 = 0x140737351916354;
(* cmp    $0x3,%al                                 #! PC = 0x140737351916357 *)
cmp    $0x3,%al                                 #! 0x140737351916357 = 0x140737351916357;
(* #je     0x7ffff7de1ba8 <_dl_lookup_symbol_x+472>#! PC = 0x140737351916359 *)
#je     0x7ffff7de1ba8 <_dl_lookup_symbol_x+472>#! 0x140737351916359 = 0x140737351916359;
(* mov    -0x88(%rbp),%r9                          #! EA = L0x7fffffffc278; Value = 0x00007ffff7ff6000; PC = 0x140737351916361 *)
mov    -%%L0x7fffffffc278,%%r9                          #! L0x7fffffffc278 = L0x7fffffffc278; 0x00007ffff7ff6000 = 0x00007ffff7ff6000; 0x140737351916361 = 0x140737351916361;
(* xor    %ebx,%ebx                                #! PC = 0x140737351916368 *)
mov rbx 0@uint64;
(* movzbl 0x314(%r9),%edx                          #! EA = L0x7ffff7ff6314; Value = 0x000000000000401d; PC = 0x140737351916370 *)
movzbl %%L0x7ffff7ff6314,%%rdx                          #! L0x7ffff7ff6314 = L0x7ffff7ff6314; 0x000000000000401d = 0x000000000000401d; 0x140737351916370 = 0x140737351916370;
(* mov    %r9,%rax                                 #! PC = 0x140737351916378 *)
mov rax r9;
(* and    $0x3,%edx                                #! PC = 0x140737351916381 *)
and    $0x3,%%rdx                                #! 0x140737351916381 = 0x140737351916381;
(* cmp    $0x2,%dl                                 #! PC = 0x140737351916384 *)
cmp    $0x2,%dl                                 #! 0x140737351916384 = 0x140737351916384;
(* #je     0x7ffff7de1e6a <_dl_lookup_symbol_x+1178>#! PC = 0x140737351916387 *)
#je     0x7ffff7de1e6a <_dl_lookup_symbol_x+1178>#! 0x140737351916387 = 0x140737351916387;
(* mov    0x3cc(%rax),%edi                         #! EA = L0x7ffff7ff63cc; Value = 0x0000000000000001; PC = 0x140737351916393 *)
mov rdi L0x7ffff7ff63cc;
(* test   %edi,%edi                                #! PC = 0x140737351916399 *)
test   %%rdi,%%rdi                                #! 0x140737351916399 = 0x140737351916399;
(* #je     0x7ffff7de1ee4 <_dl_lookup_symbol_x+1300>#! PC = 0x140737351916401 *)
#je     0x7ffff7de1ee4 <_dl_lookup_symbol_x+1300>#! 0x140737351916401 = 0x140737351916401;
(* mov    0x21b123(%rip),%edx        # 0x7ffff7ffcca0 <_rtld_global_ro>#! EA = L0x7ffff7ffcca0; Value = 0x00040f1200000000; PC = 0x140737351916407 *)
mov rdx L0x7ffff7ffcca0;
(* test   $0x804,%edx                              #! PC = 0x140737351916413 *)
test   $0x804,%%rdx                              #! 0x140737351916413 = 0x140737351916413;
(* #jne    0x7ffff7de1d10 <_dl_lookup_symbol_x+832>#! PC = 0x140737351916419 *)
#jne    0x7ffff7de1d10 <_dl_lookup_symbol_x+832>#! 0x140737351916419 = 0x140737351916419;
(* mov    -0x90(%rbp),%rdx                         #! EA = L0x7fffffffc270; Value = 0x00007ffff7b5b430; PC = 0x140737351916425 *)
mov    -%%L0x7fffffffc270,%%rdx                         #! L0x7fffffffc270 = L0x7fffffffc270; 0x00007ffff7b5b430 = 0x00007ffff7b5b430; 0x140737351916425 = 0x140737351916425;
(* mov    %rdx,(%r15)                              #! EA = L0x7fffffffc328; PC = 0x140737351916432 *)
mov L0x7fffffffc328 rdx;
(* lea    -0x28(%rbp),%rsp                         #! PC = 0x140737351916435 *)
lea    -%%EA,%%rsp                         #! 0x140737351916435 = 0x140737351916435;
(* pop    %rbx                                     #! PC = 0x140737351916439 *)
pop rbx;
(* pop    %r12                                     #! PC = 0x140737351916440 *)
pop r12;
(* pop    %r13                                     #! PC = 0x140737351916442 *)
pop r13;
(* pop    %r14                                     #! PC = 0x140737351916444 *)
pop r14;
(* pop    %r15                                     #! PC = 0x140737351916446 *)
pop r15;
(* pop    %rbp                                     #! PC = 0x140737351916448 *)
pop rbp;
(* #retq                                           #! PC = 0x140737351916449 *)
#retq                                           #! 0x140737351916449 = 0x140737351916449;
(* mov    %rax,%r8                                 #! PC = 0x140737351936726 *)
mov r8 rax;
(* mov    %fs:0x18,%eax                            #! PC = 0x140737351936729 *)
mov    %fs:0x18,%%rax                            #! 0x140737351936729 = 0x140737351936729;
(* test   %eax,%eax                                #! PC = 0x140737351936737 *)
test   %%rax,%%rax                                #! 0x140737351936737 = 0x140737351936737;
(* pop    %rcx                                     #! PC = 0x140737351936739 *)
pop rcx;
(* pop    %rsi                                     #! PC = 0x140737351936740 *)
pop rsi;
(* #jne    0x7ffff7de6b60 <_dl_fixup+352>          #! PC = 0x140737351936741 *)
#jne    0x7ffff7de6b60 <_dl_fixup+352>          #! 0x140737351936741 = 0x140737351936741;
(* mov    0x8(%rsp),%rsi                           #! EA = L0x7fffffffc328; Value = 0x00007ffff7b5b430; PC = 0x140737351936743 *)
mov rsi L0x7fffffffc328;
(* test   %rsi,%rsi                                #! PC = 0x140737351936748 *)
test   %%rsi,%%rsi                                #! 0x140737351936748 = 0x140737351936748;
(* #je     0x7ffff7de6b30 <_dl_fixup+304>          #! PC = 0x140737351936751 *)
#je     0x7ffff7de6b30 <_dl_fixup+304>          #! 0x140737351936751 = 0x140737351936751;
(* test   %r8,%r8                                  #! PC = 0x140737351936753 *)
test   %%r8,%%r8                                  #! 0x140737351936753 = 0x140737351936753;
(* #je     0x7ffff7de6b38 <_dl_fixup+312>          #! PC = 0x140737351936756 *)
#je     0x7ffff7de6b38 <_dl_fixup+312>          #! 0x140737351936756 = 0x140737351936756;
(* mov    (%r8),%rax                               #! EA = L0x7ffff7ff6000; Value = 0x00007ffff7b58000; PC = 0x140737351936758 *)
mov rax L0x7ffff7ff6000;
(* movzbl 0x4(%rsi),%edx                           #! EA = L0x7ffff7b5b434; Value = 0x0002943000090012; PC = 0x140737351936761 *)
movzbl %%L0x7ffff7b5b434,%%rdx                           #! L0x7ffff7b5b434 = L0x7ffff7b5b434; 0x0002943000090012 = 0x0002943000090012; 0x140737351936761 = 0x140737351936761;
(* add    0x8(%rsi),%rax                           #! EA = L0x7ffff7b5b438; Value = 0x0000000000029430; PC = 0x140737351936765 *)
adds carry rax rax L0x7ffff7b5b438;
(* and    $0xf,%edx                                #! PC = 0x140737351936769 *)
and    $0xf,%%rdx                                #! 0x140737351936769 = 0x140737351936769;
(* cmp    $0xa,%dl                                 #! PC = 0x140737351936772 *)
cmp    $0xa,%dl                                 #! 0x140737351936772 = 0x140737351936772;
(* #je     0x7ffff7de6ba0 <_dl_fixup+416>          #! PC = 0x140737351936775 *)
#je     0x7ffff7de6ba0 <_dl_fixup+416>          #! 0x140737351936775 = 0x140737351936775;
(* mov    0x2161d5(%rip),%edx        # 0x7ffff7ffcce8 <_rtld_global_ro+72>#! EA = L0x7ffff7ffcce8; Value = 0x0000000000000000; PC = 0x140737351936781 *)
mov rdx L0x7ffff7ffcce8;
(* test   %edx,%edx                                #! PC = 0x140737351936787 *)
test   %%rdx,%%rdx                                #! 0x140737351936787 = 0x140737351936787;
(* #jne    0x7ffff7de6b1a <_dl_fixup+282>          #! PC = 0x140737351936789 *)
#jne    0x7ffff7de6b1a <_dl_fixup+282>          #! 0x140737351936789 = 0x140737351936789;
(* mov    %rax,(%rbx)                              #! EA = L0x46c020; PC = 0x140737351936791 *)
mov L0x46c020 rax;
(* add    $0x10,%rsp                               #! PC = 0x140737351936794 *)
adds carry rsp rsp 0x10;
(* pop    %rbx                                     #! PC = 0x140737351936798 *)
pop rbx;
(* #retq                                           #! PC = 0x140737351936799 *)
#retq                                           #! 0x140737351936799 = 0x140737351936799;
(* mov    %rax,%r11                                #! PC = 0x140737351970650 *)
mov r11 rax;
(* mov    $0xee,%eax                               #! PC = 0x140737351970653 *)
mov rax 0xee@uint64;
(* xor    %edx,%edx                                #! PC = 0x140737351970658 *)
mov rdx 0@uint64;
(* xrstor 0x40(%rsp)                               #! EA = L0x7fffffffc380; PC = 0x140737351970660 *)
xrstor %%L0x7fffffffc380                               #! L0x7fffffffc380 = L0x7fffffffc380; 0x140737351970660 = 0x140737351970660;
(* mov    0x30(%rsp),%r9                           #! EA = L0x7fffffffc370; Value = 0x07614d36c779b6f9; PC = 0x140737351970665 *)
mov r9 L0x7fffffffc370;
(* mov    0x28(%rsp),%r8                           #! EA = L0x7fffffffc368; Value = 0x03b3a8afb6a742d5; PC = 0x140737351970670 *)
mov r8 L0x7fffffffc368;
(* mov    0x20(%rsp),%rdi                          #! EA = L0x7fffffffc360; Value = 0x00007fffffffd0f8; PC = 0x140737351970675 *)
mov rdi L0x7fffffffc360;
(* mov    0x18(%rsp),%rsi                          #! EA = L0x7fffffffc358; Value = 0x00007fffffffd0f8; PC = 0x140737351970680 *)
mov rsi L0x7fffffffc358;
(* mov    0x10(%rsp),%rdx                          #! EA = L0x7fffffffc350; Value = 0x0000000000000007; PC = 0x140737351970685 *)
mov rdx L0x7fffffffc350;
(* mov    0x8(%rsp),%rcx                           #! EA = L0x7fffffffc348; Value = 0x0000000000000002; PC = 0x140737351970690 *)
mov rcx L0x7fffffffc348;
(* mov    (%rsp),%rax                              #! EA = L0x7fffffffc340; Value = 0x76c0e74d94ba4bee; PC = 0x140737351970695 *)
mov rax L0x7fffffffc340;
(* mov    %rbx,%rsp                                #! PC = 0x140737351970699 *)
mov rsp rbx;
(* mov    (%rsp),%rbx                              #! EA = L0x7fffffffcd40; Value = 0x00007fffffffd0d0; PC = 0x140737351970702 *)
mov rbx L0x7fffffffcd40;
(* add    $0x18,%rsp                               #! PC = 0x140737351970706 *)
adds carry rsp rsp 0x18;
(* bnd jmpq *%r11                                  #! PC = 0x140737351970710 *)
bnd jmpq *%%r11                                  #! 0x140737351970710 = 0x140737351970710;
(* xor    %eax,%eax                                #! PC = 0x140737349424176 *)

/* NOTE: real gmpn_lshift start */


mov rax 0@uint64;
(* test   $0x1,%dl                                 #! PC = 0x140737349424178 *)
test   $0x1,%dl                                 #! 0x140737349424178 = 0x140737349424178;
(* #jne    0x7ffff7b8145e <__gmpn_lshift+46>       #! PC = 0x140737349424181 *)
#jne    0x7ffff7b8145e <__gmpn_lshift+46>       #! 0x140737349424181 = 0x140737349424181;
(* test   $0x2,%dl                                 #! PC = 0x140737349424222 *)
test   $0x2,%dl                                 #! 0x140737349424222 = 0x140737349424222;
(* #jne    0x7ffff7b814b0 <__gmpn_lshift+128>      #! PC = 0x140737349424225 *)
#jne    0x7ffff7b814b0 <__gmpn_lshift+128>      #! 0x140737349424225 = 0x140737349424225;
(* lea    -0x20(%rsi,%rdx,8),%rsi                  #! PC = 0x140737349424304 *)
lea    -0x20(%%rsi,%%rdx,8),%%rsi                  #! 0x140737349424304 = 0x140737349424304;
(* lea    -0x8(%rdi,%rdx,8),%rdi                   #! PC = 0x140737349424309 *)
lea    -0x8(%%rdi,%%rdx,8),%%rdi                   #! 0x140737349424309 = 0x140737349424309;
(* mov    0x18(%rsi),%r11                          #! EA = L0x7fffffffd128; Value = 0xfff5a80c102a0786; PC = 0x140737349424314 *)
mov r11 L0x7fffffffd128;
(* mov    0x10(%rsi),%r8                           #! EA = L0x7fffffffd120; Value = 0x6f2d078ff4692a11; PC = 0x140737349424318 *)
mov r8 L0x7fffffffd120;
(* mov    0x8(%rsi),%r9                            #! EA = L0x7fffffffd118; Value = 0xe074dbbfa632a1df; PC = 0x140737349424322 *)
mov r9 L0x7fffffffd118;
(* shld   %cl,%r11,%rax                            #! PC = 0x140737349424326 *)
shld   %cl,%%r11,%%rax                            #! 0x140737349424326 = 0x140737349424326;
(* shr    $0x2,%rdx                                #! PC = 0x140737349424330 *)
shr    $0x2,%%rdx                                #! 0x140737349424330 = 0x140737349424330;
(* #je     0x7ffff7b8150b <__gmpn_lshift+219>      #! PC = 0x140737349424334 *)
#je     0x7ffff7b8150b <__gmpn_lshift+219>      #! 0x140737349424334 = 0x140737349424334;
(* shld   %cl,%r8,%r11                             #! PC = 0x140737349424336 *)
shld   %cl,%%r8,%%r11                             #! 0x140737349424336 = 0x140737349424336;
(* mov    (%rsi),%r10                              #! EA = L0x7fffffffd110; Value = 0x91982323dfffd69c; PC = 0x140737349424340 *)
mov r10 L0x7fffffffd110;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffd128; PC = 0x140737349424343 *)
mov L0x7fffffffd128 r11;
(* shld   %cl,%r9,%r8                              #! PC = 0x140737349424346 *)
shld   %cl,%%r9,%%r8                              #! 0x140737349424346 = 0x140737349424346;
(* mov    -0x8(%rsi),%r11                          #! EA = L0x7fffffffd108; Value = 0x1e670bd55050921d; PC = 0x140737349424350 *)
mov    -%%L0x7fffffffd108,%%r11                          #! L0x7fffffffd108 = L0x7fffffffd108; 0x1e670bd55050921d = 0x1e670bd55050921d; 0x140737349424350 = 0x140737349424350;
(* mov    %r8,-0x8(%rdi)                           #! EA = L0x7fffffffd120; PC = 0x140737349424354 *)
mov    %%r8,-%%L0x7fffffffd120                           #! L0x7fffffffd120 = L0x7fffffffd120; 0x140737349424354 = 0x140737349424354;
(* shld   %cl,%r10,%r9                             #! PC = 0x140737349424358 *)
shld   %cl,%%r10,%%r9                             #! 0x140737349424358 = 0x140737349424358;
(* mov    -0x10(%rsi),%r8                          #! EA = L0x7fffffffd100; Value = 0x4c37c9435d0df44e; PC = 0x140737349424362 *)
mov    -%%L0x7fffffffd100,%%r8                          #! L0x7fffffffd100 = L0x7fffffffd100; 0x4c37c9435d0df44e = 0x4c37c9435d0df44e; 0x140737349424362 = 0x140737349424362;
(* mov    %r9,-0x10(%rdi)                          #! EA = L0x7fffffffd118; PC = 0x140737349424366 *)
mov    %%r9,-%%L0x7fffffffd118                          #! L0x7fffffffd118 = L0x7fffffffd118; 0x140737349424366 = 0x140737349424366;
(* shld   %cl,%r11,%r10                            #! PC = 0x140737349424370 *)
shld   %cl,%%r11,%%r10                            #! 0x140737349424370 = 0x140737349424370;
(* mov    -0x18(%rsi),%r9                          #! EA = L0x7fffffffd0f8; Value = 0x292d09f78265985a; PC = 0x140737349424374 *)
mov    -%%L0x7fffffffd0f8,%%r9                          #! L0x7fffffffd0f8 = L0x7fffffffd0f8; 0x292d09f78265985a = 0x292d09f78265985a; 0x140737349424374 = 0x140737349424374;
(* add    $0xffffffffffffffe0,%rsi                 #! PC = 0x140737349424378 *)
adds carry rsi rsi 0xffffffffffffffe0;
(* mov    %r10,-0x18(%rdi)                         #! EA = L0x7fffffffd110; PC = 0x140737349424382 *)
mov    %%r10,-%%L0x7fffffffd110                         #! L0x7fffffffd110 = L0x7fffffffd110; 0x140737349424382 = 0x140737349424382;
(* add    $0xffffffffffffffe0,%rdi                 #! PC = 0x140737349424386 *)
adds carry rdi rdi 0xffffffffffffffe0;
(* dec    %rdx                                     #! PC = 0x140737349424390 *)
dec    %%rdx                                     #! 0x140737349424390 = 0x140737349424390;
(* #jne    0x7ffff7b814d0 <__gmpn_lshift+160>      #! PC = 0x140737349424393 *)
#jne    0x7ffff7b814d0 <__gmpn_lshift+160>      #! 0x140737349424393 = 0x140737349424393;
(* shld   %cl,%r8,%r11                             #! PC = 0x140737349424395 *)
shld   %cl,%%r8,%%r11                             #! 0x140737349424395 = 0x140737349424395;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffd108; PC = 0x140737349424399 *)
mov L0x7fffffffd108 r11;
(* shld   %cl,%r9,%r8                              #! PC = 0x140737349424402 *)
shld   %cl,%%r9,%%r8                              #! 0x140737349424402 = 0x140737349424402;
(* mov    %r8,-0x8(%rdi)                           #! EA = L0x7fffffffd100; PC = 0x140737349424406 *)
mov    %%r8,-%%L0x7fffffffd100                           #! L0x7fffffffd100 = L0x7fffffffd100; 0x140737349424406 = 0x140737349424406;
(* shl    %cl,%r9                                  #! PC = 0x140737349424410 *)
shl    %cl,%%r9                                  #! 0x140737349424410 = 0x140737349424410;
(* mov    %r9,-0x10(%rdi)                          #! EA = L0x7fffffffd0f8; PC = 0x140737349424413 *)
mov    %%r9,-%%L0x7fffffffd0f8                          #! L0x7fffffffd0f8 = L0x7fffffffd0f8; 0x140737349424413 = 0x140737349424413;
(* #retq                                           #! PC = 0x140737349424417 *)
#retq                                           #! 0x140737349424417 = 0x140737349424417;
/* NOTE: real gmpn_lshift end */

(* #callq  0x401d10 <fp_prime_get>                 #! PC = 0x4283916 *)
#callq  0x401d10 <fp_prime_get>                 #! 0x4283916 = 0x4283916;
(* sub    $0x8,%rsp                                #! PC = 0x4201744 *)
subb carry rsp rsp 0x8@uint64;
(* #callq  0x401520 <core_get>                     #! PC = 0x4201748 *)
#callq  0x401520 <core_get>                     #! 0x4201748 = 0x4201748;
(* mov    0x6abe9(%rip),%rax        # 0x46c110 <core_ctx>#! EA = L0x46c110; Value = 0x000000000046c120; PC = 0x4199712 *)
mov rax L0x46c110;
(* #retq                                           #! PC = 0x4199719 *)
#retq                                           #! 0x4199719 = 0x4199719;
(* add    $0x8,%rsp                                #! PC = 0x4201753 *)
adds carry rsp rsp 0x8;
(* add    $0xfa508,%rax                            #! PC = 0x4201757 *)
adds carry rax rax 0xfa508;
(* #retq                                           #! PC = 0x4201763 *)
#retq                                           #! 0x4201763 = 0x4201763;
(* lea    0x30(%rbx),%rdi                          #! PC = 0x4283921 *)
lea    %%EA,%%rdi                          #! 0x4283921 = 0x4283921;
(* mov    %rax,%rdx                                #! PC = 0x4283925 *)
mov rdx rax;
(* mov    %rdi,%rsi                                #! PC = 0x4283928 *)
mov rsi rdi;
(* #callq  0x417fda <fp_addn_low>                  #! PC = 0x4283931 *)
#callq  0x417fda <fp_addn_low>                  #! 0x4283931 = 0x4283931;
(* xor    %rax,%rax                                #! PC = 0x4292570 *)
mov rax 0@uint64;
(* mov    (%rdx),%r11                              #! EA = L0x566628; Value = 0xb9feffffffffaaab; PC = 0x4292573 *)
mov r11 L0x566628;
(* add    (%rsi),%r11                              #! EA = L0x7fffffffd100; Value = 0x30df250d7437d138; PC = 0x4292576 *)
adds carry r11 r11 L0x7fffffffd100;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffd100; PC = 0x4292579 *)
mov L0x7fffffffd100 r11;
(* mov    0x8(%rdx),%r11                           #! EA = L0x566630; Value = 0x1eabfffeb153ffff; PC = 0x4292582 *)
mov r11 L0x566630;
(* adc    0x8(%rsi),%r11                           #! EA = L0x7fffffffd108; Value = 0x799c2f5541424875; PC = 0x4292586 *)
adcs carry r11 r11 L0x7fffffffd108 carry;
(* mov    %r11,0x8(%rdi)                           #! EA = L0x7fffffffd108; PC = 0x4292590 *)
mov L0x7fffffffd108 r11;
(* mov    0x10(%rdx),%r11                          #! EA = L0x566638; Value = 0x6730d2a0f6b0f624; PC = 0x4292594 *)
mov r11 L0x566638;
(* adc    0x10(%rsi),%r11                          #! EA = L0x7fffffffd110; Value = 0x46608c8f7fff5a70; PC = 0x4292598 *)
adcs carry r11 r11 L0x7fffffffd110 carry;
(* mov    %r11,0x10(%rdi)                          #! EA = L0x7fffffffd110; PC = 0x4292602 *)
mov L0x7fffffffd110 r11;
(* mov    0x18(%rdx),%r11                          #! EA = L0x566640; Value = 0x64774b84f38512bf; PC = 0x4292606 *)
mov r11 L0x566640;
(* adc    0x18(%rsi),%r11                          #! EA = L0x7fffffffd118; Value = 0x81d36efe98ca877e; PC = 0x4292610 *)
adcs carry r11 r11 L0x7fffffffd118 carry;
(* mov    %r11,0x18(%rdi)                          #! EA = L0x7fffffffd118; PC = 0x4292614 *)
mov L0x7fffffffd118 r11;
(* mov    0x20(%rdx),%r11                          #! EA = L0x566648; Value = 0x4b1ba7b6434bacd7; PC = 0x4292618 *)
mov r11 L0x566648;
(* adc    0x20(%rsi),%r11                          #! EA = L0x7fffffffd120; Value = 0xbcb41e3fd1a4a847; PC = 0x4292622 *)
adcs carry r11 r11 L0x7fffffffd120 carry;
(* mov    %r11,0x20(%rdi)                          #! EA = L0x7fffffffd120; PC = 0x4292626 *)
mov L0x7fffffffd120 r11;
(* mov    0x28(%rdx),%r11                          #! EA = L0x566650; Value = 0x1a0111ea397fe69a; PC = 0x4292630 *)
mov r11 L0x566650;
(* adc    0x28(%rsi),%r11                          #! EA = L0x7fffffffd128; Value = 0xffd6a03040a81e19; PC = 0x4292634 *)
adcs carry r11 r11 L0x7fffffffd128 carry;
(* mov    %r11,0x28(%rdi)                          #! EA = L0x7fffffffd128; PC = 0x4292638 *)
mov L0x7fffffffd128 r11;
(* adc    $0x0,%rax                                #! PC = 0x4292642 *)
adcs carry rax rax 0x0@uint64 carry;
(* #retq                                           #! PC = 0x4292646 *)
#retq                                           #! 0x4292646 = 0x4292646;
(* mov    %r12,%rsi                                #! PC = 0x4283936 *)
mov rsi r12;
(* mov    %r12,%rdi                                #! PC = 0x4283939 *)
mov rdi r12;
(* mov    $0x2,%ecx                                #! PC = 0x4283942 *)
mov rcx 0x2@uint64;
(* mov    $0x7,%edx                                #! PC = 0x4283947 *)
mov rdx 0x7@uint64;
(* #callq  0x448050 <bn_rshb_low>                  #! PC = 0x4283952 *)
#callq  0x448050 <bn_rshb_low>                  #! 0x4283952 = 0x4283952;
(* movslq %edx,%rdx                                #! PC = 0x4489296 *)
movslq %%rdx,%%rdx                                #! 0x4489296 = 0x4489296;
(* #jmpq   0x401050 <__gmpn_rshift@plt>            #! PC = 0x4489299 *)
#jmpq   0x401050 <__gmpn_rshift@plt>            #! 0x4489299 = 0x4489299;
(* #jmpq   *0x6afd2(%rip)        # 0x46c028        #! PC = 0x4198480 *)
#jmpq   *%%EA        # 0x46c028        #! 0x4198480 = 0x4198480;
(* xor    %eax,%eax                                #! PC = 0x140737349424432 *)
mov rax 0@uint64;
(* test   $0x1,%dl                                 #! PC = 0x140737349424434 *)
test   $0x1,%dl                                 #! 0x140737349424434 = 0x140737349424434;
(* #jne    0x7ffff7b8155c <__gmpn_rshift+44>       #! PC = 0x140737349424437 *)
#jne    0x7ffff7b8155c <__gmpn_rshift+44>       #! 0x140737349424437 = 0x140737349424437;
(* test   $0x2,%dl                                 #! PC = 0x140737349424476 *)
test   $0x2,%dl                                 #! 0x140737349424476 = 0x140737349424476;
(* #jne    0x7ffff7b815a4 <__gmpn_rshift+116>      #! PC = 0x140737349424479 *)
#jne    0x7ffff7b815a4 <__gmpn_rshift+116>      #! 0x140737349424479 = 0x140737349424479;
(* lea    0x20(%rsi),%rsi                          #! PC = 0x140737349424548 *)
lea    %%EA,%%rsi                          #! 0x140737349424548 = 0x140737349424548;
(* mov    -0x20(%rsi),%r11                         #! EA = L0x7fffffffd0f8; Value = 0xa4b427de09966168; PC = 0x140737349424552 *)
mov    -%%L0x7fffffffd0f8,%%r11                         #! L0x7fffffffd0f8 = L0x7fffffffd0f8; 0xa4b427de09966168 = 0xa4b427de09966168; 0x140737349424552 = 0x140737349424552;
(* mov    -0x18(%rsi),%r8                          #! EA = L0x7fffffffd100; Value = 0xeade250d74377be3; PC = 0x140737349424556 *)
mov    -%%L0x7fffffffd100,%%r8                          #! L0x7fffffffd100 = L0x7fffffffd100; 0xeade250d74377be3 = 0xeade250d74377be3; 0x140737349424556 = 0x140737349424556;
(* mov    -0x10(%rsi),%r9                          #! EA = L0x7fffffffd108; Value = 0x98482f53f2964874; PC = 0x140737349424560 *)
mov    -%%L0x7fffffffd108,%%r9                          #! L0x7fffffffd108 = L0x7fffffffd108; 0x98482f53f2964874 = 0x98482f53f2964874; 0x140737349424560 = 0x140737349424560;
(* shrd   %cl,%r11,%rax                            #! PC = 0x140737349424564 *)
shrd   %cl,%%r11,%%rax                            #! 0x140737349424564 = 0x140737349424564;
(* shr    $0x2,%rdx                                #! PC = 0x140737349424568 *)
shr    $0x2,%%rdx                                #! 0x140737349424568 = 0x140737349424568;
(* #je     0x7ffff7b815fb <__gmpn_rshift+203>      #! PC = 0x140737349424572 *)
#je     0x7ffff7b815fb <__gmpn_rshift+203>      #! 0x140737349424572 = 0x140737349424572;
(* xchg   %ax,%ax                                  #! PC = 0x140737349424574 *)
xchg   %ax,%ax                                  #! 0x140737349424574 = 0x140737349424574;
(* shrd   %cl,%r8,%r11                             #! PC = 0x140737349424576 *)
shrd   %cl,%%r8,%%r11                             #! 0x140737349424576 = 0x140737349424576;
(* mov    -0x8(%rsi),%r10                          #! EA = L0x7fffffffd110; Value = 0xad915f3076b05094; PC = 0x140737349424580 *)
mov    -%%L0x7fffffffd110,%%r10                          #! L0x7fffffffd110 = L0x7fffffffd110; 0xad915f3076b05094 = 0xad915f3076b05094; 0x140737349424580 = 0x140737349424580;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffd0f8; PC = 0x140737349424584 *)
mov L0x7fffffffd0f8 r11;
(* shrd   %cl,%r9,%r8                              #! PC = 0x140737349424587 *)
shrd   %cl,%%r9,%%r8                              #! 0x140737349424587 = 0x140737349424587;
(* mov    (%rsi),%r11                              #! EA = L0x7fffffffd118; Value = 0xe64aba838c4f9a3d; PC = 0x140737349424591 *)
mov r11 L0x7fffffffd118;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd100; PC = 0x140737349424594 *)
mov L0x7fffffffd100 r8;
(* shrd   %cl,%r10,%r9                             #! PC = 0x140737349424598 *)
shrd   %cl,%%r10,%%r9                             #! 0x140737349424598 = 0x140737349424598;
(* mov    0x8(%rsi),%r8                            #! EA = L0x7fffffffd120; Value = 0x07cfc5f614f0551e; PC = 0x140737349424602 *)
mov r8 L0x7fffffffd120;
(* mov    %r9,0x10(%rdi)                           #! EA = L0x7fffffffd108; PC = 0x140737349424606 *)
mov L0x7fffffffd108 r9;
(* shrd   %cl,%r11,%r10                            #! PC = 0x140737349424610 *)
shrd   %cl,%%r11,%%r10                            #! 0x140737349424610 = 0x140737349424610;
(* mov    0x10(%rsi),%r9                           #! EA = L0x7fffffffd128; Value = 0x19d7b21a7a2804b4; PC = 0x140737349424614 *)
mov r9 L0x7fffffffd128;
(* add    $0x20,%rsi                               #! PC = 0x140737349424618 *)
adds carry rsi rsi 0x20;
(* mov    %r10,0x18(%rdi)                          #! EA = L0x7fffffffd110; PC = 0x140737349424622 *)
mov L0x7fffffffd110 r10;
(* add    $0x20,%rdi                               #! PC = 0x140737349424626 *)
adds carry rdi rdi 0x20;
(* dec    %rdx                                     #! PC = 0x140737349424630 *)
dec    %%rdx                                     #! 0x140737349424630 = 0x140737349424630;
(* #jne    0x7ffff7b815c0 <__gmpn_rshift+144>      #! PC = 0x140737349424633 *)
#jne    0x7ffff7b815c0 <__gmpn_rshift+144>      #! 0x140737349424633 = 0x140737349424633;
(* shrd   %cl,%r8,%r11                             #! PC = 0x140737349424635 *)
shrd   %cl,%%r8,%%r11                             #! 0x140737349424635 = 0x140737349424635;
(* mov    %r11,(%rdi)                              #! EA = L0x7fffffffd118; PC = 0x140737349424639 *)
mov L0x7fffffffd118 r11;
(* shrd   %cl,%r9,%r8                              #! PC = 0x140737349424642 *)
shrd   %cl,%%r9,%%r8                              #! 0x140737349424642 = 0x140737349424642;
(* mov    %r8,0x8(%rdi)                            #! EA = L0x7fffffffd120; PC = 0x140737349424646 *)
mov L0x7fffffffd120 r8;
(* shr    %cl,%r9                                  #! PC = 0x140737349424650 *)
shr    %cl,%%r9                                  #! 0x140737349424650 = 0x140737349424650;
(* mov    %r9,0x10(%rdi)                           #! EA = L0x7fffffffd128; PC = 0x140737349424653 *)
mov L0x7fffffffd128 r9;
(* #retq                                           #! PC = 0x140737349424657 *)
#retq                                           #! 0x140737349424657 = 0x140737349424657;
(* add    $0x120,%rsp                              #! PC = 0x4283957 *)
adds carry rsp rsp 0x120;
(* pop    %rbx                                     #! PC = 0x4283964 *)
pop rbx;
(* pop    %rbp                                     #! PC = 0x4283965 *)
pop rbp;
(* pop    %r12                                     #! PC = 0x4283966 *)
pop r12;
(* pop    %r13                                     #! PC = 0x4283968 *)
pop r13;
(* pop    %r14                                     #! PC = 0x4283970 *)
pop r14;
(* #retq                                           #! PC = 0x4283972 *)
#retq                                           #! 0x4283972 = 0x4283972;

{
  true
  &&
  true
}
