#! /bin/bash

#C="$0"
#O=`pwd`
#
###C=`readlink -f "$C"`:::
#cd `dirname "$C"`
#C=`basename "$C"`
#
## Iterate down a (possible) chain of symlinks
#while [ -L "$C" ]
#do
#    C=`readlink "$C"`
#    cd `dirname "$C"`
#    C=`basename "$C"`
#done
#
#cd `dirname "$C"`
#C=`pwd`
#C=`dirname "$C"`
#C=`ls -d1 "$C"`
#
#cd "$O"

# NOTE: if you moved this config please either use the above or
# make sure the following variables are up to date
#prefix="$C"
#exec_prefix=${prefix}
#includedir=${prefix}/include
#libdir=${exec_prefix}/lib

prefix=/usr/local
exec_prefix=${prefix}

includedir=${prefix}/include
libdir=${exec_prefix}/lib

ECHO="echo"
ECHOn="printf"

usage()
{
    cat <<EOF
Usage: libsingular-config [OPTION]

Known values for OPTION are:

  --prefix		show libsingular installation prefix
  --libs		print library linking information
  --cflags		print pre-processor and compiler flags
  --help		display this help and exit
  --version		output version information

EOF

    exit $1
}

if test $# -eq 0; then
    usage 1
fi

cflags=false
libs=false

while test $# -gt 0; do
    case "$1" in
    -*=*) optarg=`${ECHO} "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) optarg= ;;
    esac

    case "$1" in
    --prefix=*)
	prefix=$optarg
	;;

    --prefix)
	${ECHO} $prefix
	;;

    --version)
	${ECHO} 4.4.0
	exit 0
	;;

    --help)
	usage 0
	;;

    --cflags)
    #### -I/home/wangzh/crypt/cryptoline/tools/singular-4.4.0p6 -I/home/wangzh/crypt/cryptoline/tools/singular-4.4.0p6/factory -I/home/wangzh/crypt/cryptoline/tools/singular-4.4.0p6/factory/include
	${ECHOn} " -I${includedir} -I${includedir}/singular -DSING_NDEBUG -DOM_NDEBUG     "
	;;

    --libs)
	${ECHOn} " -L${libdir} -lSingular -lpolys -lsingular_resources -lfactory -lomalloc "
	;;

    *)
	usage
	exit 1
	;;
    esac
    shift
done
${ECHO}

exit 0
